
Calendar_01.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000033f8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000064  00800060  000033f8  0000348c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000026  008000c4  008000c4  000034f0  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000034f0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000354c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000148  00000000  00000000  00003588  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002765  00000000  00000000  000036d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000866  00000000  00000000  00005e35  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000018d1  00000000  00000000  0000669b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000684  00000000  00000000  00007f6c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005fe  00000000  00000000  000085f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001afc  00000000  00000000  00008bee  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000150  00000000  00000000  0000a6ea  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 39 00 	jmp	0x72	; 0x72 <__ctors_end>
       4:	0c 94 8b 11 	jmp	0x2316	; 0x2316 <__vector_1>
       8:	0c 94 f3 11 	jmp	0x23e6	; 0x23e6 <__vector_2>
       c:	0c 94 4f 12 	jmp	0x249e	; 0x249e <__vector_3>
      10:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
      14:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
      18:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
      1c:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
      20:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
      24:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
      28:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
      2c:	0c 94 36 0e 	jmp	0x1c6c	; 0x1c6c <__vector_11>
      30:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
      34:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
      38:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
      3c:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
      40:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
      44:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
      48:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
      4c:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
      50:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
      54:	05 a8       	ldd	r0, Z+53	; 0x35
      56:	4c cd       	rjmp	.-1384   	; 0xfffffaf0 <__eeprom_end+0xff7efaf0>
      58:	b2 d4       	rcall	.+2404   	; 0x9be <jdFromDate+0x126>
      5a:	4e b9       	out	0x0e, r20	; 14
      5c:	38 36       	cpi	r19, 0x68	; 104
      5e:	a9 02       	muls	r26, r25
      60:	0c 50       	subi	r16, 0x0C	; 12
      62:	b9 91       	ld	r27, Y+
      64:	86 88       	ldd	r8, Z+22	; 0x16
      66:	08 3c       	cpi	r16, 0xC8	; 200
      68:	a6 aa       	std	Z+54, r10	; 0x36
      6a:	aa 2a       	or	r10, r26
      6c:	be 00       	.word	0x00be	; ????
      6e:	00 00       	nop
      70:	80 3f       	cpi	r24, 0xF0	; 240

00000072 <__ctors_end>:
      72:	11 24       	eor	r1, r1
      74:	1f be       	out	0x3f, r1	; 63
      76:	cf e5       	ldi	r28, 0x5F	; 95
      78:	d8 e0       	ldi	r29, 0x08	; 8
      7a:	de bf       	out	0x3e, r29	; 62
      7c:	cd bf       	out	0x3d, r28	; 61

0000007e <__do_copy_data>:
      7e:	10 e0       	ldi	r17, 0x00	; 0
      80:	a0 e6       	ldi	r26, 0x60	; 96
      82:	b0 e0       	ldi	r27, 0x00	; 0
      84:	e8 ef       	ldi	r30, 0xF8	; 248
      86:	f3 e3       	ldi	r31, 0x33	; 51
      88:	02 c0       	rjmp	.+4      	; 0x8e <__do_copy_data+0x10>
      8a:	05 90       	lpm	r0, Z+
      8c:	0d 92       	st	X+, r0
      8e:	a4 3c       	cpi	r26, 0xC4	; 196
      90:	b1 07       	cpc	r27, r17
      92:	d9 f7       	brne	.-10     	; 0x8a <__do_copy_data+0xc>

00000094 <__do_clear_bss>:
      94:	20 e0       	ldi	r18, 0x00	; 0
      96:	a4 ec       	ldi	r26, 0xC4	; 196
      98:	b0 e0       	ldi	r27, 0x00	; 0
      9a:	01 c0       	rjmp	.+2      	; 0x9e <.do_clear_bss_start>

0000009c <.do_clear_bss_loop>:
      9c:	1d 92       	st	X+, r1

0000009e <.do_clear_bss_start>:
      9e:	aa 3e       	cpi	r26, 0xEA	; 234
      a0:	b2 07       	cpc	r27, r18
      a2:	e1 f7       	brne	.-8      	; 0x9c <.do_clear_bss_loop>
      a4:	0e 94 a8 0d 	call	0x1b50	; 0x1b50 <main>
      a8:	0c 94 fa 19 	jmp	0x33f4	; 0x33f4 <_exit>

000000ac <__bad_interrupt>:
      ac:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000b0 <TWI_Init>:
		}
		if(count == 2) {
			A_Minute++;
			if(A_Minute > 59) A_Minute = 0;
		}
		Display();
      b0:	11 b8       	out	0x01, r1	; 1
      b2:	80 e2       	ldi	r24, 0x20	; 32
      b4:	80 b9       	out	0x00, r24	; 0
      b6:	84 e8       	ldi	r24, 0x84	; 132
      b8:	86 bf       	out	0x36, r24	; 54
      ba:	08 95       	ret

000000bc <TWI_DS1307_wadr>:
      bc:	94 ea       	ldi	r25, 0xA4	; 164
      be:	96 bf       	out	0x36, r25	; 54
      c0:	06 b6       	in	r0, 0x36	; 54
      c2:	07 fe       	sbrs	r0, 7
      c4:	fd cf       	rjmp	.-6      	; 0xc0 <TWI_DS1307_wadr+0x4>
      c6:	91 b1       	in	r25, 0x01	; 1
      c8:	98 7f       	andi	r25, 0xF8	; 248
      ca:	98 30       	cpi	r25, 0x08	; 8
      cc:	11 f0       	breq	.+4      	; 0xd2 <TWI_DS1307_wadr+0x16>
      ce:	81 b1       	in	r24, 0x01	; 1
      d0:	08 95       	ret
      d2:	90 ed       	ldi	r25, 0xD0	; 208
      d4:	93 b9       	out	0x03, r25	; 3
      d6:	94 e8       	ldi	r25, 0x84	; 132
      d8:	96 bf       	out	0x36, r25	; 54
      da:	06 b6       	in	r0, 0x36	; 54
      dc:	07 fe       	sbrs	r0, 7
      de:	fd cf       	rjmp	.-6      	; 0xda <TWI_DS1307_wadr+0x1e>
      e0:	91 b1       	in	r25, 0x01	; 1
      e2:	98 7f       	andi	r25, 0xF8	; 248
      e4:	98 31       	cpi	r25, 0x18	; 24
      e6:	11 f0       	breq	.+4      	; 0xec <TWI_DS1307_wadr+0x30>
      e8:	81 b1       	in	r24, 0x01	; 1
      ea:	08 95       	ret
      ec:	83 b9       	out	0x03, r24	; 3
      ee:	84 e8       	ldi	r24, 0x84	; 132
      f0:	86 bf       	out	0x36, r24	; 54
      f2:	06 b6       	in	r0, 0x36	; 54
      f4:	07 fe       	sbrs	r0, 7
      f6:	fd cf       	rjmp	.-6      	; 0xf2 <TWI_DS1307_wadr+0x36>
      f8:	81 b1       	in	r24, 0x01	; 1
      fa:	88 7f       	andi	r24, 0xF8	; 248
      fc:	88 32       	cpi	r24, 0x28	; 40
      fe:	11 f0       	breq	.+4      	; 0x104 <TWI_DS1307_wadr+0x48>
     100:	81 b1       	in	r24, 0x01	; 1
     102:	08 95       	ret
     104:	84 e9       	ldi	r24, 0x94	; 148
     106:	86 bf       	out	0x36, r24	; 54
     108:	80 e0       	ldi	r24, 0x00	; 0
     10a:	08 95       	ret

0000010c <TWI_DS1307_wblock>:
     10c:	94 ea       	ldi	r25, 0xA4	; 164
     10e:	96 bf       	out	0x36, r25	; 54
     110:	06 b6       	in	r0, 0x36	; 54
     112:	07 fe       	sbrs	r0, 7
     114:	fd cf       	rjmp	.-6      	; 0x110 <TWI_DS1307_wblock+0x4>
     116:	91 b1       	in	r25, 0x01	; 1
     118:	98 7f       	andi	r25, 0xF8	; 248
     11a:	98 30       	cpi	r25, 0x08	; 8
     11c:	11 f0       	breq	.+4      	; 0x122 <TWI_DS1307_wblock+0x16>
     11e:	81 b1       	in	r24, 0x01	; 1
     120:	08 95       	ret
     122:	90 ed       	ldi	r25, 0xD0	; 208
     124:	93 b9       	out	0x03, r25	; 3
     126:	94 e8       	ldi	r25, 0x84	; 132
     128:	96 bf       	out	0x36, r25	; 54
     12a:	06 b6       	in	r0, 0x36	; 54
     12c:	07 fe       	sbrs	r0, 7
     12e:	fd cf       	rjmp	.-6      	; 0x12a <TWI_DS1307_wblock+0x1e>
     130:	91 b1       	in	r25, 0x01	; 1
     132:	98 7f       	andi	r25, 0xF8	; 248
     134:	98 31       	cpi	r25, 0x18	; 24
     136:	11 f0       	breq	.+4      	; 0x13c <TWI_DS1307_wblock+0x30>
     138:	81 b1       	in	r24, 0x01	; 1
     13a:	08 95       	ret
     13c:	83 b9       	out	0x03, r24	; 3
     13e:	84 e8       	ldi	r24, 0x84	; 132
     140:	86 bf       	out	0x36, r24	; 54
     142:	06 b6       	in	r0, 0x36	; 54
     144:	07 fe       	sbrs	r0, 7
     146:	fd cf       	rjmp	.-6      	; 0x142 <TWI_DS1307_wblock+0x36>
     148:	81 b1       	in	r24, 0x01	; 1
     14a:	88 7f       	andi	r24, 0xF8	; 248
     14c:	88 32       	cpi	r24, 0x28	; 40
     14e:	a1 f0       	breq	.+40     	; 0x178 <TWI_DS1307_wblock+0x6c>
     150:	81 b1       	in	r24, 0x01	; 1
     152:	08 95       	ret
     154:	fb 01       	movw	r30, r22
     156:	e8 0f       	add	r30, r24
     158:	f1 1d       	adc	r31, r1
     15a:	90 81       	ld	r25, Z
     15c:	93 b9       	out	0x03, r25	; 3
     15e:	94 e8       	ldi	r25, 0x84	; 132
     160:	96 bf       	out	0x36, r25	; 54
     162:	06 b6       	in	r0, 0x36	; 54
     164:	07 fe       	sbrs	r0, 7
     166:	fd cf       	rjmp	.-6      	; 0x162 <TWI_DS1307_wblock+0x56>
     168:	91 b1       	in	r25, 0x01	; 1
     16a:	98 7f       	andi	r25, 0xF8	; 248
     16c:	98 32       	cpi	r25, 0x28	; 40
     16e:	11 f0       	breq	.+4      	; 0x174 <TWI_DS1307_wblock+0x68>
     170:	81 b1       	in	r24, 0x01	; 1
     172:	08 95       	ret
     174:	8f 5f       	subi	r24, 0xFF	; 255
     176:	01 c0       	rjmp	.+2      	; 0x17a <TWI_DS1307_wblock+0x6e>
     178:	80 e0       	ldi	r24, 0x00	; 0
     17a:	84 17       	cp	r24, r20
     17c:	58 f3       	brcs	.-42     	; 0x154 <TWI_DS1307_wblock+0x48>
     17e:	84 e9       	ldi	r24, 0x94	; 148
     180:	86 bf       	out	0x36, r24	; 54
     182:	80 e0       	ldi	r24, 0x00	; 0
     184:	08 95       	ret

00000186 <TWI_DS1307_rblock>:
     186:	dc 01       	movw	r26, r24
     188:	84 ea       	ldi	r24, 0xA4	; 164
     18a:	86 bf       	out	0x36, r24	; 54
     18c:	06 b6       	in	r0, 0x36	; 54
     18e:	07 fe       	sbrs	r0, 7
     190:	fd cf       	rjmp	.-6      	; 0x18c <TWI_DS1307_rblock+0x6>
     192:	81 b1       	in	r24, 0x01	; 1
     194:	88 7f       	andi	r24, 0xF8	; 248
     196:	88 30       	cpi	r24, 0x08	; 8
     198:	c9 f7       	brne	.-14     	; 0x18c <TWI_DS1307_rblock+0x6>
     19a:	81 ed       	ldi	r24, 0xD1	; 209
     19c:	83 b9       	out	0x03, r24	; 3
     19e:	84 e8       	ldi	r24, 0x84	; 132
     1a0:	86 bf       	out	0x36, r24	; 54
     1a2:	06 b6       	in	r0, 0x36	; 54
     1a4:	07 fe       	sbrs	r0, 7
     1a6:	fd cf       	rjmp	.-6      	; 0x1a2 <TWI_DS1307_rblock+0x1c>
     1a8:	91 b1       	in	r25, 0x01	; 1
     1aa:	98 7f       	andi	r25, 0xF8	; 248
     1ac:	90 34       	cpi	r25, 0x40	; 64
     1ae:	c9 f7       	brne	.-14     	; 0x1a2 <TWI_DS1307_rblock+0x1c>
     1b0:	20 e0       	ldi	r18, 0x00	; 0
     1b2:	0f c0       	rjmp	.+30     	; 0x1d2 <TWI_DS1307_rblock+0x4c>
     1b4:	84 ec       	ldi	r24, 0xC4	; 196
     1b6:	86 bf       	out	0x36, r24	; 54
     1b8:	06 b6       	in	r0, 0x36	; 54
     1ba:	07 fe       	sbrs	r0, 7
     1bc:	fd cf       	rjmp	.-6      	; 0x1b8 <TWI_DS1307_rblock+0x32>
     1be:	91 b1       	in	r25, 0x01	; 1
     1c0:	98 7f       	andi	r25, 0xF8	; 248
     1c2:	90 35       	cpi	r25, 0x50	; 80
     1c4:	c9 f7       	brne	.-14     	; 0x1b8 <TWI_DS1307_rblock+0x32>
     1c6:	fd 01       	movw	r30, r26
     1c8:	e2 0f       	add	r30, r18
     1ca:	f1 1d       	adc	r31, r1
     1cc:	83 b1       	in	r24, 0x03	; 3
     1ce:	80 83       	st	Z, r24
     1d0:	2f 5f       	subi	r18, 0xFF	; 255
     1d2:	e2 2f       	mov	r30, r18
     1d4:	f0 e0       	ldi	r31, 0x00	; 0
     1d6:	46 2f       	mov	r20, r22
     1d8:	50 e0       	ldi	r21, 0x00	; 0
     1da:	41 50       	subi	r20, 0x01	; 1
     1dc:	51 09       	sbc	r21, r1
     1de:	e4 17       	cp	r30, r20
     1e0:	f5 07       	cpc	r31, r21
     1e2:	44 f3       	brlt	.-48     	; 0x1b4 <TWI_DS1307_rblock+0x2e>
     1e4:	84 e8       	ldi	r24, 0x84	; 132
     1e6:	86 bf       	out	0x36, r24	; 54
     1e8:	06 b6       	in	r0, 0x36	; 54
     1ea:	07 fe       	sbrs	r0, 7
     1ec:	fd cf       	rjmp	.-6      	; 0x1e8 <TWI_DS1307_rblock+0x62>
     1ee:	91 b1       	in	r25, 0x01	; 1
     1f0:	98 7f       	andi	r25, 0xF8	; 248
     1f2:	98 35       	cpi	r25, 0x58	; 88
     1f4:	c9 f7       	brne	.-14     	; 0x1e8 <TWI_DS1307_rblock+0x62>
     1f6:	86 2f       	mov	r24, r22
     1f8:	90 e0       	ldi	r25, 0x00	; 0
     1fa:	01 97       	sbiw	r24, 0x01	; 1
     1fc:	a8 0f       	add	r26, r24
     1fe:	b9 1f       	adc	r27, r25
     200:	83 b1       	in	r24, 0x03	; 3
     202:	8c 93       	st	X, r24
     204:	84 e9       	ldi	r24, 0x94	; 148
     206:	86 bf       	out	0x36, r24	; 54
     208:	80 e0       	ldi	r24, 0x00	; 0
     20a:	08 95       	ret

0000020c <Read2Nib>:
     20c:	8b b3       	in	r24, 0x1b	; 27
     20e:	80 6f       	ori	r24, 0xF0	; 240
     210:	8b bb       	out	0x1b, r24	; 27
     212:	8a b3       	in	r24, 0x1a	; 26
     214:	8f 70       	andi	r24, 0x0F	; 15
     216:	8a bb       	out	0x1a, r24	; 26
     218:	8b b3       	in	r24, 0x1b	; 27
     21a:	84 60       	ori	r24, 0x04	; 4
     21c:	8b bb       	out	0x1b, r24	; 27
     21e:	8b b3       	in	r24, 0x1b	; 27
     220:	84 60       	ori	r24, 0x04	; 4
     222:	8b bb       	out	0x1b, r24	; 27
     224:	99 b3       	in	r25, 0x19	; 25
     226:	90 7f       	andi	r25, 0xF0	; 240
     228:	8b b3       	in	r24, 0x1b	; 27
     22a:	8b 7f       	andi	r24, 0xFB	; 251
     22c:	8b bb       	out	0x1b, r24	; 27
     22e:	8b b3       	in	r24, 0x1b	; 27
     230:	84 60       	ori	r24, 0x04	; 4
     232:	8b bb       	out	0x1b, r24	; 27
     234:	8b b3       	in	r24, 0x1b	; 27
     236:	84 60       	ori	r24, 0x04	; 4
     238:	8b bb       	out	0x1b, r24	; 27
     23a:	89 b3       	in	r24, 0x19	; 25
     23c:	2b b3       	in	r18, 0x1b	; 27
     23e:	2b 7f       	andi	r18, 0xFB	; 251
     240:	2b bb       	out	0x1b, r18	; 27
     242:	82 95       	swap	r24
     244:	8f 70       	andi	r24, 0x0F	; 15
     246:	89 2b       	or	r24, r25
     248:	08 95       	ret

0000024a <Write2Nib>:
     24a:	2b b3       	in	r18, 0x1b	; 27
     24c:	2f 70       	andi	r18, 0x0F	; 15
     24e:	38 2f       	mov	r19, r24
     250:	30 7f       	andi	r19, 0xF0	; 240
     252:	40 e1       	ldi	r20, 0x10	; 16
     254:	84 9f       	mul	r24, r20
     256:	c0 01       	movw	r24, r0
     258:	11 24       	eor	r1, r1
     25a:	92 2f       	mov	r25, r18
     25c:	93 2b       	or	r25, r19
     25e:	9b bb       	out	0x1b, r25	; 27
     260:	9b b3       	in	r25, 0x1b	; 27
     262:	94 60       	ori	r25, 0x04	; 4
     264:	9b bb       	out	0x1b, r25	; 27
     266:	9b b3       	in	r25, 0x1b	; 27
     268:	9b 7f       	andi	r25, 0xFB	; 251
     26a:	9b bb       	out	0x1b, r25	; 27
     26c:	82 2b       	or	r24, r18
     26e:	8b bb       	out	0x1b, r24	; 27
     270:	8b b3       	in	r24, 0x1b	; 27
     272:	84 60       	ori	r24, 0x04	; 4
     274:	8b bb       	out	0x1b, r24	; 27
     276:	8b b3       	in	r24, 0x1b	; 27
     278:	8b 7f       	andi	r24, 0xFB	; 251
     27a:	8b bb       	out	0x1b, r24	; 27
     27c:	08 95       	ret

0000027e <wait_LCD>:
     27e:	cf 93       	push	r28
     280:	df 93       	push	r29
     282:	1f 92       	push	r1
     284:	cd b7       	in	r28, 0x3d	; 61
     286:	de b7       	in	r29, 0x3e	; 62
     288:	8b b3       	in	r24, 0x1b	; 27
     28a:	8e 7f       	andi	r24, 0xFE	; 254
     28c:	8b bb       	out	0x1b, r24	; 27
     28e:	8b b3       	in	r24, 0x1b	; 27
     290:	82 60       	ori	r24, 0x02	; 2
     292:	8b bb       	out	0x1b, r24	; 27
     294:	0e 94 06 01 	call	0x20c	; 0x20c <Read2Nib>
     298:	89 83       	std	Y+1, r24	; 0x01
     29a:	89 81       	ldd	r24, Y+1	; 0x01
     29c:	88 23       	and	r24, r24
     29e:	a4 f3       	brlt	.-24     	; 0x288 <wait_LCD+0xa>
     2a0:	8b b3       	in	r24, 0x1b	; 27
     2a2:	8d 7f       	andi	r24, 0xFD	; 253
     2a4:	8b bb       	out	0x1b, r24	; 27
     2a6:	8f ef       	ldi	r24, 0xFF	; 255
     2a8:	8a bb       	out	0x1a, r24	; 26
     2aa:	0f 90       	pop	r0
     2ac:	df 91       	pop	r29
     2ae:	cf 91       	pop	r28
     2b0:	08 95       	ret

000002b2 <init_LCD>:
     2b2:	8f ef       	ldi	r24, 0xFF	; 255
     2b4:	8a bb       	out	0x1a, r24	; 26
     2b6:	8a bb       	out	0x1a, r24	; 26
     2b8:	8b b3       	in	r24, 0x1b	; 27
     2ba:	8e 7f       	andi	r24, 0xFE	; 254
     2bc:	8b bb       	out	0x1b, r24	; 27
     2be:	8b b3       	in	r24, 0x1b	; 27
     2c0:	8d 7f       	andi	r24, 0xFD	; 253
     2c2:	8b bb       	out	0x1b, r24	; 27
     2c4:	8b b3       	in	r24, 0x1b	; 27
     2c6:	8b 7f       	andi	r24, 0xFB	; 251
     2c8:	8b bb       	out	0x1b, r24	; 27
     2ca:	8b b3       	in	r24, 0x1b	; 27
     2cc:	84 60       	ori	r24, 0x04	; 4
     2ce:	8b bb       	out	0x1b, r24	; 27
     2d0:	8b b3       	in	r24, 0x1b	; 27
     2d2:	80 62       	ori	r24, 0x20	; 32
     2d4:	8b bb       	out	0x1b, r24	; 27
     2d6:	8b b3       	in	r24, 0x1b	; 27
     2d8:	8b 7f       	andi	r24, 0xFB	; 251
     2da:	8b bb       	out	0x1b, r24	; 27
     2dc:	0e 94 3f 01 	call	0x27e	; 0x27e <wait_LCD>
     2e0:	88 e2       	ldi	r24, 0x28	; 40
     2e2:	0e 94 25 01 	call	0x24a	; 0x24a <Write2Nib>
     2e6:	0e 94 3f 01 	call	0x27e	; 0x27e <wait_LCD>
     2ea:	8b b3       	in	r24, 0x1b	; 27
     2ec:	8e 7f       	andi	r24, 0xFE	; 254
     2ee:	8b bb       	out	0x1b, r24	; 27
     2f0:	8e e0       	ldi	r24, 0x0E	; 14
     2f2:	0e 94 25 01 	call	0x24a	; 0x24a <Write2Nib>
     2f6:	0e 94 3f 01 	call	0x27e	; 0x27e <wait_LCD>
     2fa:	8b b3       	in	r24, 0x1b	; 27
     2fc:	8e 7f       	andi	r24, 0xFE	; 254
     2fe:	8b bb       	out	0x1b, r24	; 27
     300:	86 e0       	ldi	r24, 0x06	; 6
     302:	0e 94 25 01 	call	0x24a	; 0x24a <Write2Nib>
     306:	0e 94 3f 01 	call	0x27e	; 0x27e <wait_LCD>
     30a:	08 95       	ret

0000030c <move_LCD>:
     30c:	28 2f       	mov	r18, r24
     30e:	30 e0       	ldi	r19, 0x00	; 0
     310:	21 50       	subi	r18, 0x01	; 1
     312:	31 09       	sbc	r19, r1
     314:	86 2f       	mov	r24, r22
     316:	90 e4       	ldi	r25, 0x40	; 64
     318:	29 9f       	mul	r18, r25
     31a:	80 0d       	add	r24, r0
     31c:	11 24       	eor	r1, r1
     31e:	9b b3       	in	r25, 0x1b	; 27
     320:	9e 7f       	andi	r25, 0xFE	; 254
     322:	9b bb       	out	0x1b, r25	; 27
     324:	81 58       	subi	r24, 0x81	; 129
     326:	0e 94 25 01 	call	0x24a	; 0x24a <Write2Nib>
     32a:	0e 94 3f 01 	call	0x27e	; 0x27e <wait_LCD>
     32e:	08 95       	ret

00000330 <clr_LCD>:
     330:	8b b3       	in	r24, 0x1b	; 27
     332:	8e 7f       	andi	r24, 0xFE	; 254
     334:	8b bb       	out	0x1b, r24	; 27
     336:	81 e0       	ldi	r24, 0x01	; 1
     338:	0e 94 25 01 	call	0x24a	; 0x24a <Write2Nib>
     33c:	0e 94 3f 01 	call	0x27e	; 0x27e <wait_LCD>
     340:	08 95       	ret

00000342 <putChar_LCD>:
     342:	9b b3       	in	r25, 0x1b	; 27
     344:	91 60       	ori	r25, 0x01	; 1
     346:	9b bb       	out	0x1b, r25	; 27
     348:	0e 94 25 01 	call	0x24a	; 0x24a <Write2Nib>
     34c:	0e 94 3f 01 	call	0x27e	; 0x27e <wait_LCD>
     350:	08 95       	ret

00000352 <print_LCD>:
     352:	0f 93       	push	r16
     354:	1f 93       	push	r17
     356:	cf 93       	push	r28
     358:	8c 01       	movw	r16, r24
     35a:	c0 e0       	ldi	r28, 0x00	; 0
     35c:	03 c0       	rjmp	.+6      	; 0x364 <print_LCD+0x12>
     35e:	0e 94 a1 01 	call	0x342	; 0x342 <putChar_LCD>
     362:	cf 5f       	subi	r28, 0xFF	; 255
     364:	f8 01       	movw	r30, r16
     366:	ec 0f       	add	r30, r28
     368:	f1 1d       	adc	r31, r1
     36a:	80 81       	ld	r24, Z
     36c:	81 11       	cpse	r24, r1
     36e:	f7 cf       	rjmp	.-18     	; 0x35e <print_LCD+0xc>
     370:	cf 91       	pop	r28
     372:	1f 91       	pop	r17
     374:	0f 91       	pop	r16
     376:	08 95       	ret

00000378 <BCDToDec>:
     378:	38 2f       	mov	r19, r24
     37a:	3f 70       	andi	r19, 0x0F	; 15
     37c:	98 2f       	mov	r25, r24
     37e:	92 95       	swap	r25
     380:	9f 70       	andi	r25, 0x0F	; 15
     382:	99 0f       	add	r25, r25
     384:	29 2f       	mov	r18, r25
     386:	22 0f       	add	r18, r18
     388:	22 0f       	add	r18, r18
     38a:	89 2f       	mov	r24, r25
     38c:	82 0f       	add	r24, r18
     38e:	83 0f       	add	r24, r19
     390:	08 95       	ret

00000392 <DecToBCD>:
     392:	2d ec       	ldi	r18, 0xCD	; 205
     394:	82 9f       	mul	r24, r18
     396:	21 2d       	mov	r18, r1
     398:	11 24       	eor	r1, r1
     39a:	92 2f       	mov	r25, r18
     39c:	96 95       	lsr	r25
     39e:	96 95       	lsr	r25
     3a0:	96 95       	lsr	r25
     3a2:	99 0f       	add	r25, r25
     3a4:	39 2f       	mov	r19, r25
     3a6:	33 0f       	add	r19, r19
     3a8:	33 0f       	add	r19, r19
     3aa:	93 0f       	add	r25, r19
     3ac:	89 1b       	sub	r24, r25
     3ae:	26 95       	lsr	r18
     3b0:	26 95       	lsr	r18
     3b2:	26 95       	lsr	r18
     3b4:	30 e1       	ldi	r19, 0x10	; 16
     3b6:	23 9f       	mul	r18, r19
     3b8:	80 0d       	add	r24, r0
     3ba:	11 24       	eor	r1, r1
     3bc:	08 95       	ret

000003be <Decode>:
     3be:	cf 93       	push	r28
     3c0:	df 93       	push	r29
     3c2:	cc ed       	ldi	r28, 0xDC	; 220
     3c4:	d0 e0       	ldi	r29, 0x00	; 0
     3c6:	88 81       	ld	r24, Y
     3c8:	8f 77       	andi	r24, 0x7F	; 127
     3ca:	0e 94 bc 01 	call	0x378	; 0x378 <BCDToDec>
     3ce:	90 e0       	ldi	r25, 0x00	; 0
     3d0:	90 93 72 00 	sts	0x0072, r25	; 0x800072 <Second+0x1>
     3d4:	80 93 71 00 	sts	0x0071, r24	; 0x800071 <Second>
     3d8:	89 81       	ldd	r24, Y+1	; 0x01
     3da:	0e 94 bc 01 	call	0x378	; 0x378 <BCDToDec>
     3de:	90 e0       	ldi	r25, 0x00	; 0
     3e0:	90 93 70 00 	sts	0x0070, r25	; 0x800070 <Minute+0x1>
     3e4:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <Minute>
     3e8:	80 91 cf 00 	lds	r24, 0x00CF	; 0x8000cf <Mode>
     3ec:	90 91 d0 00 	lds	r25, 0x00D0	; 0x8000d0 <Mode+0x1>
     3f0:	89 2b       	or	r24, r25
     3f2:	59 f0       	breq	.+22     	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
     3f4:	80 91 de 00 	lds	r24, 0x00DE	; 0x8000de <tData+0x2>
     3f8:	8f 71       	andi	r24, 0x1F	; 31
     3fa:	0e 94 bc 01 	call	0x378	; 0x378 <BCDToDec>
     3fe:	90 e0       	ldi	r25, 0x00	; 0
     400:	90 93 6e 00 	sts	0x006E, r25	; 0x80006e <Hour+0x1>
     404:	80 93 6d 00 	sts	0x006D, r24	; 0x80006d <Hour>
     408:	0a c0       	rjmp	.+20     	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
     40a:	80 91 de 00 	lds	r24, 0x00DE	; 0x8000de <tData+0x2>
     40e:	8f 73       	andi	r24, 0x3F	; 63
     410:	0e 94 bc 01 	call	0x378	; 0x378 <BCDToDec>
     414:	90 e0       	ldi	r25, 0x00	; 0
     416:	90 93 6e 00 	sts	0x006E, r25	; 0x80006e <Hour+0x1>
     41a:	80 93 6d 00 	sts	0x006D, r24	; 0x80006d <Hour>
     41e:	cc ed       	ldi	r28, 0xDC	; 220
     420:	d0 e0       	ldi	r29, 0x00	; 0
     422:	8b 81       	ldd	r24, Y+3	; 0x03
     424:	0e 94 bc 01 	call	0x378	; 0x378 <BCDToDec>
     428:	90 e0       	ldi	r25, 0x00	; 0
     42a:	90 93 6c 00 	sts	0x006C, r25	; 0x80006c <Day+0x1>
     42e:	80 93 6b 00 	sts	0x006B, r24	; 0x80006b <Day>
     432:	8c 81       	ldd	r24, Y+4	; 0x04
     434:	0e 94 bc 01 	call	0x378	; 0x378 <BCDToDec>
     438:	90 e0       	ldi	r25, 0x00	; 0
     43a:	90 93 6a 00 	sts	0x006A, r25	; 0x80006a <Date+0x1>
     43e:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <Date>
     442:	8d 81       	ldd	r24, Y+5	; 0x05
     444:	0e 94 bc 01 	call	0x378	; 0x378 <BCDToDec>
     448:	90 e0       	ldi	r25, 0x00	; 0
     44a:	90 93 68 00 	sts	0x0068, r25	; 0x800068 <Month+0x1>
     44e:	80 93 67 00 	sts	0x0067, r24	; 0x800067 <Month>
     452:	8e 81       	ldd	r24, Y+6	; 0x06
     454:	0e 94 bc 01 	call	0x378	; 0x378 <BCDToDec>
     458:	90 e0       	ldi	r25, 0x00	; 0
     45a:	90 93 66 00 	sts	0x0066, r25	; 0x800066 <Year+0x1>
     45e:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <Year>
     462:	df 91       	pop	r29
     464:	cf 91       	pop	r28
     466:	08 95       	ret

00000468 <Display>:
     468:	0e 94 98 01 	call	0x330	; 0x330 <clr_LCD>
     46c:	80 91 c7 00 	lds	r24, 0x00C7	; 0x8000c7 <set_alarm>
     470:	88 23       	and	r24, r24
     472:	09 f4       	brne	.+2      	; 0x476 <Display+0xe>
     474:	5e c0       	rjmp	.+188    	; 0x532 <Display+0xca>
     476:	83 e7       	ldi	r24, 0x73	; 115
     478:	90 e0       	ldi	r25, 0x00	; 0
     47a:	0e 94 a9 01 	call	0x352	; 0x352 <print_LCD>
     47e:	80 91 cd 00 	lds	r24, 0x00CD	; 0x8000cd <A_Hour>
     482:	90 91 ce 00 	lds	r25, 0x00CE	; 0x8000ce <A_Hour+0x1>
     486:	9f 93       	push	r25
     488:	8f 93       	push	r24
     48a:	8f e7       	ldi	r24, 0x7F	; 127
     48c:	90 e0       	ldi	r25, 0x00	; 0
     48e:	9f 93       	push	r25
     490:	8f 93       	push	r24
     492:	85 ee       	ldi	r24, 0xE5	; 229
     494:	90 e0       	ldi	r25, 0x00	; 0
     496:	9f 93       	push	r25
     498:	8f 93       	push	r24
     49a:	0e 94 10 17 	call	0x2e20	; 0x2e20 <sprintf>
     49e:	67 e0       	ldi	r22, 0x07	; 7
     4a0:	82 e0       	ldi	r24, 0x02	; 2
     4a2:	0e 94 86 01 	call	0x30c	; 0x30c <move_LCD>
     4a6:	80 91 cd 00 	lds	r24, 0x00CD	; 0x8000cd <A_Hour>
     4aa:	90 91 ce 00 	lds	r25, 0x00CE	; 0x8000ce <A_Hour+0x1>
     4ae:	0f 90       	pop	r0
     4b0:	0f 90       	pop	r0
     4b2:	0f 90       	pop	r0
     4b4:	0f 90       	pop	r0
     4b6:	0f 90       	pop	r0
     4b8:	0f 90       	pop	r0
     4ba:	0a 97       	sbiw	r24, 0x0a	; 10
     4bc:	1c f4       	brge	.+6      	; 0x4c4 <Display+0x5c>
     4be:	80 e3       	ldi	r24, 0x30	; 48
     4c0:	0e 94 a1 01 	call	0x342	; 0x342 <putChar_LCD>
     4c4:	85 ee       	ldi	r24, 0xE5	; 229
     4c6:	90 e0       	ldi	r25, 0x00	; 0
     4c8:	0e 94 a9 01 	call	0x352	; 0x352 <print_LCD>
     4cc:	69 e0       	ldi	r22, 0x09	; 9
     4ce:	82 e0       	ldi	r24, 0x02	; 2
     4d0:	0e 94 86 01 	call	0x30c	; 0x30c <move_LCD>
     4d4:	8a e3       	ldi	r24, 0x3A	; 58
     4d6:	0e 94 a1 01 	call	0x342	; 0x342 <putChar_LCD>
     4da:	80 91 cb 00 	lds	r24, 0x00CB	; 0x8000cb <A_Minute>
     4de:	90 91 cc 00 	lds	r25, 0x00CC	; 0x8000cc <A_Minute+0x1>
     4e2:	9f 93       	push	r25
     4e4:	8f 93       	push	r24
     4e6:	8f e7       	ldi	r24, 0x7F	; 127
     4e8:	90 e0       	ldi	r25, 0x00	; 0
     4ea:	9f 93       	push	r25
     4ec:	8f 93       	push	r24
     4ee:	85 ee       	ldi	r24, 0xE5	; 229
     4f0:	90 e0       	ldi	r25, 0x00	; 0
     4f2:	9f 93       	push	r25
     4f4:	8f 93       	push	r24
     4f6:	0e 94 10 17 	call	0x2e20	; 0x2e20 <sprintf>
     4fa:	6a e0       	ldi	r22, 0x0A	; 10
     4fc:	82 e0       	ldi	r24, 0x02	; 2
     4fe:	0e 94 86 01 	call	0x30c	; 0x30c <move_LCD>
     502:	80 91 cb 00 	lds	r24, 0x00CB	; 0x8000cb <A_Minute>
     506:	90 91 cc 00 	lds	r25, 0x00CC	; 0x8000cc <A_Minute+0x1>
     50a:	0f 90       	pop	r0
     50c:	0f 90       	pop	r0
     50e:	0f 90       	pop	r0
     510:	0f 90       	pop	r0
     512:	0f 90       	pop	r0
     514:	0f 90       	pop	r0
     516:	0a 97       	sbiw	r24, 0x0a	; 10
     518:	1c f4       	brge	.+6      	; 0x520 <Display+0xb8>
     51a:	80 e3       	ldi	r24, 0x30	; 48
     51c:	0e 94 a1 01 	call	0x342	; 0x342 <putChar_LCD>
     520:	85 ee       	ldi	r24, 0xE5	; 229
     522:	90 e0       	ldi	r25, 0x00	; 0
     524:	0e 94 a9 01 	call	0x352	; 0x352 <print_LCD>
     528:	82 e8       	ldi	r24, 0x82	; 130
     52a:	90 e0       	ldi	r25, 0x00	; 0
     52c:	0e 94 a9 01 	call	0x352	; 0x352 <print_LCD>
     530:	08 95       	ret
     532:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <set>
     536:	81 11       	cpse	r24, r1
     538:	04 c0       	rjmp	.+8      	; 0x542 <Display+0xda>
     53a:	89 e8       	ldi	r24, 0x89	; 137
     53c:	90 e0       	ldi	r25, 0x00	; 0
     53e:	0e 94 a9 01 	call	0x352	; 0x352 <print_LCD>
     542:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <set>
     546:	88 23       	and	r24, r24
     548:	21 f0       	breq	.+8      	; 0x552 <Display+0xea>
     54a:	80 e9       	ldi	r24, 0x90	; 144
     54c:	90 e0       	ldi	r25, 0x00	; 0
     54e:	0e 94 a9 01 	call	0x352	; 0x352 <print_LCD>
     552:	80 91 6d 00 	lds	r24, 0x006D	; 0x80006d <Hour>
     556:	90 91 6e 00 	lds	r25, 0x006E	; 0x80006e <Hour+0x1>
     55a:	9f 93       	push	r25
     55c:	8f 93       	push	r24
     55e:	8f e7       	ldi	r24, 0x7F	; 127
     560:	90 e0       	ldi	r25, 0x00	; 0
     562:	9f 93       	push	r25
     564:	8f 93       	push	r24
     566:	85 ee       	ldi	r24, 0xE5	; 229
     568:	90 e0       	ldi	r25, 0x00	; 0
     56a:	9f 93       	push	r25
     56c:	8f 93       	push	r24
     56e:	0e 94 10 17 	call	0x2e20	; 0x2e20 <sprintf>
     572:	67 e0       	ldi	r22, 0x07	; 7
     574:	81 e0       	ldi	r24, 0x01	; 1
     576:	0e 94 86 01 	call	0x30c	; 0x30c <move_LCD>
     57a:	80 91 6d 00 	lds	r24, 0x006D	; 0x80006d <Hour>
     57e:	90 91 6e 00 	lds	r25, 0x006E	; 0x80006e <Hour+0x1>
     582:	0f 90       	pop	r0
     584:	0f 90       	pop	r0
     586:	0f 90       	pop	r0
     588:	0f 90       	pop	r0
     58a:	0f 90       	pop	r0
     58c:	0f 90       	pop	r0
     58e:	0a 97       	sbiw	r24, 0x0a	; 10
     590:	1c f4       	brge	.+6      	; 0x598 <Display+0x130>
     592:	80 e3       	ldi	r24, 0x30	; 48
     594:	0e 94 a1 01 	call	0x342	; 0x342 <putChar_LCD>
     598:	85 ee       	ldi	r24, 0xE5	; 229
     59a:	90 e0       	ldi	r25, 0x00	; 0
     59c:	0e 94 a9 01 	call	0x352	; 0x352 <print_LCD>
     5a0:	69 e0       	ldi	r22, 0x09	; 9
     5a2:	81 e0       	ldi	r24, 0x01	; 1
     5a4:	0e 94 86 01 	call	0x30c	; 0x30c <move_LCD>
     5a8:	8a e3       	ldi	r24, 0x3A	; 58
     5aa:	0e 94 a1 01 	call	0x342	; 0x342 <putChar_LCD>
     5ae:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <Minute>
     5b2:	90 91 70 00 	lds	r25, 0x0070	; 0x800070 <Minute+0x1>
     5b6:	9f 93       	push	r25
     5b8:	8f 93       	push	r24
     5ba:	8f e7       	ldi	r24, 0x7F	; 127
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	9f 93       	push	r25
     5c0:	8f 93       	push	r24
     5c2:	85 ee       	ldi	r24, 0xE5	; 229
     5c4:	90 e0       	ldi	r25, 0x00	; 0
     5c6:	9f 93       	push	r25
     5c8:	8f 93       	push	r24
     5ca:	0e 94 10 17 	call	0x2e20	; 0x2e20 <sprintf>
     5ce:	6a e0       	ldi	r22, 0x0A	; 10
     5d0:	81 e0       	ldi	r24, 0x01	; 1
     5d2:	0e 94 86 01 	call	0x30c	; 0x30c <move_LCD>
     5d6:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <Minute>
     5da:	90 91 70 00 	lds	r25, 0x0070	; 0x800070 <Minute+0x1>
     5de:	0f 90       	pop	r0
     5e0:	0f 90       	pop	r0
     5e2:	0f 90       	pop	r0
     5e4:	0f 90       	pop	r0
     5e6:	0f 90       	pop	r0
     5e8:	0f 90       	pop	r0
     5ea:	0a 97       	sbiw	r24, 0x0a	; 10
     5ec:	1c f4       	brge	.+6      	; 0x5f4 <Display+0x18c>
     5ee:	80 e3       	ldi	r24, 0x30	; 48
     5f0:	0e 94 a1 01 	call	0x342	; 0x342 <putChar_LCD>
     5f4:	85 ee       	ldi	r24, 0xE5	; 229
     5f6:	90 e0       	ldi	r25, 0x00	; 0
     5f8:	0e 94 a9 01 	call	0x352	; 0x352 <print_LCD>
     5fc:	6c e0       	ldi	r22, 0x0C	; 12
     5fe:	81 e0       	ldi	r24, 0x01	; 1
     600:	0e 94 86 01 	call	0x30c	; 0x30c <move_LCD>
     604:	8a e3       	ldi	r24, 0x3A	; 58
     606:	0e 94 a1 01 	call	0x342	; 0x342 <putChar_LCD>
     60a:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <Second>
     60e:	90 91 72 00 	lds	r25, 0x0072	; 0x800072 <Second+0x1>
     612:	9f 93       	push	r25
     614:	8f 93       	push	r24
     616:	8f e7       	ldi	r24, 0x7F	; 127
     618:	90 e0       	ldi	r25, 0x00	; 0
     61a:	9f 93       	push	r25
     61c:	8f 93       	push	r24
     61e:	85 ee       	ldi	r24, 0xE5	; 229
     620:	90 e0       	ldi	r25, 0x00	; 0
     622:	9f 93       	push	r25
     624:	8f 93       	push	r24
     626:	0e 94 10 17 	call	0x2e20	; 0x2e20 <sprintf>
     62a:	6d e0       	ldi	r22, 0x0D	; 13
     62c:	81 e0       	ldi	r24, 0x01	; 1
     62e:	0e 94 86 01 	call	0x30c	; 0x30c <move_LCD>
     632:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <Second>
     636:	90 91 72 00 	lds	r25, 0x0072	; 0x800072 <Second+0x1>
     63a:	0f 90       	pop	r0
     63c:	0f 90       	pop	r0
     63e:	0f 90       	pop	r0
     640:	0f 90       	pop	r0
     642:	0f 90       	pop	r0
     644:	0f 90       	pop	r0
     646:	0a 97       	sbiw	r24, 0x0a	; 10
     648:	1c f4       	brge	.+6      	; 0x650 <Display+0x1e8>
     64a:	80 e3       	ldi	r24, 0x30	; 48
     64c:	0e 94 a1 01 	call	0x342	; 0x342 <putChar_LCD>
     650:	85 ee       	ldi	r24, 0xE5	; 229
     652:	90 e0       	ldi	r25, 0x00	; 0
     654:	0e 94 a9 01 	call	0x352	; 0x352 <print_LCD>
     658:	80 91 cf 00 	lds	r24, 0x00CF	; 0x8000cf <Mode>
     65c:	90 91 d0 00 	lds	r25, 0x00D0	; 0x8000d0 <Mode+0x1>
     660:	89 2b       	or	r24, r25
     662:	79 f0       	breq	.+30     	; 0x682 <Display+0x21a>
     664:	60 e1       	ldi	r22, 0x10	; 16
     666:	81 e0       	ldi	r24, 0x01	; 1
     668:	0e 94 86 01 	call	0x30c	; 0x30c <move_LCD>
     66c:	80 91 de 00 	lds	r24, 0x00DE	; 0x8000de <tData+0x2>
     670:	85 ff       	sbrs	r24, 5
     672:	04 c0       	rjmp	.+8      	; 0x67c <Display+0x214>
     674:	80 e5       	ldi	r24, 0x50	; 80
     676:	0e 94 a1 01 	call	0x342	; 0x342 <putChar_LCD>
     67a:	03 c0       	rjmp	.+6      	; 0x682 <Display+0x21a>
     67c:	81 e4       	ldi	r24, 0x41	; 65
     67e:	0e 94 a1 01 	call	0x342	; 0x342 <putChar_LCD>
     682:	61 e0       	ldi	r22, 0x01	; 1
     684:	82 e0       	ldi	r24, 0x02	; 2
     686:	0e 94 86 01 	call	0x30c	; 0x30c <move_LCD>
     68a:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <set>
     68e:	81 11       	cpse	r24, r1
     690:	04 c0       	rjmp	.+8      	; 0x69a <Display+0x232>
     692:	87 e9       	ldi	r24, 0x97	; 151
     694:	90 e0       	ldi	r25, 0x00	; 0
     696:	0e 94 a9 01 	call	0x352	; 0x352 <print_LCD>
     69a:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <set>
     69e:	88 23       	and	r24, r24
     6a0:	21 f0       	breq	.+8      	; 0x6aa <Display+0x242>
     6a2:	8e e9       	ldi	r24, 0x9E	; 158
     6a4:	90 e0       	ldi	r25, 0x00	; 0
     6a6:	0e 94 a9 01 	call	0x352	; 0x352 <print_LCD>
     6aa:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <Date>
     6ae:	90 91 6a 00 	lds	r25, 0x006A	; 0x80006a <Date+0x1>
     6b2:	0a 97       	sbiw	r24, 0x0a	; 10
     6b4:	1c f4       	brge	.+6      	; 0x6bc <Display+0x254>
     6b6:	80 e3       	ldi	r24, 0x30	; 48
     6b8:	0e 94 a1 01 	call	0x342	; 0x342 <putChar_LCD>
     6bc:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <Date>
     6c0:	90 91 6a 00 	lds	r25, 0x006A	; 0x80006a <Date+0x1>
     6c4:	9f 93       	push	r25
     6c6:	8f 93       	push	r24
     6c8:	8f e7       	ldi	r24, 0x7F	; 127
     6ca:	90 e0       	ldi	r25, 0x00	; 0
     6cc:	9f 93       	push	r25
     6ce:	8f 93       	push	r24
     6d0:	85 ee       	ldi	r24, 0xE5	; 229
     6d2:	90 e0       	ldi	r25, 0x00	; 0
     6d4:	9f 93       	push	r25
     6d6:	8f 93       	push	r24
     6d8:	0e 94 10 17 	call	0x2e20	; 0x2e20 <sprintf>
     6dc:	85 ee       	ldi	r24, 0xE5	; 229
     6de:	90 e0       	ldi	r25, 0x00	; 0
     6e0:	0e 94 a9 01 	call	0x352	; 0x352 <print_LCD>
     6e4:	8d e2       	ldi	r24, 0x2D	; 45
     6e6:	0e 94 a1 01 	call	0x342	; 0x342 <putChar_LCD>
     6ea:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <Month>
     6ee:	90 91 68 00 	lds	r25, 0x0068	; 0x800068 <Month+0x1>
     6f2:	0f 90       	pop	r0
     6f4:	0f 90       	pop	r0
     6f6:	0f 90       	pop	r0
     6f8:	0f 90       	pop	r0
     6fa:	0f 90       	pop	r0
     6fc:	0f 90       	pop	r0
     6fe:	0a 97       	sbiw	r24, 0x0a	; 10
     700:	1c f4       	brge	.+6      	; 0x708 <Display+0x2a0>
     702:	80 e3       	ldi	r24, 0x30	; 48
     704:	0e 94 a1 01 	call	0x342	; 0x342 <putChar_LCD>
     708:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <Month>
     70c:	90 91 68 00 	lds	r25, 0x0068	; 0x800068 <Month+0x1>
     710:	9f 93       	push	r25
     712:	8f 93       	push	r24
     714:	8f e7       	ldi	r24, 0x7F	; 127
     716:	90 e0       	ldi	r25, 0x00	; 0
     718:	9f 93       	push	r25
     71a:	8f 93       	push	r24
     71c:	85 ee       	ldi	r24, 0xE5	; 229
     71e:	90 e0       	ldi	r25, 0x00	; 0
     720:	9f 93       	push	r25
     722:	8f 93       	push	r24
     724:	0e 94 10 17 	call	0x2e20	; 0x2e20 <sprintf>
     728:	85 ee       	ldi	r24, 0xE5	; 229
     72a:	90 e0       	ldi	r25, 0x00	; 0
     72c:	0e 94 a9 01 	call	0x352	; 0x352 <print_LCD>
     730:	8d e2       	ldi	r24, 0x2D	; 45
     732:	0e 94 a1 01 	call	0x342	; 0x342 <putChar_LCD>
     736:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <Year>
     73a:	90 91 66 00 	lds	r25, 0x0066	; 0x800066 <Year+0x1>
     73e:	0f 90       	pop	r0
     740:	0f 90       	pop	r0
     742:	0f 90       	pop	r0
     744:	0f 90       	pop	r0
     746:	0f 90       	pop	r0
     748:	0f 90       	pop	r0
     74a:	0a 97       	sbiw	r24, 0x0a	; 10
     74c:	1c f4       	brge	.+6      	; 0x754 <Display+0x2ec>
     74e:	80 e3       	ldi	r24, 0x30	; 48
     750:	0e 94 a1 01 	call	0x342	; 0x342 <putChar_LCD>
     754:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <Year>
     758:	90 91 66 00 	lds	r25, 0x0066	; 0x800066 <Year+0x1>
     75c:	9f 93       	push	r25
     75e:	8f 93       	push	r24
     760:	8f e7       	ldi	r24, 0x7F	; 127
     762:	90 e0       	ldi	r25, 0x00	; 0
     764:	9f 93       	push	r25
     766:	8f 93       	push	r24
     768:	85 ee       	ldi	r24, 0xE5	; 229
     76a:	90 e0       	ldi	r25, 0x00	; 0
     76c:	9f 93       	push	r25
     76e:	8f 93       	push	r24
     770:	0e 94 10 17 	call	0x2e20	; 0x2e20 <sprintf>
     774:	85 ee       	ldi	r24, 0xE5	; 229
     776:	90 e0       	ldi	r25, 0x00	; 0
     778:	0e 94 a9 01 	call	0x352	; 0x352 <print_LCD>
     77c:	86 e8       	ldi	r24, 0x86	; 134
     77e:	90 e0       	ldi	r25, 0x00	; 0
     780:	0e 94 a9 01 	call	0x352	; 0x352 <print_LCD>
     784:	0f 90       	pop	r0
     786:	0f 90       	pop	r0
     788:	0f 90       	pop	r0
     78a:	0f 90       	pop	r0
     78c:	0f 90       	pop	r0
     78e:	0f 90       	pop	r0
     790:	08 95       	ret

00000792 <FixTime>:
     792:	cf 93       	push	r28
     794:	df 93       	push	r29
     796:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <Second>
     79a:	90 91 72 00 	lds	r25, 0x0072	; 0x800072 <Second+0x1>
     79e:	0e 94 c9 01 	call	0x392	; 0x392 <DecToBCD>
     7a2:	cc ed       	ldi	r28, 0xDC	; 220
     7a4:	d0 e0       	ldi	r29, 0x00	; 0
     7a6:	88 83       	st	Y, r24
     7a8:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <Minute>
     7ac:	90 91 70 00 	lds	r25, 0x0070	; 0x800070 <Minute+0x1>
     7b0:	0e 94 c9 01 	call	0x392	; 0x392 <DecToBCD>
     7b4:	89 83       	std	Y+1, r24	; 0x01
     7b6:	80 91 cf 00 	lds	r24, 0x00CF	; 0x8000cf <Mode>
     7ba:	90 91 d0 00 	lds	r25, 0x00D0	; 0x8000d0 <Mode+0x1>
     7be:	89 2b       	or	r24, r25
     7c0:	21 f1       	breq	.+72     	; 0x80a <__DATA_REGION_LENGTH__+0xa>
     7c2:	80 91 6d 00 	lds	r24, 0x006D	; 0x80006d <Hour>
     7c6:	90 91 6e 00 	lds	r25, 0x006E	; 0x80006e <Hour+0x1>
     7ca:	0e 94 c9 01 	call	0x392	; 0x392 <DecToBCD>
     7ce:	40 91 cf 00 	lds	r20, 0x00CF	; 0x8000cf <Mode>
     7d2:	50 91 d0 00 	lds	r21, 0x00D0	; 0x8000d0 <Mode+0x1>
     7d6:	00 24       	eor	r0, r0
     7d8:	56 95       	lsr	r21
     7da:	47 95       	ror	r20
     7dc:	07 94       	ror	r0
     7de:	56 95       	lsr	r21
     7e0:	47 95       	ror	r20
     7e2:	07 94       	ror	r0
     7e4:	54 2f       	mov	r21, r20
     7e6:	40 2d       	mov	r20, r0
     7e8:	20 91 63 00 	lds	r18, 0x0063	; 0x800063 <AP>
     7ec:	30 91 64 00 	lds	r19, 0x0064	; 0x800064 <AP+0x1>
     7f0:	22 0f       	add	r18, r18
     7f2:	33 1f       	adc	r19, r19
     7f4:	22 95       	swap	r18
     7f6:	32 95       	swap	r19
     7f8:	30 7f       	andi	r19, 0xF0	; 240
     7fa:	32 27       	eor	r19, r18
     7fc:	20 7f       	andi	r18, 0xF0	; 240
     7fe:	32 27       	eor	r19, r18
     800:	84 2b       	or	r24, r20
     802:	28 2b       	or	r18, r24
     804:	20 93 de 00 	sts	0x00DE, r18	; 0x8000de <tData+0x2>
     808:	08 c0       	rjmp	.+16     	; 0x81a <__DATA_REGION_LENGTH__+0x1a>
     80a:	80 91 6d 00 	lds	r24, 0x006D	; 0x80006d <Hour>
     80e:	90 91 6e 00 	lds	r25, 0x006E	; 0x80006e <Hour+0x1>
     812:	0e 94 c9 01 	call	0x392	; 0x392 <DecToBCD>
     816:	80 93 de 00 	sts	0x00DE, r24	; 0x8000de <tData+0x2>
     81a:	80 91 6b 00 	lds	r24, 0x006B	; 0x80006b <Day>
     81e:	90 91 6c 00 	lds	r25, 0x006C	; 0x80006c <Day+0x1>
     822:	0e 94 c9 01 	call	0x392	; 0x392 <DecToBCD>
     826:	cc ed       	ldi	r28, 0xDC	; 220
     828:	d0 e0       	ldi	r29, 0x00	; 0
     82a:	8b 83       	std	Y+3, r24	; 0x03
     82c:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <Date>
     830:	90 91 6a 00 	lds	r25, 0x006A	; 0x80006a <Date+0x1>
     834:	0e 94 c9 01 	call	0x392	; 0x392 <DecToBCD>
     838:	8c 83       	std	Y+4, r24	; 0x04
     83a:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <Month>
     83e:	90 91 68 00 	lds	r25, 0x0068	; 0x800068 <Month+0x1>
     842:	0e 94 c9 01 	call	0x392	; 0x392 <DecToBCD>
     846:	8d 83       	std	Y+5, r24	; 0x05
     848:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <Year>
     84c:	90 91 66 00 	lds	r25, 0x0066	; 0x800066 <Year+0x1>
     850:	0e 94 c9 01 	call	0x392	; 0x392 <DecToBCD>
     854:	8e 83       	std	Y+6, r24	; 0x06
     856:	47 e0       	ldi	r20, 0x07	; 7
     858:	be 01       	movw	r22, r28
     85a:	80 e0       	ldi	r24, 0x00	; 0
     85c:	0e 94 86 00 	call	0x10c	; 0x10c <TWI_DS1307_wblock>
     860:	8f ec       	ldi	r24, 0xCF	; 207
     862:	97 e0       	ldi	r25, 0x07	; 7
     864:	01 97       	sbiw	r24, 0x01	; 1
     866:	f1 f7       	brne	.-4      	; 0x864 <__stack+0x5>
     868:	00 c0       	rjmp	.+0      	; 0x86a <__stack+0xb>
     86a:	00 00       	nop
     86c:	80 e0       	ldi	r24, 0x00	; 0
     86e:	0e 94 5e 00 	call	0xbc	; 0xbc <TWI_DS1307_wadr>
     872:	8f ec       	ldi	r24, 0xCF	; 207
     874:	97 e0       	ldi	r25, 0x07	; 7
     876:	01 97       	sbiw	r24, 0x01	; 1
     878:	f1 f7       	brne	.-4      	; 0x876 <__stack+0x17>
     87a:	00 c0       	rjmp	.+0      	; 0x87c <__stack+0x1d>
     87c:	00 00       	nop
     87e:	df 91       	pop	r29
     880:	cf 91       	pop	r28
     882:	08 95       	ret

00000884 <Init_btn>:
     884:	81 b3       	in	r24, 0x11	; 17
     886:	80 78       	andi	r24, 0x80	; 128
     888:	81 bb       	out	0x11, r24	; 17
     88a:	81 b3       	in	r24, 0x11	; 17
     88c:	80 68       	ori	r24, 0x80	; 128
     88e:	81 bb       	out	0x11, r24	; 17
     890:	82 b3       	in	r24, 0x12	; 18
     892:	8f 67       	ori	r24, 0x7F	; 127
     894:	82 bb       	out	0x12, r24	; 18
     896:	08 95       	ret

00000898 <jdFromDate>:

//-----------------------DOI DUONG LICH - AM LICH---------------------


double jdFromDate(uint8_t dd, uint8_t mm, uint16_t yy)
{
     898:	4f 92       	push	r4
     89a:	5f 92       	push	r5
     89c:	6f 92       	push	r6
     89e:	7f 92       	push	r7
     8a0:	8f 92       	push	r8
     8a2:	9f 92       	push	r9
     8a4:	af 92       	push	r10
     8a6:	bf 92       	push	r11
     8a8:	cf 92       	push	r12
     8aa:	df 92       	push	r13
     8ac:	ef 92       	push	r14
     8ae:	ff 92       	push	r15
     8b0:	0f 93       	push	r16
     8b2:	1f 93       	push	r17
     8b4:	cf 93       	push	r28
     8b6:	df 93       	push	r29
     8b8:	f8 2e       	mov	r15, r24
     8ba:	8a 01       	movw	r16, r20
	long double a, y, m, jd;
	a = floorf((14 - mm) / 12);
     8bc:	c6 2f       	mov	r28, r22
     8be:	d0 e0       	ldi	r29, 0x00	; 0
     8c0:	8e e0       	ldi	r24, 0x0E	; 14
     8c2:	90 e0       	ldi	r25, 0x00	; 0
     8c4:	8c 1b       	sub	r24, r28
     8c6:	9d 0b       	sbc	r25, r29
     8c8:	6c e0       	ldi	r22, 0x0C	; 12
     8ca:	70 e0       	ldi	r23, 0x00	; 0
     8cc:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
     8d0:	07 2e       	mov	r0, r23
     8d2:	00 0c       	add	r0, r0
     8d4:	88 0b       	sbc	r24, r24
     8d6:	99 0b       	sbc	r25, r25
     8d8:	0e 94 ec 14 	call	0x29d8	; 0x29d8 <__floatsisf>
     8dc:	0e 94 27 15 	call	0x2a4e	; 0x2a4e <floor>
     8e0:	4b 01       	movw	r8, r22
     8e2:	5c 01       	movw	r10, r24
	y = yy+4800-a;
     8e4:	b8 01       	movw	r22, r16
     8e6:	60 54       	subi	r22, 0x40	; 64
     8e8:	7d 4e       	sbci	r23, 0xED	; 237
     8ea:	80 e0       	ldi	r24, 0x00	; 0
     8ec:	90 e0       	ldi	r25, 0x00	; 0
     8ee:	0e 94 ea 14 	call	0x29d4	; 0x29d4 <__floatunsisf>
     8f2:	a5 01       	movw	r20, r10
     8f4:	94 01       	movw	r18, r8
     8f6:	0e 94 d0 13 	call	0x27a0	; 0x27a0 <__subsf3>
     8fa:	2b 01       	movw	r4, r22
     8fc:	3c 01       	movw	r6, r24
	m = mm+12*a-3;
     8fe:	20 e0       	ldi	r18, 0x00	; 0
     900:	30 e0       	ldi	r19, 0x00	; 0
     902:	40 e4       	ldi	r20, 0x40	; 64
     904:	51 e4       	ldi	r21, 0x41	; 65
     906:	c5 01       	movw	r24, r10
     908:	b4 01       	movw	r22, r8
     90a:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
     90e:	4b 01       	movw	r8, r22
     910:	5c 01       	movw	r10, r24
     912:	be 01       	movw	r22, r28
     914:	dd 0f       	add	r29, r29
     916:	88 0b       	sbc	r24, r24
     918:	99 0b       	sbc	r25, r25
     91a:	0e 94 ec 14 	call	0x29d8	; 0x29d8 <__floatsisf>
     91e:	a5 01       	movw	r20, r10
     920:	94 01       	movw	r18, r8
     922:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__addsf3>
     926:	20 e0       	ldi	r18, 0x00	; 0
     928:	30 e0       	ldi	r19, 0x00	; 0
     92a:	40 e4       	ldi	r20, 0x40	; 64
     92c:	50 e4       	ldi	r21, 0x40	; 64
     92e:	0e 94 d0 13 	call	0x27a0	; 0x27a0 <__subsf3>
     932:	4b 01       	movw	r8, r22
     934:	5c 01       	movw	r10, r24
	jd = dd + floorf((153*m+2)/5) + 365*y + floorf(y/4) - floorf(y/100) + floorf(y/400) - 32045;
     936:	6f 2d       	mov	r22, r15
     938:	70 e0       	ldi	r23, 0x00	; 0
     93a:	80 e0       	ldi	r24, 0x00	; 0
     93c:	90 e0       	ldi	r25, 0x00	; 0
     93e:	0e 94 ec 14 	call	0x29d8	; 0x29d8 <__floatsisf>
     942:	6b 01       	movw	r12, r22
     944:	7c 01       	movw	r14, r24
     946:	20 e0       	ldi	r18, 0x00	; 0
     948:	30 e0       	ldi	r19, 0x00	; 0
     94a:	49 e1       	ldi	r20, 0x19	; 25
     94c:	53 e4       	ldi	r21, 0x43	; 67
     94e:	c5 01       	movw	r24, r10
     950:	b4 01       	movw	r22, r8
     952:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
     956:	20 e0       	ldi	r18, 0x00	; 0
     958:	30 e0       	ldi	r19, 0x00	; 0
     95a:	40 e0       	ldi	r20, 0x00	; 0
     95c:	50 e4       	ldi	r21, 0x40	; 64
     95e:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__addsf3>
     962:	20 e0       	ldi	r18, 0x00	; 0
     964:	30 e0       	ldi	r19, 0x00	; 0
     966:	40 ea       	ldi	r20, 0xA0	; 160
     968:	50 e4       	ldi	r21, 0x40	; 64
     96a:	0e 94 42 14 	call	0x2884	; 0x2884 <__divsf3>
     96e:	0e 94 27 15 	call	0x2a4e	; 0x2a4e <floor>
     972:	9b 01       	movw	r18, r22
     974:	ac 01       	movw	r20, r24
     976:	c7 01       	movw	r24, r14
     978:	b6 01       	movw	r22, r12
     97a:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__addsf3>
     97e:	6b 01       	movw	r12, r22
     980:	7c 01       	movw	r14, r24
     982:	20 e0       	ldi	r18, 0x00	; 0
     984:	30 e8       	ldi	r19, 0x80	; 128
     986:	46 eb       	ldi	r20, 0xB6	; 182
     988:	53 e4       	ldi	r21, 0x43	; 67
     98a:	c3 01       	movw	r24, r6
     98c:	b2 01       	movw	r22, r4
     98e:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
     992:	9b 01       	movw	r18, r22
     994:	ac 01       	movw	r20, r24
     996:	c7 01       	movw	r24, r14
     998:	b6 01       	movw	r22, r12
     99a:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__addsf3>
     99e:	6b 01       	movw	r12, r22
     9a0:	7c 01       	movw	r14, r24
     9a2:	20 e0       	ldi	r18, 0x00	; 0
     9a4:	30 e0       	ldi	r19, 0x00	; 0
     9a6:	40 e8       	ldi	r20, 0x80	; 128
     9a8:	5e e3       	ldi	r21, 0x3E	; 62
     9aa:	c3 01       	movw	r24, r6
     9ac:	b2 01       	movw	r22, r4
     9ae:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
     9b2:	0e 94 27 15 	call	0x2a4e	; 0x2a4e <floor>
     9b6:	9b 01       	movw	r18, r22
     9b8:	ac 01       	movw	r20, r24
     9ba:	c7 01       	movw	r24, r14
     9bc:	b6 01       	movw	r22, r12
     9be:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__addsf3>
     9c2:	6b 01       	movw	r12, r22
     9c4:	7c 01       	movw	r14, r24
     9c6:	20 e0       	ldi	r18, 0x00	; 0
     9c8:	30 e0       	ldi	r19, 0x00	; 0
     9ca:	48 ec       	ldi	r20, 0xC8	; 200
     9cc:	52 e4       	ldi	r21, 0x42	; 66
     9ce:	c3 01       	movw	r24, r6
     9d0:	b2 01       	movw	r22, r4
     9d2:	0e 94 42 14 	call	0x2884	; 0x2884 <__divsf3>
     9d6:	0e 94 27 15 	call	0x2a4e	; 0x2a4e <floor>
     9da:	9b 01       	movw	r18, r22
     9dc:	ac 01       	movw	r20, r24
     9de:	c7 01       	movw	r24, r14
     9e0:	b6 01       	movw	r22, r12
     9e2:	0e 94 d0 13 	call	0x27a0	; 0x27a0 <__subsf3>
     9e6:	4b 01       	movw	r8, r22
     9e8:	5c 01       	movw	r10, r24
     9ea:	20 e0       	ldi	r18, 0x00	; 0
     9ec:	30 e0       	ldi	r19, 0x00	; 0
     9ee:	48 ec       	ldi	r20, 0xC8	; 200
     9f0:	53 e4       	ldi	r21, 0x43	; 67
     9f2:	c3 01       	movw	r24, r6
     9f4:	b2 01       	movw	r22, r4
     9f6:	0e 94 42 14 	call	0x2884	; 0x2884 <__divsf3>
     9fa:	0e 94 27 15 	call	0x2a4e	; 0x2a4e <floor>
     9fe:	9b 01       	movw	r18, r22
     a00:	ac 01       	movw	r20, r24
     a02:	c5 01       	movw	r24, r10
     a04:	b4 01       	movw	r22, r8
     a06:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__addsf3>
     a0a:	20 e0       	ldi	r18, 0x00	; 0
     a0c:	3a e5       	ldi	r19, 0x5A	; 90
     a0e:	4a ef       	ldi	r20, 0xFA	; 250
     a10:	56 e4       	ldi	r21, 0x46	; 70
     a12:	0e 94 d0 13 	call	0x27a0	; 0x27a0 <__subsf3>
     a16:	4b 01       	movw	r8, r22
     a18:	5c 01       	movw	r10, r24
	if (jd < 2299161) {
     a1a:	24 e6       	ldi	r18, 0x64	; 100
     a1c:	34 e5       	ldi	r19, 0x54	; 84
     a1e:	4c e0       	ldi	r20, 0x0C	; 12
     a20:	5a e4       	ldi	r21, 0x4A	; 74
     a22:	0e 94 3d 14 	call	0x287a	; 0x287a <__cmpsf2>
     a26:	88 23       	and	r24, r24
     a28:	54 f4       	brge	.+20     	; 0xa3e <jdFromDate+0x1a6>
		jd = dd + floorf((153*m+2)/5) + 365*y + floorf(y/4) - 32083;
     a2a:	20 e0       	ldi	r18, 0x00	; 0
     a2c:	36 ea       	ldi	r19, 0xA6	; 166
     a2e:	4a ef       	ldi	r20, 0xFA	; 250
     a30:	56 e4       	ldi	r21, 0x46	; 70
     a32:	c7 01       	movw	r24, r14
     a34:	b6 01       	movw	r22, r12
     a36:	0e 94 d0 13 	call	0x27a0	; 0x27a0 <__subsf3>
     a3a:	4b 01       	movw	r8, r22
     a3c:	5c 01       	movw	r10, r24
	}
	return jd;
}
     a3e:	c5 01       	movw	r24, r10
     a40:	b4 01       	movw	r22, r8
     a42:	df 91       	pop	r29
     a44:	cf 91       	pop	r28
     a46:	1f 91       	pop	r17
     a48:	0f 91       	pop	r16
     a4a:	ff 90       	pop	r15
     a4c:	ef 90       	pop	r14
     a4e:	df 90       	pop	r13
     a50:	cf 90       	pop	r12
     a52:	bf 90       	pop	r11
     a54:	af 90       	pop	r10
     a56:	9f 90       	pop	r9
     a58:	8f 90       	pop	r8
     a5a:	7f 90       	pop	r7
     a5c:	6f 90       	pop	r6
     a5e:	5f 90       	pop	r5
     a60:	4f 90       	pop	r4
     a62:	08 95       	ret

00000a64 <getNewMoonDay>:

double getNewMoonDay(long double k, int timeZone)
{
     a64:	4f 92       	push	r4
     a66:	5f 92       	push	r5
     a68:	6f 92       	push	r6
     a6a:	7f 92       	push	r7
     a6c:	8f 92       	push	r8
     a6e:	9f 92       	push	r9
     a70:	af 92       	push	r10
     a72:	bf 92       	push	r11
     a74:	cf 92       	push	r12
     a76:	df 92       	push	r13
     a78:	ef 92       	push	r14
     a7a:	ff 92       	push	r15
     a7c:	cf 93       	push	r28
     a7e:	df 93       	push	r29
     a80:	cd b7       	in	r28, 0x3d	; 61
     a82:	de b7       	in	r29, 0x3e	; 62
     a84:	66 97       	sbiw	r28, 0x16	; 22
     a86:	0f b6       	in	r0, 0x3f	; 63
     a88:	f8 94       	cli
     a8a:	de bf       	out	0x3e, r29	; 62
     a8c:	0f be       	out	0x3f, r0	; 63
     a8e:	cd bf       	out	0x3d, r28	; 61
     a90:	6b 01       	movw	r12, r22
     a92:	7c 01       	movw	r14, r24
     a94:	5e 8b       	std	Y+22, r21	; 0x16
     a96:	4d 8b       	std	Y+21, r20	; 0x15
	long double T, T2, T3, dr, Jd1, M, Mpr, F, C1, deltat, JdNew;
	T = k/1236.85; // Time in Julian centuries from 1900 January 0.5
     a98:	23 e3       	ldi	r18, 0x33	; 51
     a9a:	3b e9       	ldi	r19, 0x9B	; 155
     a9c:	4a e9       	ldi	r20, 0x9A	; 154
     a9e:	54 e4       	ldi	r21, 0x44	; 68
     aa0:	0e 94 42 14 	call	0x2884	; 0x2884 <__divsf3>
     aa4:	69 83       	std	Y+1, r22	; 0x01
     aa6:	7a 83       	std	Y+2, r23	; 0x02
     aa8:	8b 83       	std	Y+3, r24	; 0x03
     aaa:	9c 83       	std	Y+4, r25	; 0x04
	T2 = T * T;
     aac:	9b 01       	movw	r18, r22
     aae:	ac 01       	movw	r20, r24
     ab0:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
     ab4:	6d 83       	std	Y+5, r22	; 0x05
     ab6:	7e 83       	std	Y+6, r23	; 0x06
     ab8:	8f 83       	std	Y+7, r24	; 0x07
     aba:	98 87       	std	Y+8, r25	; 0x08
	T3 = T2 * T;
     abc:	9b 01       	movw	r18, r22
     abe:	ac 01       	movw	r20, r24
     ac0:	69 81       	ldd	r22, Y+1	; 0x01
     ac2:	7a 81       	ldd	r23, Y+2	; 0x02
     ac4:	8b 81       	ldd	r24, Y+3	; 0x03
     ac6:	9c 81       	ldd	r25, Y+4	; 0x04
     ac8:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
     acc:	6d 87       	std	Y+13, r22	; 0x0d
     ace:	7e 87       	std	Y+14, r23	; 0x0e
     ad0:	8f 87       	std	Y+15, r24	; 0x0f
     ad2:	98 8b       	std	Y+16, r25	; 0x10
	dr = M_PI/180;
	Jd1 = 2415020.75933 + 29.53058868*k + 0.0001178*T2 - 0.000000155*T3;
     ad4:	25 ea       	ldi	r18, 0xA5	; 165
     ad6:	3e e3       	ldi	r19, 0x3E	; 62
     ad8:	4c ee       	ldi	r20, 0xEC	; 236
     ada:	51 e4       	ldi	r21, 0x41	; 65
     adc:	c7 01       	movw	r24, r14
     ade:	b6 01       	movw	r22, r12
     ae0:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
     ae4:	23 eb       	ldi	r18, 0xB3	; 179
     ae6:	36 e6       	ldi	r19, 0x66	; 102
     ae8:	43 e1       	ldi	r20, 0x13	; 19
     aea:	5a e4       	ldi	r21, 0x4A	; 74
     aec:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__addsf3>
     af0:	4b 01       	movw	r8, r22
     af2:	5c 01       	movw	r10, r24
     af4:	25 e6       	ldi	r18, 0x65	; 101
     af6:	3b e0       	ldi	r19, 0x0B	; 11
     af8:	47 ef       	ldi	r20, 0xF7	; 247
     afa:	58 e3       	ldi	r21, 0x38	; 56
     afc:	6d 81       	ldd	r22, Y+5	; 0x05
     afe:	7e 81       	ldd	r23, Y+6	; 0x06
     b00:	8f 81       	ldd	r24, Y+7	; 0x07
     b02:	98 85       	ldd	r25, Y+8	; 0x08
     b04:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
     b08:	9b 01       	movw	r18, r22
     b0a:	ac 01       	movw	r20, r24
     b0c:	c5 01       	movw	r24, r10
     b0e:	b4 01       	movw	r22, r8
     b10:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__addsf3>
     b14:	4b 01       	movw	r8, r22
     b16:	5c 01       	movw	r10, r24
     b18:	23 e1       	ldi	r18, 0x13	; 19
     b1a:	3e e6       	ldi	r19, 0x6E	; 110
     b1c:	46 e2       	ldi	r20, 0x26	; 38
     b1e:	54 e3       	ldi	r21, 0x34	; 52
     b20:	6d 85       	ldd	r22, Y+13	; 0x0d
     b22:	7e 85       	ldd	r23, Y+14	; 0x0e
     b24:	8f 85       	ldd	r24, Y+15	; 0x0f
     b26:	98 89       	ldd	r25, Y+16	; 0x10
     b28:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
     b2c:	9b 01       	movw	r18, r22
     b2e:	ac 01       	movw	r20, r24
     b30:	c5 01       	movw	r24, r10
     b32:	b4 01       	movw	r22, r8
     b34:	0e 94 d0 13 	call	0x27a0	; 0x27a0 <__subsf3>
     b38:	4b 01       	movw	r8, r22
     b3a:	5c 01       	movw	r10, r24
	Jd1 = Jd1 + 0.00033*sinf((166.56 + 132.87*T - 0.009173*T2)*dr); // Mean new moon
     b3c:	28 eb       	ldi	r18, 0xB8	; 184
     b3e:	3e ed       	ldi	r19, 0xDE	; 222
     b40:	44 e0       	ldi	r20, 0x04	; 4
     b42:	53 e4       	ldi	r21, 0x43	; 67
     b44:	69 81       	ldd	r22, Y+1	; 0x01
     b46:	7a 81       	ldd	r23, Y+2	; 0x02
     b48:	8b 81       	ldd	r24, Y+3	; 0x03
     b4a:	9c 81       	ldd	r25, Y+4	; 0x04
     b4c:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
     b50:	2c e5       	ldi	r18, 0x5C	; 92
     b52:	3f e8       	ldi	r19, 0x8F	; 143
     b54:	46 e2       	ldi	r20, 0x26	; 38
     b56:	53 e4       	ldi	r21, 0x43	; 67
     b58:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__addsf3>
     b5c:	2b 01       	movw	r4, r22
     b5e:	3c 01       	movw	r6, r24
     b60:	2a e5       	ldi	r18, 0x5A	; 90
     b62:	3a e4       	ldi	r19, 0x4A	; 74
     b64:	46 e1       	ldi	r20, 0x16	; 22
     b66:	5c e3       	ldi	r21, 0x3C	; 60
     b68:	6d 81       	ldd	r22, Y+5	; 0x05
     b6a:	7e 81       	ldd	r23, Y+6	; 0x06
     b6c:	8f 81       	ldd	r24, Y+7	; 0x07
     b6e:	98 85       	ldd	r25, Y+8	; 0x08
     b70:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
     b74:	9b 01       	movw	r18, r22
     b76:	ac 01       	movw	r20, r24
     b78:	c3 01       	movw	r24, r6
     b7a:	b2 01       	movw	r22, r4
     b7c:	0e 94 d0 13 	call	0x27a0	; 0x27a0 <__subsf3>
     b80:	25 e3       	ldi	r18, 0x35	; 53
     b82:	3a ef       	ldi	r19, 0xFA	; 250
     b84:	4e e8       	ldi	r20, 0x8E	; 142
     b86:	5c e3       	ldi	r21, 0x3C	; 60
     b88:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
     b8c:	0e 94 66 16 	call	0x2ccc	; 0x2ccc <sin>
     b90:	2a ed       	ldi	r18, 0xDA	; 218
     b92:	33 e0       	ldi	r19, 0x03	; 3
     b94:	4d ea       	ldi	r20, 0xAD	; 173
     b96:	59 e3       	ldi	r21, 0x39	; 57
     b98:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
     b9c:	9b 01       	movw	r18, r22
     b9e:	ac 01       	movw	r20, r24
     ba0:	c5 01       	movw	r24, r10
     ba2:	b4 01       	movw	r22, r8
     ba4:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__addsf3>
     ba8:	69 8b       	std	Y+17, r22	; 0x11
     baa:	7a 8b       	std	Y+18, r23	; 0x12
     bac:	8b 8b       	std	Y+19, r24	; 0x13
     bae:	9c 8b       	std	Y+20, r25	; 0x14
	M = 359.2242 + 29.10535608*k - 0.0000333*T2 - 0.00000347*T3; // Sun's mean anomaly
     bb0:	25 ec       	ldi	r18, 0xC5	; 197
     bb2:	37 ed       	ldi	r19, 0xD7	; 215
     bb4:	48 ee       	ldi	r20, 0xE8	; 232
     bb6:	51 e4       	ldi	r21, 0x41	; 65
     bb8:	c7 01       	movw	r24, r14
     bba:	b6 01       	movw	r22, r12
     bbc:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
     bc0:	23 eb       	ldi	r18, 0xB3	; 179
     bc2:	3c e9       	ldi	r19, 0x9C	; 156
     bc4:	43 eb       	ldi	r20, 0xB3	; 179
     bc6:	53 e4       	ldi	r21, 0x43	; 67
     bc8:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__addsf3>
     bcc:	4b 01       	movw	r8, r22
     bce:	5c 01       	movw	r10, r24
     bd0:	2a e9       	ldi	r18, 0x9A	; 154
     bd2:	3b ea       	ldi	r19, 0xAB	; 171
     bd4:	4b e0       	ldi	r20, 0x0B	; 11
     bd6:	58 e3       	ldi	r21, 0x38	; 56
     bd8:	6d 81       	ldd	r22, Y+5	; 0x05
     bda:	7e 81       	ldd	r23, Y+6	; 0x06
     bdc:	8f 81       	ldd	r24, Y+7	; 0x07
     bde:	98 85       	ldd	r25, Y+8	; 0x08
     be0:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
     be4:	9b 01       	movw	r18, r22
     be6:	ac 01       	movw	r20, r24
     be8:	c5 01       	movw	r24, r10
     bea:	b4 01       	movw	r22, r8
     bec:	0e 94 d0 13 	call	0x27a0	; 0x27a0 <__subsf3>
     bf0:	4b 01       	movw	r8, r22
     bf2:	5c 01       	movw	r10, r24
     bf4:	25 e2       	ldi	r18, 0x25	; 37
     bf6:	3e ed       	ldi	r19, 0xDE	; 222
     bf8:	48 e6       	ldi	r20, 0x68	; 104
     bfa:	56 e3       	ldi	r21, 0x36	; 54
     bfc:	6d 85       	ldd	r22, Y+13	; 0x0d
     bfe:	7e 85       	ldd	r23, Y+14	; 0x0e
     c00:	8f 85       	ldd	r24, Y+15	; 0x0f
     c02:	98 89       	ldd	r25, Y+16	; 0x10
     c04:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
     c08:	9b 01       	movw	r18, r22
     c0a:	ac 01       	movw	r20, r24
     c0c:	c5 01       	movw	r24, r10
     c0e:	b4 01       	movw	r22, r8
     c10:	0e 94 d0 13 	call	0x27a0	; 0x27a0 <__subsf3>
     c14:	69 87       	std	Y+9, r22	; 0x09
     c16:	7a 87       	std	Y+10, r23	; 0x0a
     c18:	8b 87       	std	Y+11, r24	; 0x0b
     c1a:	9c 87       	std	Y+12, r25	; 0x0c
	Mpr = 306.0253 + 385.81691806*k + 0.0107306*T2 + 0.00001236*T3; // Moon's mean anomaly
     c1c:	21 e9       	ldi	r18, 0x91	; 145
     c1e:	38 ee       	ldi	r19, 0xE8	; 232
     c20:	40 ec       	ldi	r20, 0xC0	; 192
     c22:	53 e4       	ldi	r21, 0x43	; 67
     c24:	c7 01       	movw	r24, r14
     c26:	b6 01       	movw	r22, r12
     c28:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
     c2c:	2d e3       	ldi	r18, 0x3D	; 61
     c2e:	33 e0       	ldi	r19, 0x03	; 3
     c30:	49 e9       	ldi	r20, 0x99	; 153
     c32:	53 e4       	ldi	r21, 0x43	; 67
     c34:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__addsf3>
     c38:	4b 01       	movw	r8, r22
     c3a:	5c 01       	movw	r10, r24
     c3c:	26 e6       	ldi	r18, 0x66	; 102
     c3e:	3f ec       	ldi	r19, 0xCF	; 207
     c40:	4f e2       	ldi	r20, 0x2F	; 47
     c42:	5c e3       	ldi	r21, 0x3C	; 60
     c44:	6d 81       	ldd	r22, Y+5	; 0x05
     c46:	7e 81       	ldd	r23, Y+6	; 0x06
     c48:	8f 81       	ldd	r24, Y+7	; 0x07
     c4a:	98 85       	ldd	r25, Y+8	; 0x08
     c4c:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
     c50:	9b 01       	movw	r18, r22
     c52:	ac 01       	movw	r20, r24
     c54:	c5 01       	movw	r24, r10
     c56:	b4 01       	movw	r22, r8
     c58:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__addsf3>
     c5c:	4b 01       	movw	r8, r22
     c5e:	5c 01       	movw	r10, r24
     c60:	2c ec       	ldi	r18, 0xCC	; 204
     c62:	3d e5       	ldi	r19, 0x5D	; 93
     c64:	4f e4       	ldi	r20, 0x4F	; 79
     c66:	57 e3       	ldi	r21, 0x37	; 55
     c68:	6d 85       	ldd	r22, Y+13	; 0x0d
     c6a:	7e 85       	ldd	r23, Y+14	; 0x0e
     c6c:	8f 85       	ldd	r24, Y+15	; 0x0f
     c6e:	98 89       	ldd	r25, Y+16	; 0x10
     c70:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
     c74:	9b 01       	movw	r18, r22
     c76:	ac 01       	movw	r20, r24
     c78:	c5 01       	movw	r24, r10
     c7a:	b4 01       	movw	r22, r8
     c7c:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__addsf3>
     c80:	2b 01       	movw	r4, r22
     c82:	3c 01       	movw	r6, r24
	F = 21.2964 + 390.67050646*k - 0.0016528*T2 - 0.00000239*T3; // Moon's argument of latitude
     c84:	23 ed       	ldi	r18, 0xD3	; 211
     c86:	35 e5       	ldi	r19, 0x55	; 85
     c88:	43 ec       	ldi	r20, 0xC3	; 195
     c8a:	53 e4       	ldi	r21, 0x43	; 67
     c8c:	c7 01       	movw	r24, r14
     c8e:	b6 01       	movw	r22, r12
     c90:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
     c94:	27 e0       	ldi	r18, 0x07	; 7
     c96:	3f e5       	ldi	r19, 0x5F	; 95
     c98:	4a ea       	ldi	r20, 0xAA	; 170
     c9a:	51 e4       	ldi	r21, 0x41	; 65
     c9c:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__addsf3>
     ca0:	6b 01       	movw	r12, r22
     ca2:	7c 01       	movw	r14, r24
     ca4:	24 ec       	ldi	r18, 0xC4	; 196
     ca6:	32 ea       	ldi	r19, 0xA2	; 162
     ca8:	48 ed       	ldi	r20, 0xD8	; 216
     caa:	5a e3       	ldi	r21, 0x3A	; 58
     cac:	6d 81       	ldd	r22, Y+5	; 0x05
     cae:	7e 81       	ldd	r23, Y+6	; 0x06
     cb0:	8f 81       	ldd	r24, Y+7	; 0x07
     cb2:	98 85       	ldd	r25, Y+8	; 0x08
     cb4:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
     cb8:	9b 01       	movw	r18, r22
     cba:	ac 01       	movw	r20, r24
     cbc:	c7 01       	movw	r24, r14
     cbe:	b6 01       	movw	r22, r12
     cc0:	0e 94 d0 13 	call	0x27a0	; 0x27a0 <__subsf3>
     cc4:	6b 01       	movw	r12, r22
     cc6:	7c 01       	movw	r14, r24
     cc8:	23 ee       	ldi	r18, 0xE3	; 227
     cca:	33 e6       	ldi	r19, 0x63	; 99
     ccc:	40 e2       	ldi	r20, 0x20	; 32
     cce:	56 e3       	ldi	r21, 0x36	; 54
     cd0:	6d 85       	ldd	r22, Y+13	; 0x0d
     cd2:	7e 85       	ldd	r23, Y+14	; 0x0e
     cd4:	8f 85       	ldd	r24, Y+15	; 0x0f
     cd6:	98 89       	ldd	r25, Y+16	; 0x10
     cd8:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
     cdc:	9b 01       	movw	r18, r22
     cde:	ac 01       	movw	r20, r24
     ce0:	c7 01       	movw	r24, r14
     ce2:	b6 01       	movw	r22, r12
     ce4:	0e 94 d0 13 	call	0x27a0	; 0x27a0 <__subsf3>
     ce8:	6b 01       	movw	r12, r22
     cea:	7c 01       	movw	r14, r24
	C1=(0.1734 - 0.000393*T)*sinf(M*dr) + 0.0021*sinf(2*dr*M);
     cec:	21 e9       	ldi	r18, 0x91	; 145
     cee:	3b e0       	ldi	r19, 0x0B	; 11
     cf0:	4e ec       	ldi	r20, 0xCE	; 206
     cf2:	59 e3       	ldi	r21, 0x39	; 57
     cf4:	69 81       	ldd	r22, Y+1	; 0x01
     cf6:	7a 81       	ldd	r23, Y+2	; 0x02
     cf8:	8b 81       	ldd	r24, Y+3	; 0x03
     cfa:	9c 81       	ldd	r25, Y+4	; 0x04
     cfc:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
     d00:	9b 01       	movw	r18, r22
     d02:	ac 01       	movw	r20, r24
     d04:	65 ec       	ldi	r22, 0xC5	; 197
     d06:	7f e8       	ldi	r23, 0x8F	; 143
     d08:	81 e3       	ldi	r24, 0x31	; 49
     d0a:	9e e3       	ldi	r25, 0x3E	; 62
     d0c:	0e 94 d0 13 	call	0x27a0	; 0x27a0 <__subsf3>
     d10:	4b 01       	movw	r8, r22
     d12:	5c 01       	movw	r10, r24
     d14:	25 e3       	ldi	r18, 0x35	; 53
     d16:	3a ef       	ldi	r19, 0xFA	; 250
     d18:	4e e8       	ldi	r20, 0x8E	; 142
     d1a:	5c e3       	ldi	r21, 0x3C	; 60
     d1c:	69 85       	ldd	r22, Y+9	; 0x09
     d1e:	7a 85       	ldd	r23, Y+10	; 0x0a
     d20:	8b 85       	ldd	r24, Y+11	; 0x0b
     d22:	9c 85       	ldd	r25, Y+12	; 0x0c
     d24:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
     d28:	0e 94 66 16 	call	0x2ccc	; 0x2ccc <sin>
     d2c:	9b 01       	movw	r18, r22
     d2e:	ac 01       	movw	r20, r24
     d30:	c5 01       	movw	r24, r10
     d32:	b4 01       	movw	r22, r8
     d34:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
     d38:	4b 01       	movw	r8, r22
     d3a:	5c 01       	movw	r10, r24
     d3c:	25 e3       	ldi	r18, 0x35	; 53
     d3e:	3a ef       	ldi	r19, 0xFA	; 250
     d40:	4e e0       	ldi	r20, 0x0E	; 14
     d42:	5d e3       	ldi	r21, 0x3D	; 61
     d44:	69 85       	ldd	r22, Y+9	; 0x09
     d46:	7a 85       	ldd	r23, Y+10	; 0x0a
     d48:	8b 85       	ldd	r24, Y+11	; 0x0b
     d4a:	9c 85       	ldd	r25, Y+12	; 0x0c
     d4c:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
     d50:	0e 94 66 16 	call	0x2ccc	; 0x2ccc <sin>
     d54:	27 e2       	ldi	r18, 0x27	; 39
     d56:	30 ea       	ldi	r19, 0xA0	; 160
     d58:	49 e0       	ldi	r20, 0x09	; 9
     d5a:	5b e3       	ldi	r21, 0x3B	; 59
     d5c:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
     d60:	9b 01       	movw	r18, r22
     d62:	ac 01       	movw	r20, r24
     d64:	c5 01       	movw	r24, r10
     d66:	b4 01       	movw	r22, r8
     d68:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__addsf3>
     d6c:	4b 01       	movw	r8, r22
     d6e:	5c 01       	movw	r10, r24
	C1 = C1 - 0.4068*sinf(Mpr*dr) + 0.0161*sinf(dr*2*Mpr);
     d70:	25 e3       	ldi	r18, 0x35	; 53
     d72:	3a ef       	ldi	r19, 0xFA	; 250
     d74:	4e e8       	ldi	r20, 0x8E	; 142
     d76:	5c e3       	ldi	r21, 0x3C	; 60
     d78:	c3 01       	movw	r24, r6
     d7a:	b2 01       	movw	r22, r4
     d7c:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
     d80:	0e 94 66 16 	call	0x2ccc	; 0x2ccc <sin>
     d84:	27 e1       	ldi	r18, 0x17	; 23
     d86:	38 e4       	ldi	r19, 0x48	; 72
     d88:	40 ed       	ldi	r20, 0xD0	; 208
     d8a:	5e e3       	ldi	r21, 0x3E	; 62
     d8c:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
     d90:	9b 01       	movw	r18, r22
     d92:	ac 01       	movw	r20, r24
     d94:	c5 01       	movw	r24, r10
     d96:	b4 01       	movw	r22, r8
     d98:	0e 94 d0 13 	call	0x27a0	; 0x27a0 <__subsf3>
     d9c:	4b 01       	movw	r8, r22
     d9e:	5c 01       	movw	r10, r24
     da0:	25 e3       	ldi	r18, 0x35	; 53
     da2:	3a ef       	ldi	r19, 0xFA	; 250
     da4:	4e e0       	ldi	r20, 0x0E	; 14
     da6:	5d e3       	ldi	r21, 0x3D	; 61
     da8:	c3 01       	movw	r24, r6
     daa:	b2 01       	movw	r22, r4
     dac:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
     db0:	0e 94 66 16 	call	0x2ccc	; 0x2ccc <sin>
     db4:	26 e2       	ldi	r18, 0x26	; 38
     db6:	34 ee       	ldi	r19, 0xE4	; 228
     db8:	43 e8       	ldi	r20, 0x83	; 131
     dba:	5c e3       	ldi	r21, 0x3C	; 60
     dbc:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
     dc0:	9b 01       	movw	r18, r22
     dc2:	ac 01       	movw	r20, r24
     dc4:	c5 01       	movw	r24, r10
     dc6:	b4 01       	movw	r22, r8
     dc8:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__addsf3>
     dcc:	4b 01       	movw	r8, r22
     dce:	5c 01       	movw	r10, r24
	C1 = C1 - 0.0004*sinf(dr*3*Mpr);
     dd0:	20 e5       	ldi	r18, 0x50	; 80
     dd2:	37 e7       	ldi	r19, 0x77	; 119
     dd4:	46 e5       	ldi	r20, 0x56	; 86
     dd6:	5d e3       	ldi	r21, 0x3D	; 61
     dd8:	c3 01       	movw	r24, r6
     dda:	b2 01       	movw	r22, r4
     ddc:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
     de0:	0e 94 66 16 	call	0x2ccc	; 0x2ccc <sin>
     de4:	27 e1       	ldi	r18, 0x17	; 23
     de6:	37 eb       	ldi	r19, 0xB7	; 183
     de8:	41 ed       	ldi	r20, 0xD1	; 209
     dea:	59 e3       	ldi	r21, 0x39	; 57
     dec:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
     df0:	9b 01       	movw	r18, r22
     df2:	ac 01       	movw	r20, r24
     df4:	c5 01       	movw	r24, r10
     df6:	b4 01       	movw	r22, r8
     df8:	0e 94 d0 13 	call	0x27a0	; 0x27a0 <__subsf3>
     dfc:	4b 01       	movw	r8, r22
     dfe:	5c 01       	movw	r10, r24
	C1 = C1 + 0.0104*sinf(dr*2*F) - 0.0051*sinf(dr*(M+Mpr));
     e00:	25 e3       	ldi	r18, 0x35	; 53
     e02:	3a ef       	ldi	r19, 0xFA	; 250
     e04:	4e e0       	ldi	r20, 0x0E	; 14
     e06:	5d e3       	ldi	r21, 0x3D	; 61
     e08:	c7 01       	movw	r24, r14
     e0a:	b6 01       	movw	r22, r12
     e0c:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
     e10:	0e 94 66 16 	call	0x2ccc	; 0x2ccc <sin>
     e14:	23 ec       	ldi	r18, 0xC3	; 195
     e16:	34 e6       	ldi	r19, 0x64	; 100
     e18:	4a e2       	ldi	r20, 0x2A	; 42
     e1a:	5c e3       	ldi	r21, 0x3C	; 60
     e1c:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
     e20:	9b 01       	movw	r18, r22
     e22:	ac 01       	movw	r20, r24
     e24:	c5 01       	movw	r24, r10
     e26:	b4 01       	movw	r22, r8
     e28:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__addsf3>
     e2c:	4b 01       	movw	r8, r22
     e2e:	5c 01       	movw	r10, r24
     e30:	a3 01       	movw	r20, r6
     e32:	92 01       	movw	r18, r4
     e34:	69 85       	ldd	r22, Y+9	; 0x09
     e36:	7a 85       	ldd	r23, Y+10	; 0x0a
     e38:	8b 85       	ldd	r24, Y+11	; 0x0b
     e3a:	9c 85       	ldd	r25, Y+12	; 0x0c
     e3c:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__addsf3>
     e40:	25 e3       	ldi	r18, 0x35	; 53
     e42:	3a ef       	ldi	r19, 0xFA	; 250
     e44:	4e e8       	ldi	r20, 0x8E	; 142
     e46:	5c e3       	ldi	r21, 0x3C	; 60
     e48:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
     e4c:	0e 94 66 16 	call	0x2ccc	; 0x2ccc <sin>
     e50:	27 ee       	ldi	r18, 0xE7	; 231
     e52:	3d e1       	ldi	r19, 0x1D	; 29
     e54:	47 ea       	ldi	r20, 0xA7	; 167
     e56:	5b e3       	ldi	r21, 0x3B	; 59
     e58:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
     e5c:	9b 01       	movw	r18, r22
     e5e:	ac 01       	movw	r20, r24
     e60:	c5 01       	movw	r24, r10
     e62:	b4 01       	movw	r22, r8
     e64:	0e 94 d0 13 	call	0x27a0	; 0x27a0 <__subsf3>
     e68:	4b 01       	movw	r8, r22
     e6a:	5c 01       	movw	r10, r24
	C1 = C1 - 0.0074*sinf(dr*(M-Mpr)) + 0.0004*sinf(dr*(2*F+M));
     e6c:	a3 01       	movw	r20, r6
     e6e:	92 01       	movw	r18, r4
     e70:	69 85       	ldd	r22, Y+9	; 0x09
     e72:	7a 85       	ldd	r23, Y+10	; 0x0a
     e74:	8b 85       	ldd	r24, Y+11	; 0x0b
     e76:	9c 85       	ldd	r25, Y+12	; 0x0c
     e78:	0e 94 d0 13 	call	0x27a0	; 0x27a0 <__subsf3>
     e7c:	25 e3       	ldi	r18, 0x35	; 53
     e7e:	3a ef       	ldi	r19, 0xFA	; 250
     e80:	4e e8       	ldi	r20, 0x8E	; 142
     e82:	5c e3       	ldi	r21, 0x3C	; 60
     e84:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
     e88:	0e 94 66 16 	call	0x2ccc	; 0x2ccc <sin>
     e8c:	23 eb       	ldi	r18, 0xB3	; 179
     e8e:	3b e7       	ldi	r19, 0x7B	; 123
     e90:	42 ef       	ldi	r20, 0xF2	; 242
     e92:	5b e3       	ldi	r21, 0x3B	; 59
     e94:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
     e98:	9b 01       	movw	r18, r22
     e9a:	ac 01       	movw	r20, r24
     e9c:	c5 01       	movw	r24, r10
     e9e:	b4 01       	movw	r22, r8
     ea0:	0e 94 d0 13 	call	0x27a0	; 0x27a0 <__subsf3>
     ea4:	4b 01       	movw	r8, r22
     ea6:	5c 01       	movw	r10, r24
     ea8:	a7 01       	movw	r20, r14
     eaa:	96 01       	movw	r18, r12
     eac:	c7 01       	movw	r24, r14
     eae:	b6 01       	movw	r22, r12
     eb0:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__addsf3>
     eb4:	6b 01       	movw	r12, r22
     eb6:	7c 01       	movw	r14, r24
     eb8:	9b 01       	movw	r18, r22
     eba:	ac 01       	movw	r20, r24
     ebc:	69 85       	ldd	r22, Y+9	; 0x09
     ebe:	7a 85       	ldd	r23, Y+10	; 0x0a
     ec0:	8b 85       	ldd	r24, Y+11	; 0x0b
     ec2:	9c 85       	ldd	r25, Y+12	; 0x0c
     ec4:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__addsf3>
     ec8:	25 e3       	ldi	r18, 0x35	; 53
     eca:	3a ef       	ldi	r19, 0xFA	; 250
     ecc:	4e e8       	ldi	r20, 0x8E	; 142
     ece:	5c e3       	ldi	r21, 0x3C	; 60
     ed0:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
     ed4:	0e 94 66 16 	call	0x2ccc	; 0x2ccc <sin>
     ed8:	27 e1       	ldi	r18, 0x17	; 23
     eda:	37 eb       	ldi	r19, 0xB7	; 183
     edc:	41 ed       	ldi	r20, 0xD1	; 209
     ede:	59 e3       	ldi	r21, 0x39	; 57
     ee0:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
     ee4:	9b 01       	movw	r18, r22
     ee6:	ac 01       	movw	r20, r24
     ee8:	c5 01       	movw	r24, r10
     eea:	b4 01       	movw	r22, r8
     eec:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__addsf3>
     ef0:	4b 01       	movw	r8, r22
     ef2:	5c 01       	movw	r10, r24
	C1 = C1 - 0.0004*sinf(dr*(2*F-M)) - 0.0006*sinf(dr*(2*F+Mpr));
     ef4:	29 85       	ldd	r18, Y+9	; 0x09
     ef6:	3a 85       	ldd	r19, Y+10	; 0x0a
     ef8:	4b 85       	ldd	r20, Y+11	; 0x0b
     efa:	5c 85       	ldd	r21, Y+12	; 0x0c
     efc:	c7 01       	movw	r24, r14
     efe:	b6 01       	movw	r22, r12
     f00:	0e 94 d0 13 	call	0x27a0	; 0x27a0 <__subsf3>
     f04:	25 e3       	ldi	r18, 0x35	; 53
     f06:	3a ef       	ldi	r19, 0xFA	; 250
     f08:	4e e8       	ldi	r20, 0x8E	; 142
     f0a:	5c e3       	ldi	r21, 0x3C	; 60
     f0c:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
     f10:	0e 94 66 16 	call	0x2ccc	; 0x2ccc <sin>
     f14:	27 e1       	ldi	r18, 0x17	; 23
     f16:	37 eb       	ldi	r19, 0xB7	; 183
     f18:	41 ed       	ldi	r20, 0xD1	; 209
     f1a:	59 e3       	ldi	r21, 0x39	; 57
     f1c:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
     f20:	9b 01       	movw	r18, r22
     f22:	ac 01       	movw	r20, r24
     f24:	c5 01       	movw	r24, r10
     f26:	b4 01       	movw	r22, r8
     f28:	0e 94 d0 13 	call	0x27a0	; 0x27a0 <__subsf3>
     f2c:	4b 01       	movw	r8, r22
     f2e:	5c 01       	movw	r10, r24
     f30:	a7 01       	movw	r20, r14
     f32:	96 01       	movw	r18, r12
     f34:	c3 01       	movw	r24, r6
     f36:	b2 01       	movw	r22, r4
     f38:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__addsf3>
     f3c:	25 e3       	ldi	r18, 0x35	; 53
     f3e:	3a ef       	ldi	r19, 0xFA	; 250
     f40:	4e e8       	ldi	r20, 0x8E	; 142
     f42:	5c e3       	ldi	r21, 0x3C	; 60
     f44:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
     f48:	0e 94 66 16 	call	0x2ccc	; 0x2ccc <sin>
     f4c:	22 e5       	ldi	r18, 0x52	; 82
     f4e:	39 e4       	ldi	r19, 0x49	; 73
     f50:	4d e1       	ldi	r20, 0x1D	; 29
     f52:	5a e3       	ldi	r21, 0x3A	; 58
     f54:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
     f58:	9b 01       	movw	r18, r22
     f5a:	ac 01       	movw	r20, r24
     f5c:	c5 01       	movw	r24, r10
     f5e:	b4 01       	movw	r22, r8
     f60:	0e 94 d0 13 	call	0x27a0	; 0x27a0 <__subsf3>
     f64:	4b 01       	movw	r8, r22
     f66:	5c 01       	movw	r10, r24
	C1 = C1 + 0.0010*sinf(dr*(2*F-Mpr)) + 0.0005*sinf(dr*(2*Mpr+M));
     f68:	a3 01       	movw	r20, r6
     f6a:	92 01       	movw	r18, r4
     f6c:	c7 01       	movw	r24, r14
     f6e:	b6 01       	movw	r22, r12
     f70:	0e 94 d0 13 	call	0x27a0	; 0x27a0 <__subsf3>
     f74:	25 e3       	ldi	r18, 0x35	; 53
     f76:	3a ef       	ldi	r19, 0xFA	; 250
     f78:	4e e8       	ldi	r20, 0x8E	; 142
     f7a:	5c e3       	ldi	r21, 0x3C	; 60
     f7c:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
     f80:	0e 94 66 16 	call	0x2ccc	; 0x2ccc <sin>
     f84:	2f e6       	ldi	r18, 0x6F	; 111
     f86:	32 e1       	ldi	r19, 0x12	; 18
     f88:	43 e8       	ldi	r20, 0x83	; 131
     f8a:	5a e3       	ldi	r21, 0x3A	; 58
     f8c:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
     f90:	9b 01       	movw	r18, r22
     f92:	ac 01       	movw	r20, r24
     f94:	c5 01       	movw	r24, r10
     f96:	b4 01       	movw	r22, r8
     f98:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__addsf3>
     f9c:	6b 01       	movw	r12, r22
     f9e:	7c 01       	movw	r14, r24
     fa0:	a3 01       	movw	r20, r6
     fa2:	92 01       	movw	r18, r4
     fa4:	c3 01       	movw	r24, r6
     fa6:	b2 01       	movw	r22, r4
     fa8:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__addsf3>
     fac:	9b 01       	movw	r18, r22
     fae:	ac 01       	movw	r20, r24
     fb0:	69 85       	ldd	r22, Y+9	; 0x09
     fb2:	7a 85       	ldd	r23, Y+10	; 0x0a
     fb4:	8b 85       	ldd	r24, Y+11	; 0x0b
     fb6:	9c 85       	ldd	r25, Y+12	; 0x0c
     fb8:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__addsf3>
     fbc:	25 e3       	ldi	r18, 0x35	; 53
     fbe:	3a ef       	ldi	r19, 0xFA	; 250
     fc0:	4e e8       	ldi	r20, 0x8E	; 142
     fc2:	5c e3       	ldi	r21, 0x3C	; 60
     fc4:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
     fc8:	0e 94 66 16 	call	0x2ccc	; 0x2ccc <sin>
     fcc:	2f e6       	ldi	r18, 0x6F	; 111
     fce:	32 e1       	ldi	r19, 0x12	; 18
     fd0:	43 e0       	ldi	r20, 0x03	; 3
     fd2:	5a e3       	ldi	r21, 0x3A	; 58
     fd4:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
     fd8:	9b 01       	movw	r18, r22
     fda:	ac 01       	movw	r20, r24
     fdc:	c7 01       	movw	r24, r14
     fde:	b6 01       	movw	r22, r12
     fe0:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__addsf3>
     fe4:	6b 01       	movw	r12, r22
     fe6:	7c 01       	movw	r14, r24
	if (T < -11) {
     fe8:	20 e0       	ldi	r18, 0x00	; 0
     fea:	30 e0       	ldi	r19, 0x00	; 0
     fec:	40 e3       	ldi	r20, 0x30	; 48
     fee:	51 ec       	ldi	r21, 0xC1	; 193
     ff0:	69 81       	ldd	r22, Y+1	; 0x01
     ff2:	7a 81       	ldd	r23, Y+2	; 0x02
     ff4:	8b 81       	ldd	r24, Y+3	; 0x03
     ff6:	9c 81       	ldd	r25, Y+4	; 0x04
     ff8:	0e 94 3d 14 	call	0x287a	; 0x287a <__cmpsf2>
     ffc:	88 23       	and	r24, r24
     ffe:	0c f0       	brlt	.+2      	; 0x1002 <getNewMoonDay+0x59e>
    1000:	51 c0       	rjmp	.+162    	; 0x10a4 <getNewMoonDay+0x640>
		deltat= 0.001 + 0.000839*T + 0.0002261*T2 - 0.00000845*T3 - 0.000000081*T*T3;
    1002:	26 e5       	ldi	r18, 0x56	; 86
    1004:	30 ef       	ldi	r19, 0xF0	; 240
    1006:	4b e5       	ldi	r20, 0x5B	; 91
    1008:	5a e3       	ldi	r21, 0x3A	; 58
    100a:	69 81       	ldd	r22, Y+1	; 0x01
    100c:	7a 81       	ldd	r23, Y+2	; 0x02
    100e:	8b 81       	ldd	r24, Y+3	; 0x03
    1010:	9c 81       	ldd	r25, Y+4	; 0x04
    1012:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
    1016:	2f e6       	ldi	r18, 0x6F	; 111
    1018:	32 e1       	ldi	r19, 0x12	; 18
    101a:	43 e8       	ldi	r20, 0x83	; 131
    101c:	5a e3       	ldi	r21, 0x3A	; 58
    101e:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__addsf3>
    1022:	4b 01       	movw	r8, r22
    1024:	5c 01       	movw	r10, r24
    1026:	22 e4       	ldi	r18, 0x42	; 66
    1028:	35 e1       	ldi	r19, 0x15	; 21
    102a:	4d e6       	ldi	r20, 0x6D	; 109
    102c:	59 e3       	ldi	r21, 0x39	; 57
    102e:	6d 81       	ldd	r22, Y+5	; 0x05
    1030:	7e 81       	ldd	r23, Y+6	; 0x06
    1032:	8f 81       	ldd	r24, Y+7	; 0x07
    1034:	98 85       	ldd	r25, Y+8	; 0x08
    1036:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
    103a:	9b 01       	movw	r18, r22
    103c:	ac 01       	movw	r20, r24
    103e:	c5 01       	movw	r24, r10
    1040:	b4 01       	movw	r22, r8
    1042:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__addsf3>
    1046:	4b 01       	movw	r8, r22
    1048:	5c 01       	movw	r10, r24
    104a:	29 e7       	ldi	r18, 0x79	; 121
    104c:	34 ec       	ldi	r19, 0xC4	; 196
    104e:	4d e0       	ldi	r20, 0x0D	; 13
    1050:	57 e3       	ldi	r21, 0x37	; 55
    1052:	6d 85       	ldd	r22, Y+13	; 0x0d
    1054:	7e 85       	ldd	r23, Y+14	; 0x0e
    1056:	8f 85       	ldd	r24, Y+15	; 0x0f
    1058:	98 89       	ldd	r25, Y+16	; 0x10
    105a:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
    105e:	9b 01       	movw	r18, r22
    1060:	ac 01       	movw	r20, r24
    1062:	c5 01       	movw	r24, r10
    1064:	b4 01       	movw	r22, r8
    1066:	0e 94 d0 13 	call	0x27a0	; 0x27a0 <__subsf3>
    106a:	4b 01       	movw	r8, r22
    106c:	5c 01       	movw	r10, r24
    106e:	29 e3       	ldi	r18, 0x39	; 57
    1070:	32 ef       	ldi	r19, 0xF2	; 242
    1072:	4d ea       	ldi	r20, 0xAD	; 173
    1074:	53 e3       	ldi	r21, 0x33	; 51
    1076:	69 81       	ldd	r22, Y+1	; 0x01
    1078:	7a 81       	ldd	r23, Y+2	; 0x02
    107a:	8b 81       	ldd	r24, Y+3	; 0x03
    107c:	9c 81       	ldd	r25, Y+4	; 0x04
    107e:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
    1082:	9b 01       	movw	r18, r22
    1084:	ac 01       	movw	r20, r24
    1086:	6d 85       	ldd	r22, Y+13	; 0x0d
    1088:	7e 85       	ldd	r23, Y+14	; 0x0e
    108a:	8f 85       	ldd	r24, Y+15	; 0x0f
    108c:	98 89       	ldd	r25, Y+16	; 0x10
    108e:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
    1092:	9b 01       	movw	r18, r22
    1094:	ac 01       	movw	r20, r24
    1096:	c5 01       	movw	r24, r10
    1098:	b4 01       	movw	r22, r8
    109a:	0e 94 d0 13 	call	0x27a0	; 0x27a0 <__subsf3>
    109e:	4b 01       	movw	r8, r22
    10a0:	5c 01       	movw	r10, r24
    10a2:	24 c0       	rjmp	.+72     	; 0x10ec <getNewMoonDay+0x688>
		} else {
		deltat= -0.000278 + 0.000265*T + 0.000262*T2;
    10a4:	23 eb       	ldi	r18, 0xB3	; 179
    10a6:	3f ee       	ldi	r19, 0xEF	; 239
    10a8:	4a e8       	ldi	r20, 0x8A	; 138
    10aa:	59 e3       	ldi	r21, 0x39	; 57
    10ac:	69 81       	ldd	r22, Y+1	; 0x01
    10ae:	7a 81       	ldd	r23, Y+2	; 0x02
    10b0:	8b 81       	ldd	r24, Y+3	; 0x03
    10b2:	9c 81       	ldd	r25, Y+4	; 0x04
    10b4:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
    10b8:	27 e8       	ldi	r18, 0x87	; 135
    10ba:	30 ec       	ldi	r19, 0xC0	; 192
    10bc:	41 e9       	ldi	r20, 0x91	; 145
    10be:	59 e3       	ldi	r21, 0x39	; 57
    10c0:	0e 94 d0 13 	call	0x27a0	; 0x27a0 <__subsf3>
    10c4:	4b 01       	movw	r8, r22
    10c6:	5c 01       	movw	r10, r24
    10c8:	2b e0       	ldi	r18, 0x0B	; 11
    10ca:	3d e5       	ldi	r19, 0x5D	; 93
    10cc:	49 e8       	ldi	r20, 0x89	; 137
    10ce:	59 e3       	ldi	r21, 0x39	; 57
    10d0:	6d 81       	ldd	r22, Y+5	; 0x05
    10d2:	7e 81       	ldd	r23, Y+6	; 0x06
    10d4:	8f 81       	ldd	r24, Y+7	; 0x07
    10d6:	98 85       	ldd	r25, Y+8	; 0x08
    10d8:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
    10dc:	9b 01       	movw	r18, r22
    10de:	ac 01       	movw	r20, r24
    10e0:	c5 01       	movw	r24, r10
    10e2:	b4 01       	movw	r22, r8
    10e4:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__addsf3>
    10e8:	4b 01       	movw	r8, r22
    10ea:	5c 01       	movw	r10, r24
	};
	JdNew = Jd1 + C1 - deltat;
    10ec:	a7 01       	movw	r20, r14
    10ee:	96 01       	movw	r18, r12
    10f0:	69 89       	ldd	r22, Y+17	; 0x11
    10f2:	7a 89       	ldd	r23, Y+18	; 0x12
    10f4:	8b 89       	ldd	r24, Y+19	; 0x13
    10f6:	9c 89       	ldd	r25, Y+20	; 0x14
    10f8:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__addsf3>
    10fc:	a5 01       	movw	r20, r10
    10fe:	94 01       	movw	r18, r8
    1100:	0e 94 d0 13 	call	0x27a0	; 0x27a0 <__subsf3>
	return floorf(JdNew + 0.5 + timeZone/24);
    1104:	20 e0       	ldi	r18, 0x00	; 0
    1106:	30 e0       	ldi	r19, 0x00	; 0
    1108:	40 e0       	ldi	r20, 0x00	; 0
    110a:	5f e3       	ldi	r21, 0x3F	; 63
    110c:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__addsf3>
    1110:	6b 01       	movw	r12, r22
    1112:	7c 01       	movw	r14, r24
    1114:	8d 89       	ldd	r24, Y+21	; 0x15
    1116:	9e 89       	ldd	r25, Y+22	; 0x16
    1118:	68 e1       	ldi	r22, 0x18	; 24
    111a:	70 e0       	ldi	r23, 0x00	; 0
    111c:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    1120:	07 2e       	mov	r0, r23
    1122:	00 0c       	add	r0, r0
    1124:	88 0b       	sbc	r24, r24
    1126:	99 0b       	sbc	r25, r25
    1128:	0e 94 ec 14 	call	0x29d8	; 0x29d8 <__floatsisf>
    112c:	9b 01       	movw	r18, r22
    112e:	ac 01       	movw	r20, r24
    1130:	c7 01       	movw	r24, r14
    1132:	b6 01       	movw	r22, r12
    1134:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__addsf3>
    1138:	0e 94 27 15 	call	0x2a4e	; 0x2a4e <floor>
}
    113c:	66 96       	adiw	r28, 0x16	; 22
    113e:	0f b6       	in	r0, 0x3f	; 63
    1140:	f8 94       	cli
    1142:	de bf       	out	0x3e, r29	; 62
    1144:	0f be       	out	0x3f, r0	; 63
    1146:	cd bf       	out	0x3d, r28	; 61
    1148:	df 91       	pop	r29
    114a:	cf 91       	pop	r28
    114c:	ff 90       	pop	r15
    114e:	ef 90       	pop	r14
    1150:	df 90       	pop	r13
    1152:	cf 90       	pop	r12
    1154:	bf 90       	pop	r11
    1156:	af 90       	pop	r10
    1158:	9f 90       	pop	r9
    115a:	8f 90       	pop	r8
    115c:	7f 90       	pop	r7
    115e:	6f 90       	pop	r6
    1160:	5f 90       	pop	r5
    1162:	4f 90       	pop	r4
    1164:	08 95       	ret

00001166 <getSunLongitude>:

double getSunLongitude(long double jdn, int timeZone)
{
    1166:	4f 92       	push	r4
    1168:	5f 92       	push	r5
    116a:	6f 92       	push	r6
    116c:	7f 92       	push	r7
    116e:	8f 92       	push	r8
    1170:	9f 92       	push	r9
    1172:	af 92       	push	r10
    1174:	bf 92       	push	r11
    1176:	cf 92       	push	r12
    1178:	df 92       	push	r13
    117a:	ef 92       	push	r14
    117c:	ff 92       	push	r15
    117e:	cf 93       	push	r28
    1180:	df 93       	push	r29
    1182:	cd b7       	in	r28, 0x3d	; 61
    1184:	de b7       	in	r29, 0x3e	; 62
    1186:	28 97       	sbiw	r28, 0x08	; 8
    1188:	0f b6       	in	r0, 0x3f	; 63
    118a:	f8 94       	cli
    118c:	de bf       	out	0x3e, r29	; 62
    118e:	0f be       	out	0x3f, r0	; 63
    1190:	cd bf       	out	0x3d, r28	; 61
    1192:	5a 01       	movw	r10, r20
	long double T, T2, dr, M, L0, DL, L;
	T = (jdn - 2451545.5 - timeZone/24) / 36525; // Time in Julian centuries from 2000-01-01 12:00:00 GMT
    1194:	26 e6       	ldi	r18, 0x66	; 102
    1196:	31 ea       	ldi	r19, 0xA1	; 161
    1198:	45 e1       	ldi	r20, 0x15	; 21
    119a:	5a e4       	ldi	r21, 0x4A	; 74
    119c:	0e 94 d0 13 	call	0x27a0	; 0x27a0 <__subsf3>
    11a0:	6b 01       	movw	r12, r22
    11a2:	7c 01       	movw	r14, r24
    11a4:	c5 01       	movw	r24, r10
    11a6:	68 e1       	ldi	r22, 0x18	; 24
    11a8:	70 e0       	ldi	r23, 0x00	; 0
    11aa:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    11ae:	07 2e       	mov	r0, r23
    11b0:	00 0c       	add	r0, r0
    11b2:	88 0b       	sbc	r24, r24
    11b4:	99 0b       	sbc	r25, r25
    11b6:	0e 94 ec 14 	call	0x29d8	; 0x29d8 <__floatsisf>
    11ba:	9b 01       	movw	r18, r22
    11bc:	ac 01       	movw	r20, r24
    11be:	c7 01       	movw	r24, r14
    11c0:	b6 01       	movw	r22, r12
    11c2:	0e 94 d0 13 	call	0x27a0	; 0x27a0 <__subsf3>
    11c6:	20 e0       	ldi	r18, 0x00	; 0
    11c8:	3d ea       	ldi	r19, 0xAD	; 173
    11ca:	4e e0       	ldi	r20, 0x0E	; 14
    11cc:	57 e4       	ldi	r21, 0x47	; 71
    11ce:	0e 94 42 14 	call	0x2884	; 0x2884 <__divsf3>
    11d2:	6b 01       	movw	r12, r22
    11d4:	7c 01       	movw	r14, r24
	T2 = T*T;
    11d6:	9b 01       	movw	r18, r22
    11d8:	ac 01       	movw	r20, r24
    11da:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
    11de:	4b 01       	movw	r8, r22
    11e0:	5c 01       	movw	r10, r24
	dr = M_PI/180; // degree to radian
	M = 357.52910 + 35999.05030*T - 0.0001559*T2 - 0.00000048*T*T2; // mean anomaly, degree
    11e2:	2d e0       	ldi	r18, 0x0D	; 13
    11e4:	3f e9       	ldi	r19, 0x9F	; 159
    11e6:	4c e0       	ldi	r20, 0x0C	; 12
    11e8:	57 e4       	ldi	r21, 0x47	; 71
    11ea:	c7 01       	movw	r24, r14
    11ec:	b6 01       	movw	r22, r12
    11ee:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
    11f2:	2a eb       	ldi	r18, 0xBA	; 186
    11f4:	33 ec       	ldi	r19, 0xC3	; 195
    11f6:	42 eb       	ldi	r20, 0xB2	; 178
    11f8:	53 e4       	ldi	r21, 0x43	; 67
    11fa:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__addsf3>
    11fe:	2b 01       	movw	r4, r22
    1200:	3c 01       	movw	r6, r24
    1202:	26 e1       	ldi	r18, 0x16	; 22
    1204:	39 e7       	ldi	r19, 0x79	; 121
    1206:	43 e2       	ldi	r20, 0x23	; 35
    1208:	59 e3       	ldi	r21, 0x39	; 57
    120a:	c5 01       	movw	r24, r10
    120c:	b4 01       	movw	r22, r8
    120e:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
    1212:	9b 01       	movw	r18, r22
    1214:	ac 01       	movw	r20, r24
    1216:	c3 01       	movw	r24, r6
    1218:	b2 01       	movw	r22, r4
    121a:	0e 94 d0 13 	call	0x27a0	; 0x27a0 <__subsf3>
    121e:	2b 01       	movw	r4, r22
    1220:	3c 01       	movw	r6, r24
    1222:	29 e5       	ldi	r18, 0x59	; 89
    1224:	39 ed       	ldi	r19, 0xD9	; 217
    1226:	40 e0       	ldi	r20, 0x00	; 0
    1228:	55 e3       	ldi	r21, 0x35	; 53
    122a:	c7 01       	movw	r24, r14
    122c:	b6 01       	movw	r22, r12
    122e:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
    1232:	9b 01       	movw	r18, r22
    1234:	ac 01       	movw	r20, r24
    1236:	c5 01       	movw	r24, r10
    1238:	b4 01       	movw	r22, r8
    123a:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
    123e:	9b 01       	movw	r18, r22
    1240:	ac 01       	movw	r20, r24
    1242:	c3 01       	movw	r24, r6
    1244:	b2 01       	movw	r22, r4
    1246:	0e 94 d0 13 	call	0x27a0	; 0x27a0 <__subsf3>
    124a:	2b 01       	movw	r4, r22
    124c:	3c 01       	movw	r6, r24
	L0 = 280.46645 + 36000.76983*T + 0.0003032*T2; // mean longitude, degree
    124e:	25 ec       	ldi	r18, 0xC5	; 197
    1250:	30 ea       	ldi	r19, 0xA0	; 160
    1252:	4c e0       	ldi	r20, 0x0C	; 12
    1254:	57 e4       	ldi	r21, 0x47	; 71
    1256:	c7 01       	movw	r24, r14
    1258:	b6 01       	movw	r22, r12
    125a:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
    125e:	25 eb       	ldi	r18, 0xB5	; 181
    1260:	3b e3       	ldi	r19, 0x3B	; 59
    1262:	4c e8       	ldi	r20, 0x8C	; 140
    1264:	53 e4       	ldi	r21, 0x43	; 67
    1266:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__addsf3>
    126a:	69 83       	std	Y+1, r22	; 0x01
    126c:	7a 83       	std	Y+2, r23	; 0x02
    126e:	8b 83       	std	Y+3, r24	; 0x03
    1270:	9c 83       	std	Y+4, r25	; 0x04
    1272:	21 ed       	ldi	r18, 0xD1	; 209
    1274:	36 ef       	ldi	r19, 0xF6	; 246
    1276:	4e e9       	ldi	r20, 0x9E	; 158
    1278:	59 e3       	ldi	r21, 0x39	; 57
    127a:	c5 01       	movw	r24, r10
    127c:	b4 01       	movw	r22, r8
    127e:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
    1282:	9b 01       	movw	r18, r22
    1284:	ac 01       	movw	r20, r24
    1286:	69 81       	ldd	r22, Y+1	; 0x01
    1288:	7a 81       	ldd	r23, Y+2	; 0x02
    128a:	8b 81       	ldd	r24, Y+3	; 0x03
    128c:	9c 81       	ldd	r25, Y+4	; 0x04
    128e:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__addsf3>
    1292:	69 83       	std	Y+1, r22	; 0x01
    1294:	7a 83       	std	Y+2, r23	; 0x02
    1296:	8b 83       	std	Y+3, r24	; 0x03
    1298:	9c 83       	std	Y+4, r25	; 0x04
	DL = (1.914600 - 0.004817*T - 0.000014*T2)*sinf(dr*M);
    129a:	2d ee       	ldi	r18, 0xED	; 237
    129c:	37 ed       	ldi	r19, 0xD7	; 215
    129e:	4d e9       	ldi	r20, 0x9D	; 157
    12a0:	5b e3       	ldi	r21, 0x3B	; 59
    12a2:	c7 01       	movw	r24, r14
    12a4:	b6 01       	movw	r22, r12
    12a6:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
    12aa:	9b 01       	movw	r18, r22
    12ac:	ac 01       	movw	r20, r24
    12ae:	6d e9       	ldi	r22, 0x9D	; 157
    12b0:	71 e1       	ldi	r23, 0x11	; 17
    12b2:	85 ef       	ldi	r24, 0xF5	; 245
    12b4:	9f e3       	ldi	r25, 0x3F	; 63
    12b6:	0e 94 d0 13 	call	0x27a0	; 0x27a0 <__subsf3>
    12ba:	6d 83       	std	Y+5, r22	; 0x05
    12bc:	7e 83       	std	Y+6, r23	; 0x06
    12be:	8f 83       	std	Y+7, r24	; 0x07
    12c0:	98 87       	std	Y+8, r25	; 0x08
    12c2:	2b e8       	ldi	r18, 0x8B	; 139
    12c4:	31 ee       	ldi	r19, 0xE1	; 225
    12c6:	4a e6       	ldi	r20, 0x6A	; 106
    12c8:	57 e3       	ldi	r21, 0x37	; 55
    12ca:	c5 01       	movw	r24, r10
    12cc:	b4 01       	movw	r22, r8
    12ce:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
    12d2:	9b 01       	movw	r18, r22
    12d4:	ac 01       	movw	r20, r24
    12d6:	6d 81       	ldd	r22, Y+5	; 0x05
    12d8:	7e 81       	ldd	r23, Y+6	; 0x06
    12da:	8f 81       	ldd	r24, Y+7	; 0x07
    12dc:	98 85       	ldd	r25, Y+8	; 0x08
    12de:	0e 94 d0 13 	call	0x27a0	; 0x27a0 <__subsf3>
    12e2:	4b 01       	movw	r8, r22
    12e4:	5c 01       	movw	r10, r24
    12e6:	25 e3       	ldi	r18, 0x35	; 53
    12e8:	3a ef       	ldi	r19, 0xFA	; 250
    12ea:	4e e8       	ldi	r20, 0x8E	; 142
    12ec:	5c e3       	ldi	r21, 0x3C	; 60
    12ee:	c3 01       	movw	r24, r6
    12f0:	b2 01       	movw	r22, r4
    12f2:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
    12f6:	0e 94 66 16 	call	0x2ccc	; 0x2ccc <sin>
    12fa:	9b 01       	movw	r18, r22
    12fc:	ac 01       	movw	r20, r24
    12fe:	c5 01       	movw	r24, r10
    1300:	b4 01       	movw	r22, r8
    1302:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
    1306:	4b 01       	movw	r8, r22
    1308:	5c 01       	movw	r10, r24
	DL = DL + (0.019993 - 0.000101*T)*sinf(dr*2*M) + 0.000290*sinf(dr*3*M);
    130a:	26 ef       	ldi	r18, 0xF6	; 246
    130c:	3f ec       	ldi	r19, 0xCF	; 207
    130e:	43 ed       	ldi	r20, 0xD3	; 211
    1310:	58 e3       	ldi	r21, 0x38	; 56
    1312:	c7 01       	movw	r24, r14
    1314:	b6 01       	movw	r22, r12
    1316:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
    131a:	9b 01       	movw	r18, r22
    131c:	ac 01       	movw	r20, r24
    131e:	6c e5       	ldi	r22, 0x5C	; 92
    1320:	78 ec       	ldi	r23, 0xC8	; 200
    1322:	83 ea       	ldi	r24, 0xA3	; 163
    1324:	9c e3       	ldi	r25, 0x3C	; 60
    1326:	0e 94 d0 13 	call	0x27a0	; 0x27a0 <__subsf3>
    132a:	6b 01       	movw	r12, r22
    132c:	7c 01       	movw	r14, r24
    132e:	25 e3       	ldi	r18, 0x35	; 53
    1330:	3a ef       	ldi	r19, 0xFA	; 250
    1332:	4e e0       	ldi	r20, 0x0E	; 14
    1334:	5d e3       	ldi	r21, 0x3D	; 61
    1336:	c3 01       	movw	r24, r6
    1338:	b2 01       	movw	r22, r4
    133a:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
    133e:	0e 94 66 16 	call	0x2ccc	; 0x2ccc <sin>
    1342:	9b 01       	movw	r18, r22
    1344:	ac 01       	movw	r20, r24
    1346:	c7 01       	movw	r24, r14
    1348:	b6 01       	movw	r22, r12
    134a:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
    134e:	9b 01       	movw	r18, r22
    1350:	ac 01       	movw	r20, r24
    1352:	c5 01       	movw	r24, r10
    1354:	b4 01       	movw	r22, r8
    1356:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__addsf3>
    135a:	6b 01       	movw	r12, r22
    135c:	7c 01       	movw	r14, r24
    135e:	20 e5       	ldi	r18, 0x50	; 80
    1360:	37 e7       	ldi	r19, 0x77	; 119
    1362:	46 e5       	ldi	r20, 0x56	; 86
    1364:	5d e3       	ldi	r21, 0x3D	; 61
    1366:	c3 01       	movw	r24, r6
    1368:	b2 01       	movw	r22, r4
    136a:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
    136e:	0e 94 66 16 	call	0x2ccc	; 0x2ccc <sin>
    1372:	24 e2       	ldi	r18, 0x24	; 36
    1374:	3b e0       	ldi	r19, 0x0B	; 11
    1376:	48 e9       	ldi	r20, 0x98	; 152
    1378:	59 e3       	ldi	r21, 0x39	; 57
    137a:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
    137e:	9b 01       	movw	r18, r22
    1380:	ac 01       	movw	r20, r24
    1382:	c7 01       	movw	r24, r14
    1384:	b6 01       	movw	r22, r12
    1386:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__addsf3>
    138a:	9b 01       	movw	r18, r22
    138c:	ac 01       	movw	r20, r24
	L = L0 + DL; // true longitude, degree
    138e:	69 81       	ldd	r22, Y+1	; 0x01
    1390:	7a 81       	ldd	r23, Y+2	; 0x02
    1392:	8b 81       	ldd	r24, Y+3	; 0x03
    1394:	9c 81       	ldd	r25, Y+4	; 0x04
    1396:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__addsf3>
	L = L*dr;
    139a:	25 e3       	ldi	r18, 0x35	; 53
    139c:	3a ef       	ldi	r19, 0xFA	; 250
    139e:	4e e8       	ldi	r20, 0x8E	; 142
    13a0:	5c e3       	ldi	r21, 0x3C	; 60
    13a2:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
    13a6:	6b 01       	movw	r12, r22
    13a8:	7c 01       	movw	r14, r24
	L = L - M_PI*2*(floorf(L/(M_PI*2))); // Normalize to (0, 2*PI)
    13aa:	2b ed       	ldi	r18, 0xDB	; 219
    13ac:	3f e0       	ldi	r19, 0x0F	; 15
    13ae:	49 ec       	ldi	r20, 0xC9	; 201
    13b0:	50 e4       	ldi	r21, 0x40	; 64
    13b2:	0e 94 42 14 	call	0x2884	; 0x2884 <__divsf3>
    13b6:	0e 94 27 15 	call	0x2a4e	; 0x2a4e <floor>
    13ba:	2b ed       	ldi	r18, 0xDB	; 219
    13bc:	3f e0       	ldi	r19, 0x0F	; 15
    13be:	49 ec       	ldi	r20, 0xC9	; 201
    13c0:	50 e4       	ldi	r21, 0x40	; 64
    13c2:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
    13c6:	9b 01       	movw	r18, r22
    13c8:	ac 01       	movw	r20, r24
    13ca:	c7 01       	movw	r24, r14
    13cc:	b6 01       	movw	r22, r12
    13ce:	0e 94 d0 13 	call	0x27a0	; 0x27a0 <__subsf3>
	return floorf(L / M_PI * 6);
    13d2:	2b ed       	ldi	r18, 0xDB	; 219
    13d4:	3f e0       	ldi	r19, 0x0F	; 15
    13d6:	49 e4       	ldi	r20, 0x49	; 73
    13d8:	50 e4       	ldi	r21, 0x40	; 64
    13da:	0e 94 42 14 	call	0x2884	; 0x2884 <__divsf3>
    13de:	20 e0       	ldi	r18, 0x00	; 0
    13e0:	30 e0       	ldi	r19, 0x00	; 0
    13e2:	40 ec       	ldi	r20, 0xC0	; 192
    13e4:	50 e4       	ldi	r21, 0x40	; 64
    13e6:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
    13ea:	0e 94 27 15 	call	0x2a4e	; 0x2a4e <floor>
}
    13ee:	28 96       	adiw	r28, 0x08	; 8
    13f0:	0f b6       	in	r0, 0x3f	; 63
    13f2:	f8 94       	cli
    13f4:	de bf       	out	0x3e, r29	; 62
    13f6:	0f be       	out	0x3f, r0	; 63
    13f8:	cd bf       	out	0x3d, r28	; 61
    13fa:	df 91       	pop	r29
    13fc:	cf 91       	pop	r28
    13fe:	ff 90       	pop	r15
    1400:	ef 90       	pop	r14
    1402:	df 90       	pop	r13
    1404:	cf 90       	pop	r12
    1406:	bf 90       	pop	r11
    1408:	af 90       	pop	r10
    140a:	9f 90       	pop	r9
    140c:	8f 90       	pop	r8
    140e:	7f 90       	pop	r7
    1410:	6f 90       	pop	r6
    1412:	5f 90       	pop	r5
    1414:	4f 90       	pop	r4
    1416:	08 95       	ret

00001418 <getLunarMonth11>:

double getLunarMonth11(uint16_t yy, int timeZone)
{
    1418:	8f 92       	push	r8
    141a:	9f 92       	push	r9
    141c:	af 92       	push	r10
    141e:	bf 92       	push	r11
    1420:	cf 92       	push	r12
    1422:	df 92       	push	r13
    1424:	ef 92       	push	r14
    1426:	ff 92       	push	r15
    1428:	cf 93       	push	r28
    142a:	df 93       	push	r29
    142c:	eb 01       	movw	r28, r22
	long double k, off, nm, sunLong;
	off = jdFromDate(31, 12, yy) - 2415021;
    142e:	ac 01       	movw	r20, r24
    1430:	6c e0       	ldi	r22, 0x0C	; 12
    1432:	8f e1       	ldi	r24, 0x1F	; 31
    1434:	0e 94 4c 04 	call	0x898	; 0x898 <jdFromDate>
    1438:	24 eb       	ldi	r18, 0xB4	; 180
    143a:	36 e6       	ldi	r19, 0x66	; 102
    143c:	43 e1       	ldi	r20, 0x13	; 19
    143e:	5a e4       	ldi	r21, 0x4A	; 74
    1440:	0e 94 d0 13 	call	0x27a0	; 0x27a0 <__subsf3>
	k = floorf(off / 29.530588853);
    1444:	25 ea       	ldi	r18, 0xA5	; 165
    1446:	3e e3       	ldi	r19, 0x3E	; 62
    1448:	4c ee       	ldi	r20, 0xEC	; 236
    144a:	51 e4       	ldi	r21, 0x41	; 65
    144c:	0e 94 42 14 	call	0x2884	; 0x2884 <__divsf3>
    1450:	0e 94 27 15 	call	0x2a4e	; 0x2a4e <floor>
    1454:	4b 01       	movw	r8, r22
    1456:	5c 01       	movw	r10, r24
	nm = getNewMoonDay(k, timeZone);
    1458:	ae 01       	movw	r20, r28
    145a:	0e 94 32 05 	call	0xa64	; 0xa64 <getNewMoonDay>
    145e:	6b 01       	movw	r12, r22
    1460:	7c 01       	movw	r14, r24
	sunLong = getSunLongitude(nm, timeZone); // sun longitude at local midnight
    1462:	ae 01       	movw	r20, r28
    1464:	0e 94 b3 08 	call	0x1166	; 0x1166 <getSunLongitude>
	if (sunLong >= 9) {
    1468:	20 e0       	ldi	r18, 0x00	; 0
    146a:	30 e0       	ldi	r19, 0x00	; 0
    146c:	40 e1       	ldi	r20, 0x10	; 16
    146e:	51 e4       	ldi	r21, 0x41	; 65
    1470:	0e 94 f4 15 	call	0x2be8	; 0x2be8 <__gesf2>
    1474:	88 23       	and	r24, r24
    1476:	6c f0       	brlt	.+26     	; 0x1492 <getLunarMonth11+0x7a>
		nm = getNewMoonDay(k-1, timeZone);
    1478:	20 e0       	ldi	r18, 0x00	; 0
    147a:	30 e0       	ldi	r19, 0x00	; 0
    147c:	40 e8       	ldi	r20, 0x80	; 128
    147e:	5f e3       	ldi	r21, 0x3F	; 63
    1480:	c5 01       	movw	r24, r10
    1482:	b4 01       	movw	r22, r8
    1484:	0e 94 d0 13 	call	0x27a0	; 0x27a0 <__subsf3>
    1488:	ae 01       	movw	r20, r28
    148a:	0e 94 32 05 	call	0xa64	; 0xa64 <getNewMoonDay>
    148e:	6b 01       	movw	r12, r22
    1490:	7c 01       	movw	r14, r24
	}
	return nm;
}
    1492:	c7 01       	movw	r24, r14
    1494:	b6 01       	movw	r22, r12
    1496:	df 91       	pop	r29
    1498:	cf 91       	pop	r28
    149a:	ff 90       	pop	r15
    149c:	ef 90       	pop	r14
    149e:	df 90       	pop	r13
    14a0:	cf 90       	pop	r12
    14a2:	bf 90       	pop	r11
    14a4:	af 90       	pop	r10
    14a6:	9f 90       	pop	r9
    14a8:	8f 90       	pop	r8
    14aa:	08 95       	ret

000014ac <getLeapMonthOffset>:

double getLeapMonthOffset(long double a11, int timeZone)
{
    14ac:	2f 92       	push	r2
    14ae:	3f 92       	push	r3
    14b0:	4f 92       	push	r4
    14b2:	5f 92       	push	r5
    14b4:	6f 92       	push	r6
    14b6:	7f 92       	push	r7
    14b8:	8f 92       	push	r8
    14ba:	9f 92       	push	r9
    14bc:	af 92       	push	r10
    14be:	bf 92       	push	r11
    14c0:	cf 92       	push	r12
    14c2:	df 92       	push	r13
    14c4:	ef 92       	push	r14
    14c6:	ff 92       	push	r15
    14c8:	0f 93       	push	r16
    14ca:	1f 93       	push	r17
    14cc:	cf 93       	push	r28
    14ce:	df 93       	push	r29
    14d0:	ea 01       	movw	r28, r20
	long double k, last, arc, i;
	k = floorf((a11 - 2415021.076998695) / 29.530588853 + 0.5);
    14d2:	24 eb       	ldi	r18, 0xB4	; 180
    14d4:	36 e6       	ldi	r19, 0x66	; 102
    14d6:	43 e1       	ldi	r20, 0x13	; 19
    14d8:	5a e4       	ldi	r21, 0x4A	; 74
    14da:	0e 94 d0 13 	call	0x27a0	; 0x27a0 <__subsf3>
    14de:	25 ea       	ldi	r18, 0xA5	; 165
    14e0:	3e e3       	ldi	r19, 0x3E	; 62
    14e2:	4c ee       	ldi	r20, 0xEC	; 236
    14e4:	51 e4       	ldi	r21, 0x41	; 65
    14e6:	0e 94 42 14 	call	0x2884	; 0x2884 <__divsf3>
    14ea:	20 e0       	ldi	r18, 0x00	; 0
    14ec:	30 e0       	ldi	r19, 0x00	; 0
    14ee:	40 e0       	ldi	r20, 0x00	; 0
    14f0:	5f e3       	ldi	r21, 0x3F	; 63
    14f2:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__addsf3>
    14f6:	0e 94 27 15 	call	0x2a4e	; 0x2a4e <floor>
    14fa:	4b 01       	movw	r8, r22
    14fc:	5c 01       	movw	r10, r24
	last = 0;
	i = 1; // We start with the month following lunar month 11
	arc = getSunLongitude(getNewMoonDay(k+i, timeZone), timeZone);
    14fe:	20 e0       	ldi	r18, 0x00	; 0
    1500:	30 e0       	ldi	r19, 0x00	; 0
    1502:	40 e8       	ldi	r20, 0x80	; 128
    1504:	5f e3       	ldi	r21, 0x3F	; 63
    1506:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__addsf3>
    150a:	ae 01       	movw	r20, r28
    150c:	0e 94 32 05 	call	0xa64	; 0xa64 <getNewMoonDay>
    1510:	ae 01       	movw	r20, r28
    1512:	0e 94 b3 08 	call	0x1166	; 0x1166 <getSunLongitude>
    1516:	56 2e       	mov	r5, r22
    1518:	47 2e       	mov	r4, r23
    151a:	38 2e       	mov	r3, r24
    151c:	29 2e       	mov	r2, r25
double getLeapMonthOffset(long double a11, int timeZone)
{
	long double k, last, arc, i;
	k = floorf((a11 - 2415021.076998695) / 29.530588853 + 0.5);
	last = 0;
	i = 1; // We start with the month following lunar month 11
    151e:	0f 2e       	mov	r0, r31
    1520:	c1 2c       	mov	r12, r1
    1522:	d1 2c       	mov	r13, r1
    1524:	f0 e8       	ldi	r31, 0x80	; 128
    1526:	ef 2e       	mov	r14, r31
    1528:	ff e3       	ldi	r31, 0x3F	; 63
    152a:	ff 2e       	mov	r15, r31
    152c:	f0 2d       	mov	r31, r0
	arc = getSunLongitude(getNewMoonDay(k+i, timeZone), timeZone);
	do {
		last = arc;
		i++;
    152e:	20 e0       	ldi	r18, 0x00	; 0
    1530:	30 e0       	ldi	r19, 0x00	; 0
    1532:	40 e8       	ldi	r20, 0x80	; 128
    1534:	5f e3       	ldi	r21, 0x3F	; 63
    1536:	c7 01       	movw	r24, r14
    1538:	b6 01       	movw	r22, r12
    153a:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__addsf3>
    153e:	6b 01       	movw	r12, r22
    1540:	7c 01       	movw	r14, r24
		arc = getSunLongitude(getNewMoonDay(k+i, timeZone), timeZone);
    1542:	9b 01       	movw	r18, r22
    1544:	ac 01       	movw	r20, r24
    1546:	c5 01       	movw	r24, r10
    1548:	b4 01       	movw	r22, r8
    154a:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__addsf3>
    154e:	ae 01       	movw	r20, r28
    1550:	0e 94 32 05 	call	0xa64	; 0xa64 <getNewMoonDay>
    1554:	ae 01       	movw	r20, r28
    1556:	0e 94 b3 08 	call	0x1166	; 0x1166 <getSunLongitude>
    155a:	16 2f       	mov	r17, r22
    155c:	07 2f       	mov	r16, r23
    155e:	78 2e       	mov	r7, r24
    1560:	69 2e       	mov	r6, r25
	} while (arc != last && i < 14);
    1562:	26 2f       	mov	r18, r22
    1564:	37 2f       	mov	r19, r23
    1566:	48 2f       	mov	r20, r24
    1568:	59 2f       	mov	r21, r25
    156a:	65 2d       	mov	r22, r5
    156c:	74 2d       	mov	r23, r4
    156e:	83 2d       	mov	r24, r3
    1570:	92 2d       	mov	r25, r2
    1572:	0e 94 3d 14 	call	0x287a	; 0x287a <__cmpsf2>
    1576:	88 23       	and	r24, r24
    1578:	71 f0       	breq	.+28     	; 0x1596 <getLeapMonthOffset+0xea>
	i = 1; // We start with the month following lunar month 11
	arc = getSunLongitude(getNewMoonDay(k+i, timeZone), timeZone);
	do {
		last = arc;
		i++;
		arc = getSunLongitude(getNewMoonDay(k+i, timeZone), timeZone);
    157a:	51 2e       	mov	r5, r17
    157c:	40 2e       	mov	r4, r16
    157e:	37 2c       	mov	r3, r7
    1580:	26 2c       	mov	r2, r6
	} while (arc != last && i < 14);
    1582:	20 e0       	ldi	r18, 0x00	; 0
    1584:	30 e0       	ldi	r19, 0x00	; 0
    1586:	40 e6       	ldi	r20, 0x60	; 96
    1588:	51 e4       	ldi	r21, 0x41	; 65
    158a:	c7 01       	movw	r24, r14
    158c:	b6 01       	movw	r22, r12
    158e:	0e 94 3d 14 	call	0x287a	; 0x287a <__cmpsf2>
    1592:	88 23       	and	r24, r24
    1594:	64 f2       	brlt	.-104    	; 0x152e <getLeapMonthOffset+0x82>
	return i-1;
    1596:	20 e0       	ldi	r18, 0x00	; 0
    1598:	30 e0       	ldi	r19, 0x00	; 0
    159a:	40 e8       	ldi	r20, 0x80	; 128
    159c:	5f e3       	ldi	r21, 0x3F	; 63
    159e:	c7 01       	movw	r24, r14
    15a0:	b6 01       	movw	r22, r12
    15a2:	0e 94 d0 13 	call	0x27a0	; 0x27a0 <__subsf3>
}
    15a6:	df 91       	pop	r29
    15a8:	cf 91       	pop	r28
    15aa:	1f 91       	pop	r17
    15ac:	0f 91       	pop	r16
    15ae:	ff 90       	pop	r15
    15b0:	ef 90       	pop	r14
    15b2:	df 90       	pop	r13
    15b4:	cf 90       	pop	r12
    15b6:	bf 90       	pop	r11
    15b8:	af 90       	pop	r10
    15ba:	9f 90       	pop	r9
    15bc:	8f 90       	pop	r8
    15be:	7f 90       	pop	r7
    15c0:	6f 90       	pop	r6
    15c2:	5f 90       	pop	r5
    15c4:	4f 90       	pop	r4
    15c6:	3f 90       	pop	r3
    15c8:	2f 90       	pop	r2
    15ca:	08 95       	ret

000015cc <convertSolar2Lunar>:

double convertSolar2Lunar(uint8_t dd, uint8_t mm, uint16_t yy, int timeZone)
{
    15cc:	2f 92       	push	r2
    15ce:	3f 92       	push	r3
    15d0:	4f 92       	push	r4
    15d2:	5f 92       	push	r5
    15d4:	6f 92       	push	r6
    15d6:	7f 92       	push	r7
    15d8:	8f 92       	push	r8
    15da:	9f 92       	push	r9
    15dc:	af 92       	push	r10
    15de:	bf 92       	push	r11
    15e0:	cf 92       	push	r12
    15e2:	df 92       	push	r13
    15e4:	ef 92       	push	r14
    15e6:	ff 92       	push	r15
    15e8:	0f 93       	push	r16
    15ea:	1f 93       	push	r17
    15ec:	cf 93       	push	r28
    15ee:	df 93       	push	r29
    15f0:	ea 01       	movw	r28, r20
    15f2:	19 01       	movw	r2, r18
	long double k, dayNumber, monthStart, a11, b11, diff, leapMonthDiff;
	dayNumber = jdFromDate(dd, mm, yy);
    15f4:	0e 94 4c 04 	call	0x898	; 0x898 <jdFromDate>
    15f8:	4b 01       	movw	r8, r22
    15fa:	5c 01       	movw	r10, r24
	k = floorf((dayNumber - 2415021.076998695) / 29.530588853);
    15fc:	24 eb       	ldi	r18, 0xB4	; 180
    15fe:	36 e6       	ldi	r19, 0x66	; 102
    1600:	43 e1       	ldi	r20, 0x13	; 19
    1602:	5a e4       	ldi	r21, 0x4A	; 74
    1604:	0e 94 d0 13 	call	0x27a0	; 0x27a0 <__subsf3>
    1608:	25 ea       	ldi	r18, 0xA5	; 165
    160a:	3e e3       	ldi	r19, 0x3E	; 62
    160c:	4c ee       	ldi	r20, 0xEC	; 236
    160e:	51 e4       	ldi	r21, 0x41	; 65
    1610:	0e 94 42 14 	call	0x2884	; 0x2884 <__divsf3>
    1614:	0e 94 27 15 	call	0x2a4e	; 0x2a4e <floor>
    1618:	2b 01       	movw	r4, r22
    161a:	3c 01       	movw	r6, r24
	monthStart = getNewMoonDay(k+1, timeZone);
    161c:	20 e0       	ldi	r18, 0x00	; 0
    161e:	30 e0       	ldi	r19, 0x00	; 0
    1620:	40 e8       	ldi	r20, 0x80	; 128
    1622:	5f e3       	ldi	r21, 0x3F	; 63
    1624:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__addsf3>
    1628:	a1 01       	movw	r20, r2
    162a:	0e 94 32 05 	call	0xa64	; 0xa64 <getNewMoonDay>
    162e:	6b 01       	movw	r12, r22
    1630:	7c 01       	movw	r14, r24
	if (monthStart > dayNumber) {
    1632:	9b 01       	movw	r18, r22
    1634:	ac 01       	movw	r20, r24
    1636:	c5 01       	movw	r24, r10
    1638:	b4 01       	movw	r22, r8
    163a:	0e 94 3d 14 	call	0x287a	; 0x287a <__cmpsf2>
    163e:	88 23       	and	r24, r24
    1640:	3c f4       	brge	.+14     	; 0x1650 <convertSolar2Lunar+0x84>
		monthStart = getNewMoonDay(k, timeZone);
    1642:	a1 01       	movw	r20, r2
    1644:	c3 01       	movw	r24, r6
    1646:	b2 01       	movw	r22, r4
    1648:	0e 94 32 05 	call	0xa64	; 0xa64 <getNewMoonDay>
    164c:	6b 01       	movw	r12, r22
    164e:	7c 01       	movw	r14, r24
	}
	a11 = getLunarMonth11(yy, timeZone);
    1650:	b1 01       	movw	r22, r2
    1652:	ce 01       	movw	r24, r28
    1654:	0e 94 0c 0a 	call	0x1418	; 0x1418 <getLunarMonth11>
    1658:	16 2f       	mov	r17, r22
    165a:	07 2f       	mov	r16, r23
    165c:	78 2e       	mov	r7, r24
    165e:	69 2e       	mov	r6, r25
	b11 = a11;
	if (a11 >= monthStart) {
    1660:	26 2f       	mov	r18, r22
    1662:	37 2f       	mov	r19, r23
    1664:	48 2f       	mov	r20, r24
    1666:	59 2f       	mov	r21, r25
    1668:	c7 01       	movw	r24, r14
    166a:	b6 01       	movw	r22, r12
    166c:	0e 94 3d 14 	call	0x287a	; 0x287a <__cmpsf2>
    1670:	18 16       	cp	r1, r24
    1672:	94 f0       	brlt	.+36     	; 0x1698 <convertSolar2Lunar+0xcc>
		lunarYear = yy;
    1674:	d0 93 e4 00 	sts	0x00E4, r29	; 0x8000e4 <lunarYear+0x1>
    1678:	c0 93 e3 00 	sts	0x00E3, r28	; 0x8000e3 <lunarYear>
		a11 = getLunarMonth11(yy-1, timeZone);
    167c:	b1 01       	movw	r22, r2
    167e:	ce 01       	movw	r24, r28
    1680:	01 97       	sbiw	r24, 0x01	; 1
    1682:	0e 94 0c 0a 	call	0x1418	; 0x1418 <getLunarMonth11>
	monthStart = getNewMoonDay(k+1, timeZone);
	if (monthStart > dayNumber) {
		monthStart = getNewMoonDay(k, timeZone);
	}
	a11 = getLunarMonth11(yy, timeZone);
	b11 = a11;
    1686:	c1 2f       	mov	r28, r17
    1688:	d0 2f       	mov	r29, r16
    168a:	57 2c       	mov	r5, r7
    168c:	46 2c       	mov	r4, r6
	if (a11 >= monthStart) {
		lunarYear = yy;
		a11 = getLunarMonth11(yy-1, timeZone);
    168e:	16 2f       	mov	r17, r22
    1690:	07 2f       	mov	r16, r23
    1692:	78 2e       	mov	r7, r24
    1694:	69 2e       	mov	r6, r25
    1696:	0d c0       	rjmp	.+26     	; 0x16b2 <convertSolar2Lunar+0xe6>
		} else {
		lunarYear = yy+1;
    1698:	ce 01       	movw	r24, r28
    169a:	01 96       	adiw	r24, 0x01	; 1
    169c:	90 93 e4 00 	sts	0x00E4, r25	; 0x8000e4 <lunarYear+0x1>
    16a0:	80 93 e3 00 	sts	0x00E3, r24	; 0x8000e3 <lunarYear>
		b11 = getLunarMonth11(yy+1, timeZone);
    16a4:	b1 01       	movw	r22, r2
    16a6:	0e 94 0c 0a 	call	0x1418	; 0x1418 <getLunarMonth11>
    16aa:	c6 2f       	mov	r28, r22
    16ac:	d7 2f       	mov	r29, r23
    16ae:	58 2e       	mov	r5, r24
    16b0:	49 2e       	mov	r4, r25
	}
	lunarDate = dayNumber-monthStart+1;
    16b2:	a7 01       	movw	r20, r14
    16b4:	96 01       	movw	r18, r12
    16b6:	c5 01       	movw	r24, r10
    16b8:	b4 01       	movw	r22, r8
    16ba:	0e 94 d0 13 	call	0x27a0	; 0x27a0 <__subsf3>
    16be:	20 e0       	ldi	r18, 0x00	; 0
    16c0:	30 e0       	ldi	r19, 0x00	; 0
    16c2:	40 e8       	ldi	r20, 0x80	; 128
    16c4:	5f e3       	ldi	r21, 0x3F	; 63
    16c6:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__addsf3>
    16ca:	0e 94 b4 14 	call	0x2968	; 0x2968 <__fixsfsi>
    16ce:	70 93 d4 00 	sts	0x00D4, r23	; 0x8000d4 <lunarDate+0x1>
    16d2:	60 93 d3 00 	sts	0x00D3, r22	; 0x8000d3 <lunarDate>
	diff = floorf((monthStart - a11)/29);
    16d6:	21 2f       	mov	r18, r17
    16d8:	30 2f       	mov	r19, r16
    16da:	47 2d       	mov	r20, r7
    16dc:	56 2d       	mov	r21, r6
    16de:	c7 01       	movw	r24, r14
    16e0:	b6 01       	movw	r22, r12
    16e2:	0e 94 d0 13 	call	0x27a0	; 0x27a0 <__subsf3>
    16e6:	20 e0       	ldi	r18, 0x00	; 0
    16e8:	30 e0       	ldi	r19, 0x00	; 0
    16ea:	48 ee       	ldi	r20, 0xE8	; 232
    16ec:	51 e4       	ldi	r21, 0x41	; 65
    16ee:	0e 94 42 14 	call	0x2884	; 0x2884 <__divsf3>
    16f2:	0e 94 27 15 	call	0x2a4e	; 0x2a4e <floor>
    16f6:	6b 01       	movw	r12, r22
    16f8:	7c 01       	movw	r14, r24
	lunarMonth = diff+11;
    16fa:	20 e0       	ldi	r18, 0x00	; 0
    16fc:	30 e0       	ldi	r19, 0x00	; 0
    16fe:	40 e3       	ldi	r20, 0x30	; 48
    1700:	51 e4       	ldi	r21, 0x41	; 65
    1702:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__addsf3>
    1706:	0e 94 b4 14 	call	0x2968	; 0x2968 <__fixsfsi>
    170a:	70 93 d6 00 	sts	0x00D6, r23	; 0x8000d6 <lunarMonth+0x1>
    170e:	60 93 d5 00 	sts	0x00D5, r22	; 0x8000d5 <lunarMonth>
	if (b11 - a11 > 365) {
    1712:	21 2f       	mov	r18, r17
    1714:	30 2f       	mov	r19, r16
    1716:	47 2d       	mov	r20, r7
    1718:	56 2d       	mov	r21, r6
    171a:	6c 2f       	mov	r22, r28
    171c:	7d 2f       	mov	r23, r29
    171e:	85 2d       	mov	r24, r5
    1720:	94 2d       	mov	r25, r4
    1722:	0e 94 d0 13 	call	0x27a0	; 0x27a0 <__subsf3>
    1726:	20 e0       	ldi	r18, 0x00	; 0
    1728:	30 e8       	ldi	r19, 0x80	; 128
    172a:	46 eb       	ldi	r20, 0xB6	; 182
    172c:	53 e4       	ldi	r21, 0x43	; 67
    172e:	0e 94 f4 15 	call	0x2be8	; 0x2be8 <__gesf2>
    1732:	18 16       	cp	r1, r24
    1734:	ec f4       	brge	.+58     	; 0x1770 <convertSolar2Lunar+0x1a4>
		leapMonthDiff = getLeapMonthOffset(a11, timeZone);
    1736:	a1 01       	movw	r20, r2
    1738:	61 2f       	mov	r22, r17
    173a:	70 2f       	mov	r23, r16
    173c:	87 2d       	mov	r24, r7
    173e:	96 2d       	mov	r25, r6
    1740:	0e 94 56 0a 	call	0x14ac	; 0x14ac <getLeapMonthOffset>
    1744:	9b 01       	movw	r18, r22
    1746:	ac 01       	movw	r20, r24
		if (diff >= leapMonthDiff) {
    1748:	c7 01       	movw	r24, r14
    174a:	b6 01       	movw	r22, r12
    174c:	0e 94 f4 15 	call	0x2be8	; 0x2be8 <__gesf2>
    1750:	88 23       	and	r24, r24
    1752:	74 f0       	brlt	.+28     	; 0x1770 <convertSolar2Lunar+0x1a4>
			lunarMonth = diff + 10;
    1754:	20 e0       	ldi	r18, 0x00	; 0
    1756:	30 e0       	ldi	r19, 0x00	; 0
    1758:	40 e2       	ldi	r20, 0x20	; 32
    175a:	51 e4       	ldi	r21, 0x41	; 65
    175c:	c7 01       	movw	r24, r14
    175e:	b6 01       	movw	r22, r12
    1760:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__addsf3>
    1764:	0e 94 b4 14 	call	0x2968	; 0x2968 <__fixsfsi>
    1768:	70 93 d6 00 	sts	0x00D6, r23	; 0x8000d6 <lunarMonth+0x1>
    176c:	60 93 d5 00 	sts	0x00D5, r22	; 0x8000d5 <lunarMonth>
// 			if (diff == leapMonthDiff) {
// 				lunarLeap = 1;
// 			}
		}
	}
	if (lunarMonth > 12) {
    1770:	80 91 d5 00 	lds	r24, 0x00D5	; 0x8000d5 <lunarMonth>
    1774:	90 91 d6 00 	lds	r25, 0x00D6	; 0x8000d6 <lunarMonth+0x1>
    1778:	0d 97       	sbiw	r24, 0x0d	; 13
    177a:	4c f0       	brlt	.+18     	; 0x178e <convertSolar2Lunar+0x1c2>
		lunarMonth = lunarMonth - 12;
    177c:	80 91 d5 00 	lds	r24, 0x00D5	; 0x8000d5 <lunarMonth>
    1780:	90 91 d6 00 	lds	r25, 0x00D6	; 0x8000d6 <lunarMonth+0x1>
    1784:	0c 97       	sbiw	r24, 0x0c	; 12
    1786:	90 93 d6 00 	sts	0x00D6, r25	; 0x8000d6 <lunarMonth+0x1>
    178a:	80 93 d5 00 	sts	0x00D5, r24	; 0x8000d5 <lunarMonth>
	}
	if (lunarMonth >= 11 && diff < 4) {
    178e:	80 91 d5 00 	lds	r24, 0x00D5	; 0x8000d5 <lunarMonth>
    1792:	90 91 d6 00 	lds	r25, 0x00D6	; 0x8000d6 <lunarMonth+0x1>
    1796:	0b 97       	sbiw	r24, 0x0b	; 11
    1798:	9c f0       	brlt	.+38     	; 0x17c0 <convertSolar2Lunar+0x1f4>
    179a:	20 e0       	ldi	r18, 0x00	; 0
    179c:	30 e0       	ldi	r19, 0x00	; 0
    179e:	40 e8       	ldi	r20, 0x80	; 128
    17a0:	50 e4       	ldi	r21, 0x40	; 64
    17a2:	c7 01       	movw	r24, r14
    17a4:	b6 01       	movw	r22, r12
    17a6:	0e 94 3d 14 	call	0x287a	; 0x287a <__cmpsf2>
    17aa:	88 23       	and	r24, r24
    17ac:	4c f4       	brge	.+18     	; 0x17c0 <convertSolar2Lunar+0x1f4>
		lunarYear -= 1;
    17ae:	80 91 e3 00 	lds	r24, 0x00E3	; 0x8000e3 <lunarYear>
    17b2:	90 91 e4 00 	lds	r25, 0x00E4	; 0x8000e4 <lunarYear+0x1>
    17b6:	01 97       	sbiw	r24, 0x01	; 1
    17b8:	90 93 e4 00 	sts	0x00E4, r25	; 0x8000e4 <lunarYear+0x1>
    17bc:	80 93 e3 00 	sts	0x00E3, r24	; 0x8000e3 <lunarYear>
	}
}
    17c0:	df 91       	pop	r29
    17c2:	cf 91       	pop	r28
    17c4:	1f 91       	pop	r17
    17c6:	0f 91       	pop	r16
    17c8:	ff 90       	pop	r15
    17ca:	ef 90       	pop	r14
    17cc:	df 90       	pop	r13
    17ce:	cf 90       	pop	r12
    17d0:	bf 90       	pop	r11
    17d2:	af 90       	pop	r10
    17d4:	9f 90       	pop	r9
    17d6:	8f 90       	pop	r8
    17d8:	7f 90       	pop	r7
    17da:	6f 90       	pop	r6
    17dc:	5f 90       	pop	r5
    17de:	4f 90       	pop	r4
    17e0:	3f 90       	pop	r3
    17e2:	2f 90       	pop	r2
    17e4:	08 95       	ret

000017e6 <spiSendByte>:
char digitsInUse = 8;

void spiSendByte (char databyte)
{
	// Copy data into the SPI data register
	SPDR = databyte;
    17e6:	8f b9       	out	0x0f, r24	; 15
	// Wait until transfer is complete
	while (!(SPSR & (1 << SPIF)));
    17e8:	77 9b       	sbis	0x0e, 7	; 14
    17ea:	fe cf       	rjmp	.-4      	; 0x17e8 <spiSendByte+0x2>
}
    17ec:	08 95       	ret

000017ee <MAX7219_writeData>:

void MAX7219_writeData(uint8_t data_register, uint8_t data)
{
    17ee:	cf 93       	push	r28
    17f0:	c6 2f       	mov	r28, r22
	MAX7219_LOAD0;
    17f2:	98 b3       	in	r25, 0x18	; 24
    17f4:	9f 7e       	andi	r25, 0xEF	; 239
    17f6:	98 bb       	out	0x18, r25	; 24
	// Send the register where the data will be stored
	spiSendByte(data_register);
    17f8:	0e 94 f3 0b 	call	0x17e6	; 0x17e6 <spiSendByte>
	// Send the data to be stored
	spiSendByte(data);
    17fc:	8c 2f       	mov	r24, r28
    17fe:	0e 94 f3 0b 	call	0x17e6	; 0x17e6 <spiSendByte>
	MAX7219_LOAD1;
    1802:	88 b3       	in	r24, 0x18	; 24
    1804:	80 61       	ori	r24, 0x10	; 16
    1806:	88 bb       	out	0x18, r24	; 24
}
    1808:	cf 91       	pop	r28
    180a:	08 95       	ret

0000180c <MAX7219_clearDisplay>:

void MAX7219_clearDisplay()
{
    180c:	cf 93       	push	r28
	char i = digitsInUse;
    180e:	c0 91 60 00 	lds	r28, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
	// Loop until 0, but don't run for zero
	do {
		// Set each display in use to blank
		MAX7219_writeData(i, MAX7219_CHAR_BLANK);
    1812:	6f e0       	ldi	r22, 0x0F	; 15
    1814:	8c 2f       	mov	r24, r28
    1816:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
	} while (--i);
    181a:	c1 50       	subi	r28, 0x01	; 1
    181c:	d1 f7       	brne	.-12     	; 0x1812 <MAX7219_clearDisplay+0x6>
}
    181e:	cf 91       	pop	r28
    1820:	08 95       	ret

00001822 <Display_7seg>:
		
		print_LCD("  ");
	}
	
}
void Display_7seg (void){
    1822:	0f 93       	push	r16
    1824:	1f 93       	push	r17
    1826:	cf 93       	push	r28
    1828:	df 93       	push	r29
	/********display time -> hh:mm:ss***************/
	
	if (SW_time_date == 0)
    182a:	80 91 c4 00 	lds	r24, 0x00C4	; 0x8000c4 <__data_end>
    182e:	81 11       	cpse	r24, r1
    1830:	56 c0       	rjmp	.+172    	; 0x18de <Display_7seg+0xbc>
	{
		MAX7219_clearDisplay();
    1832:	0e 94 06 0c 	call	0x180c	; 0x180c <MAX7219_clearDisplay>
		
		MAX7219_writeData(MAX7219_DIGIT7,MAX7219_CHAR_BLANK);
    1836:	6f e0       	ldi	r22, 0x0F	; 15
    1838:	70 e0       	ldi	r23, 0x00	; 0
    183a:	88 e0       	ldi	r24, 0x08	; 8
    183c:	90 e0       	ldi	r25, 0x00	; 0
    183e:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT6,MAX7219_CHAR_BLANK);
    1842:	6f e0       	ldi	r22, 0x0F	; 15
    1844:	70 e0       	ldi	r23, 0x00	; 0
    1846:	87 e0       	ldi	r24, 0x07	; 7
    1848:	90 e0       	ldi	r25, 0x00	; 0
    184a:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT5,(Second%10));
    184e:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <Second>
    1852:	90 91 72 00 	lds	r25, 0x0072	; 0x800072 <Second+0x1>
    1856:	ca e0       	ldi	r28, 0x0A	; 10
    1858:	d0 e0       	ldi	r29, 0x00	; 0
    185a:	be 01       	movw	r22, r28
    185c:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    1860:	bc 01       	movw	r22, r24
    1862:	86 e0       	ldi	r24, 0x06	; 6
    1864:	90 e0       	ldi	r25, 0x00	; 0
    1866:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT4,(Second/10));
    186a:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <Second>
    186e:	90 91 72 00 	lds	r25, 0x0072	; 0x800072 <Second+0x1>
    1872:	be 01       	movw	r22, r28
    1874:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    1878:	85 e0       	ldi	r24, 0x05	; 5
    187a:	90 e0       	ldi	r25, 0x00	; 0
    187c:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT3,(Minute%10));
    1880:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <Minute>
    1884:	90 91 70 00 	lds	r25, 0x0070	; 0x800070 <Minute+0x1>
    1888:	be 01       	movw	r22, r28
    188a:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    188e:	bc 01       	movw	r22, r24
    1890:	84 e0       	ldi	r24, 0x04	; 4
    1892:	90 e0       	ldi	r25, 0x00	; 0
    1894:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT2,(Minute/10));
    1898:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <Minute>
    189c:	90 91 70 00 	lds	r25, 0x0070	; 0x800070 <Minute+0x1>
    18a0:	be 01       	movw	r22, r28
    18a2:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    18a6:	83 e0       	ldi	r24, 0x03	; 3
    18a8:	90 e0       	ldi	r25, 0x00	; 0
    18aa:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT1,(Hour%10));
    18ae:	80 91 6d 00 	lds	r24, 0x006D	; 0x80006d <Hour>
    18b2:	90 91 6e 00 	lds	r25, 0x006E	; 0x80006e <Hour+0x1>
    18b6:	be 01       	movw	r22, r28
    18b8:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    18bc:	bc 01       	movw	r22, r24
    18be:	82 e0       	ldi	r24, 0x02	; 2
    18c0:	90 e0       	ldi	r25, 0x00	; 0
    18c2:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT0,(Hour/10));
    18c6:	80 91 6d 00 	lds	r24, 0x006D	; 0x80006d <Hour>
    18ca:	90 91 6e 00 	lds	r25, 0x006E	; 0x80006e <Hour+0x1>
    18ce:	be 01       	movw	r22, r28
    18d0:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    18d4:	81 e0       	ldi	r24, 0x01	; 1
    18d6:	90 e0       	ldi	r25, 0x00	; 0
    18d8:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
    18dc:	28 c1       	rjmp	.+592    	; 0x1b2e <Display_7seg+0x30c>
		
	}
	/********display date -> DD:MM:YY***************/
	else if (SW_time_date == 1)
    18de:	80 91 c4 00 	lds	r24, 0x00C4	; 0x8000c4 <__data_end>
    18e2:	81 30       	cpi	r24, 0x01	; 1
    18e4:	09 f0       	breq	.+2      	; 0x18e8 <Display_7seg+0xc6>
    18e6:	76 c0       	rjmp	.+236    	; 0x19d4 <Display_7seg+0x1b2>
	{
		MAX7219_clearDisplay();
    18e8:	0e 94 06 0c 	call	0x180c	; 0x180c <MAX7219_clearDisplay>
		
		MAX7219_writeData(MAX7219_DIGIT7,((yyyy%1000)%10));
    18ec:	80 91 d1 00 	lds	r24, 0x00D1	; 0x8000d1 <yyyy>
    18f0:	90 91 d2 00 	lds	r25, 0x00D2	; 0x8000d2 <yyyy+0x1>
    18f4:	08 ee       	ldi	r16, 0xE8	; 232
    18f6:	13 e0       	ldi	r17, 0x03	; 3
    18f8:	b8 01       	movw	r22, r16
    18fa:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    18fe:	ca e0       	ldi	r28, 0x0A	; 10
    1900:	d0 e0       	ldi	r29, 0x00	; 0
    1902:	be 01       	movw	r22, r28
    1904:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    1908:	bc 01       	movw	r22, r24
    190a:	88 e0       	ldi	r24, 0x08	; 8
    190c:	90 e0       	ldi	r25, 0x00	; 0
    190e:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT6,(((yyyy%1000)/10)%10));
    1912:	80 91 d1 00 	lds	r24, 0x00D1	; 0x8000d1 <yyyy>
    1916:	90 91 d2 00 	lds	r25, 0x00D2	; 0x8000d2 <yyyy+0x1>
    191a:	b8 01       	movw	r22, r16
    191c:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    1920:	be 01       	movw	r22, r28
    1922:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    1926:	cb 01       	movw	r24, r22
    1928:	be 01       	movw	r22, r28
    192a:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    192e:	bc 01       	movw	r22, r24
    1930:	87 e0       	ldi	r24, 0x07	; 7
    1932:	90 e0       	ldi	r25, 0x00	; 0
    1934:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT5,(((yyyy%1000)/100)%10));
    1938:	80 91 d1 00 	lds	r24, 0x00D1	; 0x8000d1 <yyyy>
    193c:	90 91 d2 00 	lds	r25, 0x00D2	; 0x8000d2 <yyyy+0x1>
    1940:	b8 01       	movw	r22, r16
    1942:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    1946:	64 e6       	ldi	r22, 0x64	; 100
    1948:	70 e0       	ldi	r23, 0x00	; 0
    194a:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    194e:	cb 01       	movw	r24, r22
    1950:	be 01       	movw	r22, r28
    1952:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    1956:	bc 01       	movw	r22, r24
    1958:	86 e0       	ldi	r24, 0x06	; 6
    195a:	90 e0       	ldi	r25, 0x00	; 0
    195c:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT4,(yyyy/1000));
    1960:	80 91 d1 00 	lds	r24, 0x00D1	; 0x8000d1 <yyyy>
    1964:	90 91 d2 00 	lds	r25, 0x00D2	; 0x8000d2 <yyyy+0x1>
    1968:	b8 01       	movw	r22, r16
    196a:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    196e:	85 e0       	ldi	r24, 0x05	; 5
    1970:	90 e0       	ldi	r25, 0x00	; 0
    1972:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT3,(Month%10));
    1976:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <Month>
    197a:	90 91 68 00 	lds	r25, 0x0068	; 0x800068 <Month+0x1>
    197e:	be 01       	movw	r22, r28
    1980:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    1984:	bc 01       	movw	r22, r24
    1986:	84 e0       	ldi	r24, 0x04	; 4
    1988:	90 e0       	ldi	r25, 0x00	; 0
    198a:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT2,(Month/10));
    198e:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <Month>
    1992:	90 91 68 00 	lds	r25, 0x0068	; 0x800068 <Month+0x1>
    1996:	be 01       	movw	r22, r28
    1998:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    199c:	83 e0       	ldi	r24, 0x03	; 3
    199e:	90 e0       	ldi	r25, 0x00	; 0
    19a0:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT1,(Date%10));
    19a4:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <Date>
    19a8:	90 91 6a 00 	lds	r25, 0x006A	; 0x80006a <Date+0x1>
    19ac:	be 01       	movw	r22, r28
    19ae:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    19b2:	bc 01       	movw	r22, r24
    19b4:	82 e0       	ldi	r24, 0x02	; 2
    19b6:	90 e0       	ldi	r25, 0x00	; 0
    19b8:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT0,(Date/10));
    19bc:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <Date>
    19c0:	90 91 6a 00 	lds	r25, 0x006A	; 0x80006a <Date+0x1>
    19c4:	be 01       	movw	r22, r28
    19c6:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    19ca:	81 e0       	ldi	r24, 0x01	; 1
    19cc:	90 e0       	ldi	r25, 0x00	; 0
    19ce:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
    19d2:	ad c0       	rjmp	.+346    	; 0x1b2e <Display_7seg+0x30c>
		
	}
	/********display AM LICH *********************/
	else if (SW_time_date==2)
    19d4:	80 91 c4 00 	lds	r24, 0x00C4	; 0x8000c4 <__data_end>
    19d8:	82 30       	cpi	r24, 0x02	; 2
    19da:	09 f0       	breq	.+2      	; 0x19de <Display_7seg+0x1bc>
    19dc:	76 c0       	rjmp	.+236    	; 0x1aca <Display_7seg+0x2a8>
	{
		MAX7219_clearDisplay();
    19de:	0e 94 06 0c 	call	0x180c	; 0x180c <MAX7219_clearDisplay>
		
		MAX7219_writeData(MAX7219_DIGIT7,((lunarYear%1000)%10));
    19e2:	80 91 e3 00 	lds	r24, 0x00E3	; 0x8000e3 <lunarYear>
    19e6:	90 91 e4 00 	lds	r25, 0x00E4	; 0x8000e4 <lunarYear+0x1>
    19ea:	08 ee       	ldi	r16, 0xE8	; 232
    19ec:	13 e0       	ldi	r17, 0x03	; 3
    19ee:	b8 01       	movw	r22, r16
    19f0:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    19f4:	ca e0       	ldi	r28, 0x0A	; 10
    19f6:	d0 e0       	ldi	r29, 0x00	; 0
    19f8:	be 01       	movw	r22, r28
    19fa:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    19fe:	bc 01       	movw	r22, r24
    1a00:	88 e0       	ldi	r24, 0x08	; 8
    1a02:	90 e0       	ldi	r25, 0x00	; 0
    1a04:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT6,(((lunarYear%1000)/10)%10));
    1a08:	80 91 e3 00 	lds	r24, 0x00E3	; 0x8000e3 <lunarYear>
    1a0c:	90 91 e4 00 	lds	r25, 0x00E4	; 0x8000e4 <lunarYear+0x1>
    1a10:	b8 01       	movw	r22, r16
    1a12:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    1a16:	be 01       	movw	r22, r28
    1a18:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    1a1c:	cb 01       	movw	r24, r22
    1a1e:	be 01       	movw	r22, r28
    1a20:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    1a24:	bc 01       	movw	r22, r24
    1a26:	87 e0       	ldi	r24, 0x07	; 7
    1a28:	90 e0       	ldi	r25, 0x00	; 0
    1a2a:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT5,(((lunarYear%1000)/100)%10));
    1a2e:	80 91 e3 00 	lds	r24, 0x00E3	; 0x8000e3 <lunarYear>
    1a32:	90 91 e4 00 	lds	r25, 0x00E4	; 0x8000e4 <lunarYear+0x1>
    1a36:	b8 01       	movw	r22, r16
    1a38:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    1a3c:	64 e6       	ldi	r22, 0x64	; 100
    1a3e:	70 e0       	ldi	r23, 0x00	; 0
    1a40:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    1a44:	cb 01       	movw	r24, r22
    1a46:	be 01       	movw	r22, r28
    1a48:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    1a4c:	bc 01       	movw	r22, r24
    1a4e:	86 e0       	ldi	r24, 0x06	; 6
    1a50:	90 e0       	ldi	r25, 0x00	; 0
    1a52:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT4,(lunarYear/1000));
    1a56:	80 91 e3 00 	lds	r24, 0x00E3	; 0x8000e3 <lunarYear>
    1a5a:	90 91 e4 00 	lds	r25, 0x00E4	; 0x8000e4 <lunarYear+0x1>
    1a5e:	b8 01       	movw	r22, r16
    1a60:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    1a64:	85 e0       	ldi	r24, 0x05	; 5
    1a66:	90 e0       	ldi	r25, 0x00	; 0
    1a68:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT3,(lunarMonth%10));
    1a6c:	80 91 d5 00 	lds	r24, 0x00D5	; 0x8000d5 <lunarMonth>
    1a70:	90 91 d6 00 	lds	r25, 0x00D6	; 0x8000d6 <lunarMonth+0x1>
    1a74:	be 01       	movw	r22, r28
    1a76:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    1a7a:	bc 01       	movw	r22, r24
    1a7c:	84 e0       	ldi	r24, 0x04	; 4
    1a7e:	90 e0       	ldi	r25, 0x00	; 0
    1a80:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT2,(lunarMonth/10));
    1a84:	80 91 d5 00 	lds	r24, 0x00D5	; 0x8000d5 <lunarMonth>
    1a88:	90 91 d6 00 	lds	r25, 0x00D6	; 0x8000d6 <lunarMonth+0x1>
    1a8c:	be 01       	movw	r22, r28
    1a8e:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    1a92:	83 e0       	ldi	r24, 0x03	; 3
    1a94:	90 e0       	ldi	r25, 0x00	; 0
    1a96:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT1,(lunarDate%10));
    1a9a:	80 91 d3 00 	lds	r24, 0x00D3	; 0x8000d3 <lunarDate>
    1a9e:	90 91 d4 00 	lds	r25, 0x00D4	; 0x8000d4 <lunarDate+0x1>
    1aa2:	be 01       	movw	r22, r28
    1aa4:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    1aa8:	bc 01       	movw	r22, r24
    1aaa:	82 e0       	ldi	r24, 0x02	; 2
    1aac:	90 e0       	ldi	r25, 0x00	; 0
    1aae:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT0,(lunarDate/10));
    1ab2:	80 91 d3 00 	lds	r24, 0x00D3	; 0x8000d3 <lunarDate>
    1ab6:	90 91 d4 00 	lds	r25, 0x00D4	; 0x8000d4 <lunarDate+0x1>
    1aba:	be 01       	movw	r22, r28
    1abc:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    1ac0:	81 e0       	ldi	r24, 0x01	; 1
    1ac2:	90 e0       	ldi	r25, 0x00	; 0
    1ac4:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
    1ac8:	32 c0       	rjmp	.+100    	; 0x1b2e <Display_7seg+0x30c>
		
	}
	else
	{
		MAX7219_clearDisplay();
    1aca:	0e 94 06 0c 	call	0x180c	; 0x180c <MAX7219_clearDisplay>
		
		MAX7219_writeData(MAX7219_DIGIT3,(A_Minute%10));
    1ace:	80 91 cb 00 	lds	r24, 0x00CB	; 0x8000cb <A_Minute>
    1ad2:	90 91 cc 00 	lds	r25, 0x00CC	; 0x8000cc <A_Minute+0x1>
    1ad6:	ca e0       	ldi	r28, 0x0A	; 10
    1ad8:	d0 e0       	ldi	r29, 0x00	; 0
    1ada:	be 01       	movw	r22, r28
    1adc:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    1ae0:	bc 01       	movw	r22, r24
    1ae2:	84 e0       	ldi	r24, 0x04	; 4
    1ae4:	90 e0       	ldi	r25, 0x00	; 0
    1ae6:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT2,(A_Minute/10));
    1aea:	80 91 cb 00 	lds	r24, 0x00CB	; 0x8000cb <A_Minute>
    1aee:	90 91 cc 00 	lds	r25, 0x00CC	; 0x8000cc <A_Minute+0x1>
    1af2:	be 01       	movw	r22, r28
    1af4:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    1af8:	83 e0       	ldi	r24, 0x03	; 3
    1afa:	90 e0       	ldi	r25, 0x00	; 0
    1afc:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT1,(A_Hour%10));
    1b00:	80 91 cd 00 	lds	r24, 0x00CD	; 0x8000cd <A_Hour>
    1b04:	90 91 ce 00 	lds	r25, 0x00CE	; 0x8000ce <A_Hour+0x1>
    1b08:	be 01       	movw	r22, r28
    1b0a:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    1b0e:	bc 01       	movw	r22, r24
    1b10:	82 e0       	ldi	r24, 0x02	; 2
    1b12:	90 e0       	ldi	r25, 0x00	; 0
    1b14:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT0,(A_Hour/10));
    1b18:	80 91 cd 00 	lds	r24, 0x00CD	; 0x8000cd <A_Hour>
    1b1c:	90 91 ce 00 	lds	r25, 0x00CE	; 0x8000ce <A_Hour+0x1>
    1b20:	be 01       	movw	r22, r28
    1b22:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    1b26:	81 e0       	ldi	r24, 0x01	; 1
    1b28:	90 e0       	ldi	r25, 0x00	; 0
    1b2a:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
	}

}
    1b2e:	df 91       	pop	r29
    1b30:	cf 91       	pop	r28
    1b32:	1f 91       	pop	r17
    1b34:	0f 91       	pop	r16
    1b36:	08 95       	ret

00001b38 <Init_Timer0>:
	} while (--i);
}

void Init_Timer0(void){
	//Initialize Timer0 to 1s - overflow interrupt--------------------
    TCCR0=(1<<CS02)|(0<<CS01)|(1<<CS00);	//prescaler, clk/1024
    1b38:	85 e0       	ldi	r24, 0x05	; 5
    1b3a:	83 bf       	out	0x33, r24	; 51
	
    TIMSK=(1<<TOIE0);						
    1b3c:	81 e0       	ldi	r24, 0x01	; 1
    1b3e:	89 bf       	out	0x39, r24	; 57
    sei();                      			
    1b40:	78 94       	sei
    1b42:	08 95       	ret

00001b44 <Init_interupt>:
	//----------------------------------------------------------------
}

void Init_interupt(void){
	MCUCR=(0<<ISC11)|(0<<ISC10)|(0<<ISC01)|(0<<ISC00);
    1b44:	15 be       	out	0x35, r1	; 53
	MCUCSR=(0<<ISC2);
    1b46:	14 be       	out	0x34, r1	; 52
	GICR=(1<<INT2)|(1<<INT1)|(1<<INT0);
    1b48:	80 ee       	ldi	r24, 0xE0	; 224
    1b4a:	8b bf       	out	0x3b, r24	; 59
	sei();
    1b4c:	78 94       	sei
    1b4e:	08 95       	ret

00001b50 <main>:
//Main program
int main(void){	
	
	//MAX7219 init
	// SCK MOSI CS/LOAD/SS
	DDRB |= (1 << PIN_SCK) | (1 << PIN_MOSI) | (1 << PIN_SS);
    1b50:	87 b3       	in	r24, 0x17	; 23
    1b52:	80 6b       	ori	r24, 0xB0	; 176
    1b54:	87 bb       	out	0x17, r24	; 23

	// SPI Enable, Master mode
	SPCR |= (1 << SPE) | (1 << MSTR)| (1<<SPR1);
    1b56:	8d b1       	in	r24, 0x0d	; 13
    1b58:	82 65       	ori	r24, 0x52	; 82
    1b5a:	8d b9       	out	0x0d, r24	; 13

	// Decode mode to "Font Code-B"
	MAX7219_writeData(MAX7219_MODE_DECODE, 0xFF);
    1b5c:	6f ef       	ldi	r22, 0xFF	; 255
    1b5e:	89 e0       	ldi	r24, 0x09	; 9
    1b60:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>

	// Scan limit runs from 0.
	MAX7219_writeData(MAX7219_MODE_SCAN_LIMIT, 0x07);
    1b64:	67 e0       	ldi	r22, 0x07	; 7
    1b66:	8b e0       	ldi	r24, 0x0B	; 11
    1b68:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
	MAX7219_writeData(MAX7219_MODE_INTENSITY, 0x05);
    1b6c:	65 e0       	ldi	r22, 0x05	; 5
    1b6e:	8a e0       	ldi	r24, 0x0A	; 10
    1b70:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
	MAX7219_writeData(MAX7219_MODE_POWER, ON);
    1b74:	61 e0       	ldi	r22, 0x01	; 1
    1b76:	8c e0       	ldi	r24, 0x0C	; 12
    1b78:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
	MAX7219_writeData(MAX7219_MODE_DECODE, 0xFF);
    1b7c:	6f ef       	ldi	r22, 0xFF	; 255
    1b7e:	89 e0       	ldi	r24, 0x09	; 9
    1b80:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
	
	FixTime();
    1b84:	0e 94 c9 03 	call	0x792	; 0x792 <FixTime>
	Init_btn();// KEY_PORT=0xF8;
    1b88:	0e 94 42 04 	call	0x884	; 0x884 <Init_btn>

	//Initialize LCD-----------------------
	init_LCD();
    1b8c:	0e 94 59 01 	call	0x2b2	; 0x2b2 <init_LCD>
	clr_LCD();	
    1b90:	0e 94 98 01 	call	0x330	; 0x330 <clr_LCD>
	
	move_LCD(1,1);
    1b94:	61 e0       	ldi	r22, 0x01	; 1
    1b96:	81 e0       	ldi	r24, 0x01	; 1
    1b98:	0e 94 86 01 	call	0x30c	; 0x30c <move_LCD>
	print_LCD("Starting....");
    1b9c:	85 ea       	ldi	r24, 0xA5	; 165
    1b9e:	90 e0       	ldi	r25, 0x00	; 0
    1ba0:	0e 94 a9 01 	call	0x352	; 0x352 <print_LCD>
	
	move_LCD(2,1);
    1ba4:	61 e0       	ldi	r22, 0x01	; 1
    1ba6:	82 e0       	ldi	r24, 0x02	; 2
    1ba8:	0e 94 86 01 	call	0x30c	; 0x30c <move_LCD>
	print_LCD(" REAL TIME CLOCK ");
    1bac:	82 eb       	ldi	r24, 0xB2	; 178
    1bae:	90 e0       	ldi	r25, 0x00	; 0
    1bb0:	0e 94 a9 01 	call	0x352	; 0x352 <print_LCD>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1bb4:	2f ef       	ldi	r18, 0xFF	; 255
    1bb6:	89 e6       	ldi	r24, 0x69	; 105
    1bb8:	98 e1       	ldi	r25, 0x18	; 24
    1bba:	21 50       	subi	r18, 0x01	; 1
    1bbc:	80 40       	sbci	r24, 0x00	; 0
    1bbe:	90 40       	sbci	r25, 0x00	; 0
    1bc0:	e1 f7       	brne	.-8      	; 0x1bba <main+0x6a>
    1bc2:	00 c0       	rjmp	.+0      	; 0x1bc4 <main+0x74>
    1bc4:	00 00       	nop
	_delay_ms(1000);
	//------------------------------------
	Init_Timer0();
    1bc6:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <Init_Timer0>
	
	Init_interupt();
    1bca:	0e 94 a2 0d 	call	0x1b44	; 0x1b44 <Init_interupt>
	
	TWI_Init(); 
    1bce:	0e 94 58 00 	call	0xb0	; 0xb0 <TWI_Init>
			
	TWI_DS1307_rblock(tData,7); 
    1bd2:	67 e0       	ldi	r22, 0x07	; 7
    1bd4:	8c ed       	ldi	r24, 0xDC	; 220
    1bd6:	90 e0       	ldi	r25, 0x00	; 0
    1bd8:	0e 94 c3 00 	call	0x186	; 0x186 <TWI_DS1307_rblock>
	
	Decode(); 	//BCD data converter function from DS1307 to DEC
    1bdc:	0e 94 df 01 	call	0x3be	; 0x3be <Decode>
	Display(); 	//Print on LCD
    1be0:	0e 94 34 02 	call	0x468	; 0x468 <Display>
    1be4:	8f ec       	ldi	r24, 0xCF	; 207
    1be6:	97 e0       	ldi	r25, 0x07	; 7
    1be8:	01 97       	sbiw	r24, 0x01	; 1
    1bea:	f1 f7       	brne	.-4      	; 0x1be8 <main+0x98>
    1bec:	00 c0       	rjmp	.+0      	; 0x1bee <main+0x9e>
    1bee:	00 00       	nop
	_delay_ms(1);	
	
	//************************************************************************************
	while(1){
		//Check_btn();
		yyyy=Year+2000;
    1bf0:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <Year>
    1bf4:	90 91 66 00 	lds	r25, 0x0066	; 0x800066 <Year+0x1>
    1bf8:	80 53       	subi	r24, 0x30	; 48
    1bfa:	98 4f       	sbci	r25, 0xF8	; 248
    1bfc:	90 93 d2 00 	sts	0x00D2, r25	; 0x8000d2 <yyyy+0x1>
    1c00:	80 93 d1 00 	sts	0x00D1, r24	; 0x8000d1 <yyyy>
		convertSolar2Lunar(Date, Month, yyyy, timeZone);	
    1c04:	20 91 61 00 	lds	r18, 0x0061	; 0x800061 <timeZone>
    1c08:	30 91 62 00 	lds	r19, 0x0062	; 0x800062 <timeZone+0x1>
    1c0c:	40 91 d1 00 	lds	r20, 0x00D1	; 0x8000d1 <yyyy>
    1c10:	50 91 d2 00 	lds	r21, 0x00D2	; 0x8000d2 <yyyy+0x1>
    1c14:	60 91 67 00 	lds	r22, 0x0067	; 0x800067 <Month>
    1c18:	70 91 68 00 	lds	r23, 0x0068	; 0x800068 <Month+0x1>
    1c1c:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <Date>
    1c20:	90 91 6a 00 	lds	r25, 0x006A	; 0x80006a <Date+0x1>
    1c24:	0e 94 e6 0a 	call	0x15cc	; 0x15cc <convertSolar2Lunar>
		Display_7seg();
    1c28:	0e 94 11 0c 	call	0x1822	; 0x1822 <Display_7seg>
		if (Hour == A_Hour && Minute == A_Minute && EN_alarm == true)
    1c2c:	20 91 6d 00 	lds	r18, 0x006D	; 0x80006d <Hour>
    1c30:	30 91 6e 00 	lds	r19, 0x006E	; 0x80006e <Hour+0x1>
    1c34:	80 91 cd 00 	lds	r24, 0x00CD	; 0x8000cd <A_Hour>
    1c38:	90 91 ce 00 	lds	r25, 0x00CE	; 0x8000ce <A_Hour+0x1>
    1c3c:	28 17       	cp	r18, r24
    1c3e:	39 07       	cpc	r19, r25
    1c40:	b9 f6       	brne	.-82     	; 0x1bf0 <main+0xa0>
    1c42:	20 91 6f 00 	lds	r18, 0x006F	; 0x80006f <Minute>
    1c46:	30 91 70 00 	lds	r19, 0x0070	; 0x800070 <Minute+0x1>
    1c4a:	80 91 cb 00 	lds	r24, 0x00CB	; 0x8000cb <A_Minute>
    1c4e:	90 91 cc 00 	lds	r25, 0x00CC	; 0x8000cc <A_Minute+0x1>
    1c52:	28 17       	cp	r18, r24
    1c54:	39 07       	cpc	r19, r25
    1c56:	61 f6       	brne	.-104    	; 0x1bf0 <main+0xa0>
    1c58:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <EN_alarm>
    1c5c:	88 23       	and	r24, r24
    1c5e:	41 f2       	breq	.-112    	; 0x1bf0 <main+0xa0>
		{	
			//Check_btn();
			Display_7seg();
    1c60:	0e 94 11 0c 	call	0x1822	; 0x1822 <Display_7seg>
			BTN_PORT |= (1<<BUZ_LED);
    1c64:	82 b3       	in	r24, 0x12	; 18
    1c66:	80 68       	ori	r24, 0x80	; 128
    1c68:	82 bb       	out	0x12, r24	; 18
    1c6a:	c2 cf       	rjmp	.-124    	; 0x1bf0 <main+0xa0>

00001c6c <__vector_11>:
	return 0;
}

char data[5];

ISR(TIMER0_OVF_vect){ 	
    1c6c:	1f 92       	push	r1
    1c6e:	0f 92       	push	r0
    1c70:	0f b6       	in	r0, 0x3f	; 63
    1c72:	0f 92       	push	r0
    1c74:	11 24       	eor	r1, r1
    1c76:	0f 93       	push	r16
    1c78:	1f 93       	push	r17
    1c7a:	2f 93       	push	r18
    1c7c:	3f 93       	push	r19
    1c7e:	4f 93       	push	r20
    1c80:	5f 93       	push	r21
    1c82:	6f 93       	push	r22
    1c84:	7f 93       	push	r23
    1c86:	8f 93       	push	r24
    1c88:	9f 93       	push	r25
    1c8a:	af 93       	push	r26
    1c8c:	bf 93       	push	r27
    1c8e:	cf 93       	push	r28
    1c90:	df 93       	push	r29
    1c92:	ef 93       	push	r30
    1c94:	ff 93       	push	r31
	Time_count++;
    1c96:	80 91 c9 00 	lds	r24, 0x00C9	; 0x8000c9 <Time_count>
    1c9a:	90 91 ca 00 	lds	r25, 0x00CA	; 0x8000ca <Time_count+0x1>
    1c9e:	01 96       	adiw	r24, 0x01	; 1
    1ca0:	90 93 ca 00 	sts	0x00CA, r25	; 0x8000ca <Time_count+0x1>
    1ca4:	80 93 c9 00 	sts	0x00C9, r24	; 0x8000c9 <Time_count>
	if(Time_count>=10){ 	//1s Exactly
    1ca8:	80 91 c9 00 	lds	r24, 0x00C9	; 0x8000c9 <Time_count>
    1cac:	90 91 ca 00 	lds	r25, 0x00CA	; 0x8000ca <Time_count+0x1>
    1cb0:	0a 97       	sbiw	r24, 0x0a	; 10
    1cb2:	58 f1       	brcs	.+86     	; 0x1d0a <__vector_11+0x9e>
		                
		if(set == false && set_alarm == false){
    1cb4:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <set>
    1cb8:	81 11       	cpse	r24, r1
    1cba:	23 c0       	rjmp	.+70     	; 0x1d02 <__vector_11+0x96>
    1cbc:	80 91 c7 00 	lds	r24, 0x00C7	; 0x8000c7 <set_alarm>
    1cc0:	81 11       	cpse	r24, r1
    1cc2:	1f c0       	rjmp	.+62     	; 0x1d02 <__vector_11+0x96>
			//Read DS1307
			TWI_DS1307_wadr(0x00); 				
    1cc4:	0e 94 5e 00 	call	0xbc	; 0xbc <TWI_DS1307_wadr>
    1cc8:	8f ec       	ldi	r24, 0xCF	; 207
    1cca:	97 e0       	ldi	r25, 0x07	; 7
    1ccc:	01 97       	sbiw	r24, 0x01	; 1
    1cce:	f1 f7       	brne	.-4      	; 0x1ccc <__vector_11+0x60>
    1cd0:	00 c0       	rjmp	.+0      	; 0x1cd2 <__vector_11+0x66>
    1cd2:	00 00       	nop
			_delay_ms(1);		   				
			TWI_DS1307_rblock(tData,7); 
    1cd4:	67 e0       	ldi	r22, 0x07	; 7
    1cd6:	8c ed       	ldi	r24, 0xDC	; 220
    1cd8:	90 e0       	ldi	r25, 0x00	; 0
    1cda:	0e 94 c3 00 	call	0x186	; 0x186 <TWI_DS1307_rblock>
					
			//Print result on LCD + 7Seg led		
			if(BCDToDec(tData[0]) !=Second){ 
    1cde:	80 91 dc 00 	lds	r24, 0x00DC	; 0x8000dc <tData>
    1ce2:	0e 94 bc 01 	call	0x378	; 0x378 <BCDToDec>
    1ce6:	90 e0       	ldi	r25, 0x00	; 0
    1ce8:	20 91 71 00 	lds	r18, 0x0071	; 0x800071 <Second>
    1cec:	30 91 72 00 	lds	r19, 0x0072	; 0x800072 <Second+0x1>
    1cf0:	82 17       	cp	r24, r18
    1cf2:	93 07       	cpc	r25, r19
    1cf4:	31 f0       	breq	.+12     	; 0x1d02 <__vector_11+0x96>
				Decode();			
    1cf6:	0e 94 df 01 	call	0x3be	; 0x3be <Decode>
				Display();
    1cfa:	0e 94 34 02 	call	0x468	; 0x468 <Display>
				Display_7seg();
    1cfe:	0e 94 11 0c 	call	0x1822	; 0x1822 <Display_7seg>
			} 
		}
		Time_count=0; 
    1d02:	10 92 ca 00 	sts	0x00CA, r1	; 0x8000ca <Time_count+0x1>
    1d06:	10 92 c9 00 	sts	0x00C9, r1	; 0x8000c9 <Time_count>
	}
	if ((Time_count>5)&&(Time_count<10)&&(count==1)&&(SW_time_date==1))	//blink year
    1d0a:	80 91 c9 00 	lds	r24, 0x00C9	; 0x8000c9 <Time_count>
    1d0e:	90 91 ca 00 	lds	r25, 0x00CA	; 0x8000ca <Time_count+0x1>
    1d12:	06 97       	sbiw	r24, 0x06	; 6
    1d14:	08 f4       	brcc	.+2      	; 0x1d18 <__vector_11+0xac>
    1d16:	53 c0       	rjmp	.+166    	; 0x1dbe <__vector_11+0x152>
    1d18:	80 91 c9 00 	lds	r24, 0x00C9	; 0x8000c9 <Time_count>
    1d1c:	90 91 ca 00 	lds	r25, 0x00CA	; 0x8000ca <Time_count+0x1>
    1d20:	0a 97       	sbiw	r24, 0x0a	; 10
    1d22:	08 f0       	brcs	.+2      	; 0x1d26 <__vector_11+0xba>
    1d24:	4c c0       	rjmp	.+152    	; 0x1dbe <__vector_11+0x152>
    1d26:	80 91 c5 00 	lds	r24, 0x00C5	; 0x8000c5 <count>
    1d2a:	81 30       	cpi	r24, 0x01	; 1
    1d2c:	09 f0       	breq	.+2      	; 0x1d30 <__vector_11+0xc4>
    1d2e:	47 c0       	rjmp	.+142    	; 0x1dbe <__vector_11+0x152>
    1d30:	80 91 c4 00 	lds	r24, 0x00C4	; 0x8000c4 <__data_end>
    1d34:	81 30       	cpi	r24, 0x01	; 1
    1d36:	09 f0       	breq	.+2      	; 0x1d3a <__vector_11+0xce>
    1d38:	42 c0       	rjmp	.+132    	; 0x1dbe <__vector_11+0x152>
	{
		MAX7219_writeData(MAX7219_MODE_DECODE, 0xFF);
    1d3a:	6f ef       	ldi	r22, 0xFF	; 255
    1d3c:	89 e0       	ldi	r24, 0x09	; 9
    1d3e:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_clearDisplay();
    1d42:	0e 94 06 0c 	call	0x180c	; 0x180c <MAX7219_clearDisplay>
		
		MAX7219_writeData(MAX7219_DIGIT7,MAX7219_CHAR_BLANK);
    1d46:	6f e0       	ldi	r22, 0x0F	; 15
    1d48:	88 e0       	ldi	r24, 0x08	; 8
    1d4a:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT6,MAX7219_CHAR_BLANK);
    1d4e:	6f e0       	ldi	r22, 0x0F	; 15
    1d50:	87 e0       	ldi	r24, 0x07	; 7
    1d52:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT5,MAX7219_CHAR_BLANK);
    1d56:	6f e0       	ldi	r22, 0x0F	; 15
    1d58:	86 e0       	ldi	r24, 0x06	; 6
    1d5a:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT4,MAX7219_CHAR_BLANK);
    1d5e:	6f e0       	ldi	r22, 0x0F	; 15
    1d60:	85 e0       	ldi	r24, 0x05	; 5
    1d62:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT3,(Month%10));
    1d66:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <Month>
    1d6a:	90 91 68 00 	lds	r25, 0x0068	; 0x800068 <Month+0x1>
    1d6e:	ca e0       	ldi	r28, 0x0A	; 10
    1d70:	d0 e0       	ldi	r29, 0x00	; 0
    1d72:	be 01       	movw	r22, r28
    1d74:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    1d78:	68 2f       	mov	r22, r24
    1d7a:	84 e0       	ldi	r24, 0x04	; 4
    1d7c:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT2,(Month/10));
    1d80:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <Month>
    1d84:	90 91 68 00 	lds	r25, 0x0068	; 0x800068 <Month+0x1>
    1d88:	be 01       	movw	r22, r28
    1d8a:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    1d8e:	83 e0       	ldi	r24, 0x03	; 3
    1d90:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT1,(Date%10));
    1d94:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <Date>
    1d98:	90 91 6a 00 	lds	r25, 0x006A	; 0x80006a <Date+0x1>
    1d9c:	be 01       	movw	r22, r28
    1d9e:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    1da2:	68 2f       	mov	r22, r24
    1da4:	82 e0       	ldi	r24, 0x02	; 2
    1da6:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT0,(Date/10));
    1daa:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <Date>
    1dae:	90 91 6a 00 	lds	r25, 0x006A	; 0x80006a <Date+0x1>
    1db2:	be 01       	movw	r22, r28
    1db4:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    1db8:	81 e0       	ldi	r24, 0x01	; 1
    1dba:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
	}
	if ((Time_count>5)&&(Time_count<10)&&(count==2)&&(SW_time_date==1))	//blink month
    1dbe:	80 91 c9 00 	lds	r24, 0x00C9	; 0x8000c9 <Time_count>
    1dc2:	90 91 ca 00 	lds	r25, 0x00CA	; 0x8000ca <Time_count+0x1>
    1dc6:	06 97       	sbiw	r24, 0x06	; 6
    1dc8:	08 f4       	brcc	.+2      	; 0x1dcc <__vector_11+0x160>
    1dca:	75 c0       	rjmp	.+234    	; 0x1eb6 <__vector_11+0x24a>
    1dcc:	80 91 c9 00 	lds	r24, 0x00C9	; 0x8000c9 <Time_count>
    1dd0:	90 91 ca 00 	lds	r25, 0x00CA	; 0x8000ca <Time_count+0x1>
    1dd4:	0a 97       	sbiw	r24, 0x0a	; 10
    1dd6:	08 f0       	brcs	.+2      	; 0x1dda <__vector_11+0x16e>
    1dd8:	6e c0       	rjmp	.+220    	; 0x1eb6 <__vector_11+0x24a>
    1dda:	80 91 c5 00 	lds	r24, 0x00C5	; 0x8000c5 <count>
    1dde:	82 30       	cpi	r24, 0x02	; 2
    1de0:	09 f0       	breq	.+2      	; 0x1de4 <__vector_11+0x178>
    1de2:	69 c0       	rjmp	.+210    	; 0x1eb6 <__vector_11+0x24a>
    1de4:	80 91 c4 00 	lds	r24, 0x00C4	; 0x8000c4 <__data_end>
    1de8:	81 30       	cpi	r24, 0x01	; 1
    1dea:	09 f0       	breq	.+2      	; 0x1dee <__vector_11+0x182>
    1dec:	64 c0       	rjmp	.+200    	; 0x1eb6 <__vector_11+0x24a>
	{
		MAX7219_writeData(MAX7219_MODE_DECODE, 0xFF);
    1dee:	6f ef       	ldi	r22, 0xFF	; 255
    1df0:	89 e0       	ldi	r24, 0x09	; 9
    1df2:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_clearDisplay();
    1df6:	0e 94 06 0c 	call	0x180c	; 0x180c <MAX7219_clearDisplay>
		
		MAX7219_writeData(MAX7219_DIGIT7,((yyyy%1000)%10));
    1dfa:	80 91 d1 00 	lds	r24, 0x00D1	; 0x8000d1 <yyyy>
    1dfe:	90 91 d2 00 	lds	r25, 0x00D2	; 0x8000d2 <yyyy+0x1>
    1e02:	08 ee       	ldi	r16, 0xE8	; 232
    1e04:	13 e0       	ldi	r17, 0x03	; 3
    1e06:	b8 01       	movw	r22, r16
    1e08:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    1e0c:	ca e0       	ldi	r28, 0x0A	; 10
    1e0e:	d0 e0       	ldi	r29, 0x00	; 0
    1e10:	be 01       	movw	r22, r28
    1e12:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    1e16:	68 2f       	mov	r22, r24
    1e18:	88 e0       	ldi	r24, 0x08	; 8
    1e1a:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT6,(((yyyy%1000)/10)%10));
    1e1e:	80 91 d1 00 	lds	r24, 0x00D1	; 0x8000d1 <yyyy>
    1e22:	90 91 d2 00 	lds	r25, 0x00D2	; 0x8000d2 <yyyy+0x1>
    1e26:	b8 01       	movw	r22, r16
    1e28:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    1e2c:	be 01       	movw	r22, r28
    1e2e:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    1e32:	cb 01       	movw	r24, r22
    1e34:	be 01       	movw	r22, r28
    1e36:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    1e3a:	68 2f       	mov	r22, r24
    1e3c:	87 e0       	ldi	r24, 0x07	; 7
    1e3e:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT5,(((yyyy%1000)/100)%10));
    1e42:	80 91 d1 00 	lds	r24, 0x00D1	; 0x8000d1 <yyyy>
    1e46:	90 91 d2 00 	lds	r25, 0x00D2	; 0x8000d2 <yyyy+0x1>
    1e4a:	b8 01       	movw	r22, r16
    1e4c:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    1e50:	64 e6       	ldi	r22, 0x64	; 100
    1e52:	70 e0       	ldi	r23, 0x00	; 0
    1e54:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    1e58:	cb 01       	movw	r24, r22
    1e5a:	be 01       	movw	r22, r28
    1e5c:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    1e60:	68 2f       	mov	r22, r24
    1e62:	86 e0       	ldi	r24, 0x06	; 6
    1e64:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT4,(yyyy/1000));
    1e68:	80 91 d1 00 	lds	r24, 0x00D1	; 0x8000d1 <yyyy>
    1e6c:	90 91 d2 00 	lds	r25, 0x00D2	; 0x8000d2 <yyyy+0x1>
    1e70:	b8 01       	movw	r22, r16
    1e72:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    1e76:	85 e0       	ldi	r24, 0x05	; 5
    1e78:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT3,MAX7219_CHAR_BLANK);
    1e7c:	6f e0       	ldi	r22, 0x0F	; 15
    1e7e:	84 e0       	ldi	r24, 0x04	; 4
    1e80:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT2,MAX7219_CHAR_BLANK);
    1e84:	6f e0       	ldi	r22, 0x0F	; 15
    1e86:	83 e0       	ldi	r24, 0x03	; 3
    1e88:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT1,(Date%10));
    1e8c:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <Date>
    1e90:	90 91 6a 00 	lds	r25, 0x006A	; 0x80006a <Date+0x1>
    1e94:	be 01       	movw	r22, r28
    1e96:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    1e9a:	68 2f       	mov	r22, r24
    1e9c:	82 e0       	ldi	r24, 0x02	; 2
    1e9e:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT0,(Date/10));
    1ea2:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <Date>
    1ea6:	90 91 6a 00 	lds	r25, 0x006A	; 0x80006a <Date+0x1>
    1eaa:	be 01       	movw	r22, r28
    1eac:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    1eb0:	81 e0       	ldi	r24, 0x01	; 1
    1eb2:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
	}
	if ((Time_count>5)&&(Time_count<10)&&(count==3)&&(SW_time_date==1))	//blink date
    1eb6:	80 91 c9 00 	lds	r24, 0x00C9	; 0x8000c9 <Time_count>
    1eba:	90 91 ca 00 	lds	r25, 0x00CA	; 0x8000ca <Time_count+0x1>
    1ebe:	06 97       	sbiw	r24, 0x06	; 6
    1ec0:	08 f4       	brcc	.+2      	; 0x1ec4 <__vector_11+0x258>
    1ec2:	75 c0       	rjmp	.+234    	; 0x1fae <__vector_11+0x342>
    1ec4:	80 91 c9 00 	lds	r24, 0x00C9	; 0x8000c9 <Time_count>
    1ec8:	90 91 ca 00 	lds	r25, 0x00CA	; 0x8000ca <Time_count+0x1>
    1ecc:	0a 97       	sbiw	r24, 0x0a	; 10
    1ece:	08 f0       	brcs	.+2      	; 0x1ed2 <__vector_11+0x266>
    1ed0:	6e c0       	rjmp	.+220    	; 0x1fae <__vector_11+0x342>
    1ed2:	80 91 c5 00 	lds	r24, 0x00C5	; 0x8000c5 <count>
    1ed6:	83 30       	cpi	r24, 0x03	; 3
    1ed8:	09 f0       	breq	.+2      	; 0x1edc <__vector_11+0x270>
    1eda:	69 c0       	rjmp	.+210    	; 0x1fae <__vector_11+0x342>
    1edc:	80 91 c4 00 	lds	r24, 0x00C4	; 0x8000c4 <__data_end>
    1ee0:	81 30       	cpi	r24, 0x01	; 1
    1ee2:	09 f0       	breq	.+2      	; 0x1ee6 <__vector_11+0x27a>
    1ee4:	64 c0       	rjmp	.+200    	; 0x1fae <__vector_11+0x342>
	{
		MAX7219_writeData(MAX7219_MODE_DECODE, 0xFF);
    1ee6:	6f ef       	ldi	r22, 0xFF	; 255
    1ee8:	89 e0       	ldi	r24, 0x09	; 9
    1eea:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_clearDisplay();
    1eee:	0e 94 06 0c 	call	0x180c	; 0x180c <MAX7219_clearDisplay>
		
		MAX7219_writeData(MAX7219_DIGIT7,((yyyy%1000)%10));
    1ef2:	80 91 d1 00 	lds	r24, 0x00D1	; 0x8000d1 <yyyy>
    1ef6:	90 91 d2 00 	lds	r25, 0x00D2	; 0x8000d2 <yyyy+0x1>
    1efa:	08 ee       	ldi	r16, 0xE8	; 232
    1efc:	13 e0       	ldi	r17, 0x03	; 3
    1efe:	b8 01       	movw	r22, r16
    1f00:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    1f04:	ca e0       	ldi	r28, 0x0A	; 10
    1f06:	d0 e0       	ldi	r29, 0x00	; 0
    1f08:	be 01       	movw	r22, r28
    1f0a:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    1f0e:	68 2f       	mov	r22, r24
    1f10:	88 e0       	ldi	r24, 0x08	; 8
    1f12:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT6,(((yyyy%1000)/10)%10));
    1f16:	80 91 d1 00 	lds	r24, 0x00D1	; 0x8000d1 <yyyy>
    1f1a:	90 91 d2 00 	lds	r25, 0x00D2	; 0x8000d2 <yyyy+0x1>
    1f1e:	b8 01       	movw	r22, r16
    1f20:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    1f24:	be 01       	movw	r22, r28
    1f26:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    1f2a:	cb 01       	movw	r24, r22
    1f2c:	be 01       	movw	r22, r28
    1f2e:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    1f32:	68 2f       	mov	r22, r24
    1f34:	87 e0       	ldi	r24, 0x07	; 7
    1f36:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT5,(((yyyy%1000)/100)%10));
    1f3a:	80 91 d1 00 	lds	r24, 0x00D1	; 0x8000d1 <yyyy>
    1f3e:	90 91 d2 00 	lds	r25, 0x00D2	; 0x8000d2 <yyyy+0x1>
    1f42:	b8 01       	movw	r22, r16
    1f44:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    1f48:	64 e6       	ldi	r22, 0x64	; 100
    1f4a:	70 e0       	ldi	r23, 0x00	; 0
    1f4c:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    1f50:	cb 01       	movw	r24, r22
    1f52:	be 01       	movw	r22, r28
    1f54:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    1f58:	68 2f       	mov	r22, r24
    1f5a:	86 e0       	ldi	r24, 0x06	; 6
    1f5c:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT4,(yyyy/1000));
    1f60:	80 91 d1 00 	lds	r24, 0x00D1	; 0x8000d1 <yyyy>
    1f64:	90 91 d2 00 	lds	r25, 0x00D2	; 0x8000d2 <yyyy+0x1>
    1f68:	b8 01       	movw	r22, r16
    1f6a:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    1f6e:	85 e0       	ldi	r24, 0x05	; 5
    1f70:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT3,(Month%10));
    1f74:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <Month>
    1f78:	90 91 68 00 	lds	r25, 0x0068	; 0x800068 <Month+0x1>
    1f7c:	be 01       	movw	r22, r28
    1f7e:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    1f82:	68 2f       	mov	r22, r24
    1f84:	84 e0       	ldi	r24, 0x04	; 4
    1f86:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT2,(Month/10));
    1f8a:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <Month>
    1f8e:	90 91 68 00 	lds	r25, 0x0068	; 0x800068 <Month+0x1>
    1f92:	be 01       	movw	r22, r28
    1f94:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    1f98:	83 e0       	ldi	r24, 0x03	; 3
    1f9a:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT1,MAX7219_CHAR_BLANK);
    1f9e:	6f e0       	ldi	r22, 0x0F	; 15
    1fa0:	82 e0       	ldi	r24, 0x02	; 2
    1fa2:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT0,MAX7219_CHAR_BLANK);
    1fa6:	6f e0       	ldi	r22, 0x0F	; 15
    1fa8:	81 e0       	ldi	r24, 0x01	; 1
    1faa:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
	}
	if ((Time_count>5)&&(Time_count<10)&&(count==1)&&(SW_time_date==0))	//blink hour
    1fae:	80 91 c9 00 	lds	r24, 0x00C9	; 0x8000c9 <Time_count>
    1fb2:	90 91 ca 00 	lds	r25, 0x00CA	; 0x8000ca <Time_count+0x1>
    1fb6:	06 97       	sbiw	r24, 0x06	; 6
    1fb8:	08 f4       	brcc	.+2      	; 0x1fbc <__vector_11+0x350>
    1fba:	52 c0       	rjmp	.+164    	; 0x2060 <__vector_11+0x3f4>
    1fbc:	80 91 c9 00 	lds	r24, 0x00C9	; 0x8000c9 <Time_count>
    1fc0:	90 91 ca 00 	lds	r25, 0x00CA	; 0x8000ca <Time_count+0x1>
    1fc4:	0a 97       	sbiw	r24, 0x0a	; 10
    1fc6:	08 f0       	brcs	.+2      	; 0x1fca <__vector_11+0x35e>
    1fc8:	4b c0       	rjmp	.+150    	; 0x2060 <__vector_11+0x3f4>
    1fca:	80 91 c5 00 	lds	r24, 0x00C5	; 0x8000c5 <count>
    1fce:	81 30       	cpi	r24, 0x01	; 1
    1fd0:	09 f0       	breq	.+2      	; 0x1fd4 <__vector_11+0x368>
    1fd2:	46 c0       	rjmp	.+140    	; 0x2060 <__vector_11+0x3f4>
    1fd4:	80 91 c4 00 	lds	r24, 0x00C4	; 0x8000c4 <__data_end>
    1fd8:	81 11       	cpse	r24, r1
    1fda:	42 c0       	rjmp	.+132    	; 0x2060 <__vector_11+0x3f4>
	{
		MAX7219_writeData(MAX7219_MODE_DECODE, 0xFF);
    1fdc:	6f ef       	ldi	r22, 0xFF	; 255
    1fde:	89 e0       	ldi	r24, 0x09	; 9
    1fe0:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_clearDisplay();
    1fe4:	0e 94 06 0c 	call	0x180c	; 0x180c <MAX7219_clearDisplay>
		
		MAX7219_writeData(MAX7219_DIGIT7,MAX7219_CHAR_BLANK);
    1fe8:	6f e0       	ldi	r22, 0x0F	; 15
    1fea:	88 e0       	ldi	r24, 0x08	; 8
    1fec:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT6,MAX7219_CHAR_BLANK);
    1ff0:	6f e0       	ldi	r22, 0x0F	; 15
    1ff2:	87 e0       	ldi	r24, 0x07	; 7
    1ff4:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT5,(Second%10));
    1ff8:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <Second>
    1ffc:	90 91 72 00 	lds	r25, 0x0072	; 0x800072 <Second+0x1>
    2000:	ca e0       	ldi	r28, 0x0A	; 10
    2002:	d0 e0       	ldi	r29, 0x00	; 0
    2004:	be 01       	movw	r22, r28
    2006:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    200a:	68 2f       	mov	r22, r24
    200c:	86 e0       	ldi	r24, 0x06	; 6
    200e:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT4,(Second/10));
    2012:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <Second>
    2016:	90 91 72 00 	lds	r25, 0x0072	; 0x800072 <Second+0x1>
    201a:	be 01       	movw	r22, r28
    201c:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    2020:	85 e0       	ldi	r24, 0x05	; 5
    2022:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT3,(Minute%10));
    2026:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <Minute>
    202a:	90 91 70 00 	lds	r25, 0x0070	; 0x800070 <Minute+0x1>
    202e:	be 01       	movw	r22, r28
    2030:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    2034:	68 2f       	mov	r22, r24
    2036:	84 e0       	ldi	r24, 0x04	; 4
    2038:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT2,(Minute/10));
    203c:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <Minute>
    2040:	90 91 70 00 	lds	r25, 0x0070	; 0x800070 <Minute+0x1>
    2044:	be 01       	movw	r22, r28
    2046:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    204a:	83 e0       	ldi	r24, 0x03	; 3
    204c:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT1,MAX7219_CHAR_BLANK);
    2050:	6f e0       	ldi	r22, 0x0F	; 15
    2052:	82 e0       	ldi	r24, 0x02	; 2
    2054:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT0,MAX7219_CHAR_BLANK);
    2058:	6f e0       	ldi	r22, 0x0F	; 15
    205a:	81 e0       	ldi	r24, 0x01	; 1
    205c:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
	}
	if ((Time_count>5)&&(Time_count<10)&&(count==2)&&(SW_time_date==0))	//blink min
    2060:	80 91 c9 00 	lds	r24, 0x00C9	; 0x8000c9 <Time_count>
    2064:	90 91 ca 00 	lds	r25, 0x00CA	; 0x8000ca <Time_count+0x1>
    2068:	06 97       	sbiw	r24, 0x06	; 6
    206a:	08 f4       	brcc	.+2      	; 0x206e <__vector_11+0x402>
    206c:	52 c0       	rjmp	.+164    	; 0x2112 <__vector_11+0x4a6>
    206e:	80 91 c9 00 	lds	r24, 0x00C9	; 0x8000c9 <Time_count>
    2072:	90 91 ca 00 	lds	r25, 0x00CA	; 0x8000ca <Time_count+0x1>
    2076:	0a 97       	sbiw	r24, 0x0a	; 10
    2078:	08 f0       	brcs	.+2      	; 0x207c <__vector_11+0x410>
    207a:	4b c0       	rjmp	.+150    	; 0x2112 <__vector_11+0x4a6>
    207c:	80 91 c5 00 	lds	r24, 0x00C5	; 0x8000c5 <count>
    2080:	82 30       	cpi	r24, 0x02	; 2
    2082:	09 f0       	breq	.+2      	; 0x2086 <__vector_11+0x41a>
    2084:	46 c0       	rjmp	.+140    	; 0x2112 <__vector_11+0x4a6>
    2086:	80 91 c4 00 	lds	r24, 0x00C4	; 0x8000c4 <__data_end>
    208a:	81 11       	cpse	r24, r1
    208c:	42 c0       	rjmp	.+132    	; 0x2112 <__vector_11+0x4a6>
	{
		MAX7219_writeData(MAX7219_MODE_DECODE, 0xFF);
    208e:	6f ef       	ldi	r22, 0xFF	; 255
    2090:	89 e0       	ldi	r24, 0x09	; 9
    2092:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_clearDisplay();
    2096:	0e 94 06 0c 	call	0x180c	; 0x180c <MAX7219_clearDisplay>
		
		MAX7219_writeData(MAX7219_DIGIT7,MAX7219_CHAR_BLANK);
    209a:	6f e0       	ldi	r22, 0x0F	; 15
    209c:	88 e0       	ldi	r24, 0x08	; 8
    209e:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT6,MAX7219_CHAR_BLANK);
    20a2:	6f e0       	ldi	r22, 0x0F	; 15
    20a4:	87 e0       	ldi	r24, 0x07	; 7
    20a6:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT5,(Second%10));
    20aa:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <Second>
    20ae:	90 91 72 00 	lds	r25, 0x0072	; 0x800072 <Second+0x1>
    20b2:	ca e0       	ldi	r28, 0x0A	; 10
    20b4:	d0 e0       	ldi	r29, 0x00	; 0
    20b6:	be 01       	movw	r22, r28
    20b8:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    20bc:	68 2f       	mov	r22, r24
    20be:	86 e0       	ldi	r24, 0x06	; 6
    20c0:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT4,(Second/10));
    20c4:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <Second>
    20c8:	90 91 72 00 	lds	r25, 0x0072	; 0x800072 <Second+0x1>
    20cc:	be 01       	movw	r22, r28
    20ce:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    20d2:	85 e0       	ldi	r24, 0x05	; 5
    20d4:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT3,MAX7219_CHAR_BLANK);
    20d8:	6f e0       	ldi	r22, 0x0F	; 15
    20da:	84 e0       	ldi	r24, 0x04	; 4
    20dc:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT2,MAX7219_CHAR_BLANK);
    20e0:	6f e0       	ldi	r22, 0x0F	; 15
    20e2:	83 e0       	ldi	r24, 0x03	; 3
    20e4:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT1,(Hour%10));
    20e8:	80 91 6d 00 	lds	r24, 0x006D	; 0x80006d <Hour>
    20ec:	90 91 6e 00 	lds	r25, 0x006E	; 0x80006e <Hour+0x1>
    20f0:	be 01       	movw	r22, r28
    20f2:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    20f6:	68 2f       	mov	r22, r24
    20f8:	82 e0       	ldi	r24, 0x02	; 2
    20fa:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT0,(Hour/10));
    20fe:	80 91 6d 00 	lds	r24, 0x006D	; 0x80006d <Hour>
    2102:	90 91 6e 00 	lds	r25, 0x006E	; 0x80006e <Hour+0x1>
    2106:	be 01       	movw	r22, r28
    2108:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    210c:	81 e0       	ldi	r24, 0x01	; 1
    210e:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
	}
	if ((Time_count>5)&&(Time_count<10)&&(count==3)&&(SW_time_date==0))	//blink sec
    2112:	80 91 c9 00 	lds	r24, 0x00C9	; 0x8000c9 <Time_count>
    2116:	90 91 ca 00 	lds	r25, 0x00CA	; 0x8000ca <Time_count+0x1>
    211a:	06 97       	sbiw	r24, 0x06	; 6
    211c:	08 f4       	brcc	.+2      	; 0x2120 <__vector_11+0x4b4>
    211e:	52 c0       	rjmp	.+164    	; 0x21c4 <__vector_11+0x558>
    2120:	80 91 c9 00 	lds	r24, 0x00C9	; 0x8000c9 <Time_count>
    2124:	90 91 ca 00 	lds	r25, 0x00CA	; 0x8000ca <Time_count+0x1>
    2128:	0a 97       	sbiw	r24, 0x0a	; 10
    212a:	08 f0       	brcs	.+2      	; 0x212e <__vector_11+0x4c2>
    212c:	4b c0       	rjmp	.+150    	; 0x21c4 <__vector_11+0x558>
    212e:	80 91 c5 00 	lds	r24, 0x00C5	; 0x8000c5 <count>
    2132:	83 30       	cpi	r24, 0x03	; 3
    2134:	09 f0       	breq	.+2      	; 0x2138 <__vector_11+0x4cc>
    2136:	46 c0       	rjmp	.+140    	; 0x21c4 <__vector_11+0x558>
    2138:	80 91 c4 00 	lds	r24, 0x00C4	; 0x8000c4 <__data_end>
    213c:	81 11       	cpse	r24, r1
    213e:	42 c0       	rjmp	.+132    	; 0x21c4 <__vector_11+0x558>
	{
		MAX7219_writeData(MAX7219_MODE_DECODE, 0xFF);
    2140:	6f ef       	ldi	r22, 0xFF	; 255
    2142:	89 e0       	ldi	r24, 0x09	; 9
    2144:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_clearDisplay();
    2148:	0e 94 06 0c 	call	0x180c	; 0x180c <MAX7219_clearDisplay>
		
		MAX7219_writeData(MAX7219_DIGIT7,MAX7219_CHAR_BLANK);
    214c:	6f e0       	ldi	r22, 0x0F	; 15
    214e:	88 e0       	ldi	r24, 0x08	; 8
    2150:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT6,MAX7219_CHAR_BLANK);
    2154:	6f e0       	ldi	r22, 0x0F	; 15
    2156:	87 e0       	ldi	r24, 0x07	; 7
    2158:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT5,MAX7219_CHAR_BLANK);
    215c:	6f e0       	ldi	r22, 0x0F	; 15
    215e:	86 e0       	ldi	r24, 0x06	; 6
    2160:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT4,MAX7219_CHAR_BLANK);
    2164:	6f e0       	ldi	r22, 0x0F	; 15
    2166:	85 e0       	ldi	r24, 0x05	; 5
    2168:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT3,(Minute%10));
    216c:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <Minute>
    2170:	90 91 70 00 	lds	r25, 0x0070	; 0x800070 <Minute+0x1>
    2174:	ca e0       	ldi	r28, 0x0A	; 10
    2176:	d0 e0       	ldi	r29, 0x00	; 0
    2178:	be 01       	movw	r22, r28
    217a:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    217e:	68 2f       	mov	r22, r24
    2180:	84 e0       	ldi	r24, 0x04	; 4
    2182:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT2,(Minute/10));
    2186:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <Minute>
    218a:	90 91 70 00 	lds	r25, 0x0070	; 0x800070 <Minute+0x1>
    218e:	be 01       	movw	r22, r28
    2190:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    2194:	83 e0       	ldi	r24, 0x03	; 3
    2196:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT1,(Hour%10));
    219a:	80 91 6d 00 	lds	r24, 0x006D	; 0x80006d <Hour>
    219e:	90 91 6e 00 	lds	r25, 0x006E	; 0x80006e <Hour+0x1>
    21a2:	be 01       	movw	r22, r28
    21a4:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    21a8:	68 2f       	mov	r22, r24
    21aa:	82 e0       	ldi	r24, 0x02	; 2
    21ac:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT0,(Hour/10));
    21b0:	80 91 6d 00 	lds	r24, 0x006D	; 0x80006d <Hour>
    21b4:	90 91 6e 00 	lds	r25, 0x006E	; 0x80006e <Hour+0x1>
    21b8:	be 01       	movw	r22, r28
    21ba:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    21be:	81 e0       	ldi	r24, 0x01	; 1
    21c0:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
	}
	if ((Time_count>5)&&(Time_count<10)&&(count==1)&&(SW_time_date==3))	//blink sec
    21c4:	80 91 c9 00 	lds	r24, 0x00C9	; 0x8000c9 <Time_count>
    21c8:	90 91 ca 00 	lds	r25, 0x00CA	; 0x8000ca <Time_count+0x1>
    21cc:	06 97       	sbiw	r24, 0x06	; 6
    21ce:	08 f4       	brcc	.+2      	; 0x21d2 <__vector_11+0x566>
    21d0:	43 c0       	rjmp	.+134    	; 0x2258 <__vector_11+0x5ec>
    21d2:	80 91 c9 00 	lds	r24, 0x00C9	; 0x8000c9 <Time_count>
    21d6:	90 91 ca 00 	lds	r25, 0x00CA	; 0x8000ca <Time_count+0x1>
    21da:	0a 97       	sbiw	r24, 0x0a	; 10
    21dc:	e8 f5       	brcc	.+122    	; 0x2258 <__vector_11+0x5ec>
    21de:	80 91 c5 00 	lds	r24, 0x00C5	; 0x8000c5 <count>
    21e2:	81 30       	cpi	r24, 0x01	; 1
    21e4:	c9 f5       	brne	.+114    	; 0x2258 <__vector_11+0x5ec>
    21e6:	80 91 c4 00 	lds	r24, 0x00C4	; 0x8000c4 <__data_end>
    21ea:	83 30       	cpi	r24, 0x03	; 3
    21ec:	a9 f5       	brne	.+106    	; 0x2258 <__vector_11+0x5ec>
	{
		MAX7219_writeData(MAX7219_MODE_DECODE, 0xFF);
    21ee:	6f ef       	ldi	r22, 0xFF	; 255
    21f0:	89 e0       	ldi	r24, 0x09	; 9
    21f2:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_clearDisplay();
    21f6:	0e 94 06 0c 	call	0x180c	; 0x180c <MAX7219_clearDisplay>
		
		MAX7219_writeData(MAX7219_DIGIT7,MAX7219_CHAR_BLANK);
    21fa:	6f e0       	ldi	r22, 0x0F	; 15
    21fc:	88 e0       	ldi	r24, 0x08	; 8
    21fe:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT6,MAX7219_CHAR_BLANK);
    2202:	6f e0       	ldi	r22, 0x0F	; 15
    2204:	87 e0       	ldi	r24, 0x07	; 7
    2206:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT5,MAX7219_CHAR_BLANK);
    220a:	6f e0       	ldi	r22, 0x0F	; 15
    220c:	86 e0       	ldi	r24, 0x06	; 6
    220e:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT4,MAX7219_CHAR_BLANK);
    2212:	6f e0       	ldi	r22, 0x0F	; 15
    2214:	85 e0       	ldi	r24, 0x05	; 5
    2216:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT3,(A_Minute%10));
    221a:	80 91 cb 00 	lds	r24, 0x00CB	; 0x8000cb <A_Minute>
    221e:	90 91 cc 00 	lds	r25, 0x00CC	; 0x8000cc <A_Minute+0x1>
    2222:	ca e0       	ldi	r28, 0x0A	; 10
    2224:	d0 e0       	ldi	r29, 0x00	; 0
    2226:	be 01       	movw	r22, r28
    2228:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    222c:	68 2f       	mov	r22, r24
    222e:	84 e0       	ldi	r24, 0x04	; 4
    2230:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT2,(A_Minute/10));
    2234:	80 91 cb 00 	lds	r24, 0x00CB	; 0x8000cb <A_Minute>
    2238:	90 91 cc 00 	lds	r25, 0x00CC	; 0x8000cc <A_Minute+0x1>
    223c:	be 01       	movw	r22, r28
    223e:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    2242:	83 e0       	ldi	r24, 0x03	; 3
    2244:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT1,MAX7219_CHAR_BLANK);
    2248:	6f e0       	ldi	r22, 0x0F	; 15
    224a:	82 e0       	ldi	r24, 0x02	; 2
    224c:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT0,MAX7219_CHAR_BLANK);
    2250:	6f e0       	ldi	r22, 0x0F	; 15
    2252:	81 e0       	ldi	r24, 0x01	; 1
    2254:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
	}
	if ((Time_count>5)&&(Time_count<10)&&(count==2)&&(SW_time_date==3))	//blink sec
    2258:	80 91 c9 00 	lds	r24, 0x00C9	; 0x8000c9 <Time_count>
    225c:	90 91 ca 00 	lds	r25, 0x00CA	; 0x8000ca <Time_count+0x1>
    2260:	06 97       	sbiw	r24, 0x06	; 6
    2262:	08 f4       	brcc	.+2      	; 0x2266 <__vector_11+0x5fa>
    2264:	43 c0       	rjmp	.+134    	; 0x22ec <__vector_11+0x680>
    2266:	80 91 c9 00 	lds	r24, 0x00C9	; 0x8000c9 <Time_count>
    226a:	90 91 ca 00 	lds	r25, 0x00CA	; 0x8000ca <Time_count+0x1>
    226e:	0a 97       	sbiw	r24, 0x0a	; 10
    2270:	e8 f5       	brcc	.+122    	; 0x22ec <__vector_11+0x680>
    2272:	80 91 c5 00 	lds	r24, 0x00C5	; 0x8000c5 <count>
    2276:	82 30       	cpi	r24, 0x02	; 2
    2278:	c9 f5       	brne	.+114    	; 0x22ec <__vector_11+0x680>
    227a:	80 91 c4 00 	lds	r24, 0x00C4	; 0x8000c4 <__data_end>
    227e:	83 30       	cpi	r24, 0x03	; 3
    2280:	a9 f5       	brne	.+106    	; 0x22ec <__vector_11+0x680>
	{
		MAX7219_writeData(MAX7219_MODE_DECODE, 0xFF);
    2282:	6f ef       	ldi	r22, 0xFF	; 255
    2284:	89 e0       	ldi	r24, 0x09	; 9
    2286:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_clearDisplay();
    228a:	0e 94 06 0c 	call	0x180c	; 0x180c <MAX7219_clearDisplay>
		
		MAX7219_writeData(MAX7219_DIGIT7,MAX7219_CHAR_BLANK);
    228e:	6f e0       	ldi	r22, 0x0F	; 15
    2290:	88 e0       	ldi	r24, 0x08	; 8
    2292:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT6,MAX7219_CHAR_BLANK);
    2296:	6f e0       	ldi	r22, 0x0F	; 15
    2298:	87 e0       	ldi	r24, 0x07	; 7
    229a:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT5,MAX7219_CHAR_BLANK);
    229e:	6f e0       	ldi	r22, 0x0F	; 15
    22a0:	86 e0       	ldi	r24, 0x06	; 6
    22a2:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT4,MAX7219_CHAR_BLANK);
    22a6:	6f e0       	ldi	r22, 0x0F	; 15
    22a8:	85 e0       	ldi	r24, 0x05	; 5
    22aa:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT3,MAX7219_CHAR_BLANK);
    22ae:	6f e0       	ldi	r22, 0x0F	; 15
    22b0:	84 e0       	ldi	r24, 0x04	; 4
    22b2:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT2,MAX7219_CHAR_BLANK);
    22b6:	6f e0       	ldi	r22, 0x0F	; 15
    22b8:	83 e0       	ldi	r24, 0x03	; 3
    22ba:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT1,(A_Hour%10));
    22be:	80 91 cd 00 	lds	r24, 0x00CD	; 0x8000cd <A_Hour>
    22c2:	90 91 ce 00 	lds	r25, 0x00CE	; 0x8000ce <A_Hour+0x1>
    22c6:	ca e0       	ldi	r28, 0x0A	; 10
    22c8:	d0 e0       	ldi	r29, 0x00	; 0
    22ca:	be 01       	movw	r22, r28
    22cc:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    22d0:	68 2f       	mov	r22, r24
    22d2:	82 e0       	ldi	r24, 0x02	; 2
    22d4:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
		MAX7219_writeData(MAX7219_DIGIT0,(A_Hour/10));
    22d8:	80 91 cd 00 	lds	r24, 0x00CD	; 0x8000cd <A_Hour>
    22dc:	90 91 ce 00 	lds	r25, 0x00CE	; 0x8000ce <A_Hour+0x1>
    22e0:	be 01       	movw	r22, r28
    22e2:	0e 94 e8 16 	call	0x2dd0	; 0x2dd0 <__divmodhi4>
    22e6:	81 e0       	ldi	r24, 0x01	; 1
    22e8:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <MAX7219_writeData>
	}
}
    22ec:	ff 91       	pop	r31
    22ee:	ef 91       	pop	r30
    22f0:	df 91       	pop	r29
    22f2:	cf 91       	pop	r28
    22f4:	bf 91       	pop	r27
    22f6:	af 91       	pop	r26
    22f8:	9f 91       	pop	r25
    22fa:	8f 91       	pop	r24
    22fc:	7f 91       	pop	r23
    22fe:	6f 91       	pop	r22
    2300:	5f 91       	pop	r21
    2302:	4f 91       	pop	r20
    2304:	3f 91       	pop	r19
    2306:	2f 91       	pop	r18
    2308:	1f 91       	pop	r17
    230a:	0f 91       	pop	r16
    230c:	0f 90       	pop	r0
    230e:	0f be       	out	0x3f, r0	; 63
    2310:	0f 90       	pop	r0
    2312:	1f 90       	pop	r1
    2314:	18 95       	reti

00002316 <__vector_1>:


//SW mode button
ISR(INT0_vect){
    2316:	1f 92       	push	r1
    2318:	0f 92       	push	r0
    231a:	0f b6       	in	r0, 0x3f	; 63
    231c:	0f 92       	push	r0
    231e:	11 24       	eor	r1, r1
    2320:	2f 93       	push	r18
    2322:	3f 93       	push	r19
    2324:	4f 93       	push	r20
    2326:	5f 93       	push	r21
    2328:	6f 93       	push	r22
    232a:	7f 93       	push	r23
    232c:	8f 93       	push	r24
    232e:	9f 93       	push	r25
    2330:	af 93       	push	r26
    2332:	bf 93       	push	r27
    2334:	ef 93       	push	r30
    2336:	ff 93       	push	r31
// 	while((BTN_PIN & (1 << SW)) == 0){
// 		//while den khi tha nut nhan ra
// 	}
	
	if(set==false) SW_time_date++;
    2338:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <set>
    233c:	81 11       	cpse	r24, r1
    233e:	05 c0       	rjmp	.+10     	; 0x234a <__vector_1+0x34>
    2340:	90 91 c4 00 	lds	r25, 0x00C4	; 0x8000c4 <__data_end>
    2344:	9f 5f       	subi	r25, 0xFF	; 255
    2346:	90 93 c4 00 	sts	0x00C4, r25	; 0x8000c4 <__data_end>
	if(SW_time_date > 3 &&set==false) SW_time_date = 0;
    234a:	90 91 c4 00 	lds	r25, 0x00C4	; 0x8000c4 <__data_end>
    234e:	94 30       	cpi	r25, 0x04	; 4
    2350:	20 f0       	brcs	.+8      	; 0x235a <__vector_1+0x44>
    2352:	81 11       	cpse	r24, r1
    2354:	02 c0       	rjmp	.+4      	; 0x235a <__vector_1+0x44>
    2356:	10 92 c4 00 	sts	0x00C4, r1	; 0x8000c4 <__data_end>
	if(SW_time_date==0 && set==true) {
    235a:	90 91 c4 00 	lds	r25, 0x00C4	; 0x8000c4 <__data_end>
    235e:	91 11       	cpse	r25, r1
    2360:	0a c0       	rjmp	.+20     	; 0x2376 <__vector_1+0x60>
    2362:	88 23       	and	r24, r24
    2364:	41 f0       	breq	.+16     	; 0x2376 <__vector_1+0x60>
		SW_time_date = 0;
    2366:	10 92 c4 00 	sts	0x00C4, r1	; 0x8000c4 <__data_end>
		count=0;
    236a:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <count>
		FixTime();
    236e:	0e 94 c9 03 	call	0x792	; 0x792 <FixTime>
		set=false;
    2372:	10 92 c8 00 	sts	0x00C8, r1	; 0x8000c8 <set>
	}
	if(SW_time_date==1 && set==true) {
    2376:	80 91 c4 00 	lds	r24, 0x00C4	; 0x8000c4 <__data_end>
    237a:	81 30       	cpi	r24, 0x01	; 1
    237c:	69 f4       	brne	.+26     	; 0x2398 <__vector_1+0x82>
    237e:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <set>
    2382:	88 23       	and	r24, r24
    2384:	49 f0       	breq	.+18     	; 0x2398 <__vector_1+0x82>
		SW_time_date = 1;
    2386:	81 e0       	ldi	r24, 0x01	; 1
    2388:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__data_end>
		count=0;
    238c:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <count>
		FixTime();
    2390:	0e 94 c9 03 	call	0x792	; 0x792 <FixTime>
		set=false;
    2394:	10 92 c8 00 	sts	0x00C8, r1	; 0x8000c8 <set>
	}
	if(SW_time_date==3 && set==true) {
    2398:	80 91 c4 00 	lds	r24, 0x00C4	; 0x8000c4 <__data_end>
    239c:	83 30       	cpi	r24, 0x03	; 3
    239e:	71 f4       	brne	.+28     	; 0x23bc <__vector_1+0xa6>
    23a0:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <set>
    23a4:	88 23       	and	r24, r24
    23a6:	51 f0       	breq	.+20     	; 0x23bc <__vector_1+0xa6>
		SW_time_date = 3;
    23a8:	83 e0       	ldi	r24, 0x03	; 3
    23aa:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__data_end>
		count=0;
    23ae:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <count>
		EN_alarm=true;
    23b2:	81 e0       	ldi	r24, 0x01	; 1
    23b4:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <EN_alarm>
		set=false;
    23b8:	10 92 c8 00 	sts	0x00C8, r1	; 0x8000c8 <set>
	}
	clr_LCD();
    23bc:	0e 94 98 01 	call	0x330	; 0x330 <clr_LCD>
	Display();
    23c0:	0e 94 34 02 	call	0x468	; 0x468 <Display>
}
    23c4:	ff 91       	pop	r31
    23c6:	ef 91       	pop	r30
    23c8:	bf 91       	pop	r27
    23ca:	af 91       	pop	r26
    23cc:	9f 91       	pop	r25
    23ce:	8f 91       	pop	r24
    23d0:	7f 91       	pop	r23
    23d2:	6f 91       	pop	r22
    23d4:	5f 91       	pop	r21
    23d6:	4f 91       	pop	r20
    23d8:	3f 91       	pop	r19
    23da:	2f 91       	pop	r18
    23dc:	0f 90       	pop	r0
    23de:	0f be       	out	0x3f, r0	; 63
    23e0:	0f 90       	pop	r0
    23e2:	1f 90       	pop	r1
    23e4:	18 95       	reti

000023e6 <__vector_2>:


//Set time button
ISR(INT1_vect){
    23e6:	1f 92       	push	r1
    23e8:	0f 92       	push	r0
    23ea:	0f b6       	in	r0, 0x3f	; 63
    23ec:	0f 92       	push	r0
    23ee:	11 24       	eor	r1, r1
    23f0:	2f 93       	push	r18
    23f2:	3f 93       	push	r19
    23f4:	4f 93       	push	r20
    23f6:	5f 93       	push	r21
    23f8:	6f 93       	push	r22
    23fa:	7f 93       	push	r23
    23fc:	8f 93       	push	r24
    23fe:	9f 93       	push	r25
    2400:	af 93       	push	r26
    2402:	bf 93       	push	r27
    2404:	ef 93       	push	r30
    2406:	ff 93       	push	r31
// 	while((BTN_PIN & (1 << mode)) == 0){
// 		//while den khi tha nut nhan ra
// 	}
	set = true;
    2408:	81 e0       	ldi	r24, 0x01	; 1
    240a:	80 93 c8 00 	sts	0x00C8, r24	; 0x8000c8 <set>
	count++;
    240e:	80 91 c5 00 	lds	r24, 0x00C5	; 0x8000c5 <count>
    2412:	8f 5f       	subi	r24, 0xFF	; 255
    2414:	80 93 c5 00 	sts	0x00C5, r24	; 0x8000c5 <count>
	if (set==true&&SW_time_date==0)
    2418:	80 91 c4 00 	lds	r24, 0x00C4	; 0x8000c4 <__data_end>
    241c:	81 11       	cpse	r24, r1
    241e:	08 c0       	rjmp	.+16     	; 0x2430 <__vector_2+0x4a>
	{
		if(count > 3) {
    2420:	80 91 c5 00 	lds	r24, 0x00C5	; 0x8000c5 <count>
    2424:	84 30       	cpi	r24, 0x04	; 4
    2426:	20 f0       	brcs	.+8      	; 0x2430 <__vector_2+0x4a>
			count = 0;
    2428:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <count>
			set=false;
    242c:	10 92 c8 00 	sts	0x00C8, r1	; 0x8000c8 <set>
		}
	}
	if (set==true&&SW_time_date==2)
    2430:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <set>
    2434:	88 23       	and	r24, r24
    2436:	61 f0       	breq	.+24     	; 0x2450 <__vector_2+0x6a>
    2438:	80 91 c4 00 	lds	r24, 0x00C4	; 0x8000c4 <__data_end>
    243c:	82 30       	cpi	r24, 0x02	; 2
    243e:	41 f4       	brne	.+16     	; 0x2450 <__vector_2+0x6a>
	{
		if(count > 3) {
    2440:	80 91 c5 00 	lds	r24, 0x00C5	; 0x8000c5 <count>
    2444:	84 30       	cpi	r24, 0x04	; 4
    2446:	20 f0       	brcs	.+8      	; 0x2450 <__vector_2+0x6a>
			count = 0;
    2448:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <count>
			set=false;
    244c:	10 92 c8 00 	sts	0x00C8, r1	; 0x8000c8 <set>
		}
	}
	if (set==true&&SW_time_date==3)
    2450:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <set>
    2454:	88 23       	and	r24, r24
    2456:	71 f0       	breq	.+28     	; 0x2474 <__vector_2+0x8e>
    2458:	80 91 c4 00 	lds	r24, 0x00C4	; 0x8000c4 <__data_end>
    245c:	83 30       	cpi	r24, 0x03	; 3
    245e:	51 f4       	brne	.+20     	; 0x2474 <__vector_2+0x8e>
	{
		if(count > 2) {
    2460:	80 91 c5 00 	lds	r24, 0x00C5	; 0x8000c5 <count>
    2464:	83 30       	cpi	r24, 0x03	; 3
    2466:	30 f0       	brcs	.+12     	; 0x2474 <__vector_2+0x8e>
			count = 0;
    2468:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <count>
			EN_alarm=false;
    246c:	10 92 c6 00 	sts	0x00C6, r1	; 0x8000c6 <EN_alarm>
			set_alarm=false;
    2470:	10 92 c7 00 	sts	0x00C7, r1	; 0x8000c7 <set_alarm>
		}
	}
	clr_LCD();
    2474:	0e 94 98 01 	call	0x330	; 0x330 <clr_LCD>
	Display();
    2478:	0e 94 34 02 	call	0x468	; 0x468 <Display>
}
    247c:	ff 91       	pop	r31
    247e:	ef 91       	pop	r30
    2480:	bf 91       	pop	r27
    2482:	af 91       	pop	r26
    2484:	9f 91       	pop	r25
    2486:	8f 91       	pop	r24
    2488:	7f 91       	pop	r23
    248a:	6f 91       	pop	r22
    248c:	5f 91       	pop	r21
    248e:	4f 91       	pop	r20
    2490:	3f 91       	pop	r19
    2492:	2f 91       	pop	r18
    2494:	0f 90       	pop	r0
    2496:	0f be       	out	0x3f, r0	; 63
    2498:	0f 90       	pop	r0
    249a:	1f 90       	pop	r1
    249c:	18 95       	reti

0000249e <__vector_3>:

//increase button
ISR(INT2_vect){
    249e:	1f 92       	push	r1
    24a0:	0f 92       	push	r0
    24a2:	0f b6       	in	r0, 0x3f	; 63
    24a4:	0f 92       	push	r0
    24a6:	11 24       	eor	r1, r1
    24a8:	2f 93       	push	r18
    24aa:	3f 93       	push	r19
    24ac:	4f 93       	push	r20
    24ae:	5f 93       	push	r21
    24b0:	6f 93       	push	r22
    24b2:	7f 93       	push	r23
    24b4:	8f 93       	push	r24
    24b6:	9f 93       	push	r25
    24b8:	af 93       	push	r26
    24ba:	bf 93       	push	r27
    24bc:	ef 93       	push	r30
    24be:	ff 93       	push	r31
	if((set == true) && (SW_time_date==0)){
    24c0:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <set>
    24c4:	88 23       	and	r24, r24
    24c6:	09 f4       	brne	.+2      	; 0x24ca <__vector_3+0x2c>
    24c8:	4d c0       	rjmp	.+154    	; 0x2564 <__vector_3+0xc6>
    24ca:	80 91 c4 00 	lds	r24, 0x00C4	; 0x8000c4 <__data_end>
    24ce:	81 11       	cpse	r24, r1
    24d0:	49 c0       	rjmp	.+146    	; 0x2564 <__vector_3+0xc6>
// 		while(((BTN_PIN & (1 << incr)) == 0)){
// 			// while den khi tha nut nhan ra
// 		}
		if(count == 1) {
    24d2:	80 91 c5 00 	lds	r24, 0x00C5	; 0x8000c5 <count>
    24d6:	81 30       	cpi	r24, 0x01	; 1
    24d8:	a1 f4       	brne	.+40     	; 0x2502 <__vector_3+0x64>
			Hour++;
    24da:	80 91 6d 00 	lds	r24, 0x006D	; 0x80006d <Hour>
    24de:	90 91 6e 00 	lds	r25, 0x006E	; 0x80006e <Hour+0x1>
    24e2:	01 96       	adiw	r24, 0x01	; 1
    24e4:	90 93 6e 00 	sts	0x006E, r25	; 0x80006e <Hour+0x1>
    24e8:	80 93 6d 00 	sts	0x006D, r24	; 0x80006d <Hour>
			if(Hour > 23) Hour = 0;
    24ec:	80 91 6d 00 	lds	r24, 0x006D	; 0x80006d <Hour>
    24f0:	90 91 6e 00 	lds	r25, 0x006E	; 0x80006e <Hour+0x1>
    24f4:	48 97       	sbiw	r24, 0x18	; 24
    24f6:	a4 f1       	brlt	.+104    	; 0x2560 <__vector_3+0xc2>
    24f8:	10 92 6e 00 	sts	0x006E, r1	; 0x80006e <Hour+0x1>
    24fc:	10 92 6d 00 	sts	0x006D, r1	; 0x80006d <Hour>
    2500:	2f c0       	rjmp	.+94     	; 0x2560 <__vector_3+0xc2>
		}
		else if(count == 2) {
    2502:	80 91 c5 00 	lds	r24, 0x00C5	; 0x8000c5 <count>
    2506:	82 30       	cpi	r24, 0x02	; 2
    2508:	a1 f4       	brne	.+40     	; 0x2532 <__vector_3+0x94>
			Minute++;
    250a:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <Minute>
    250e:	90 91 70 00 	lds	r25, 0x0070	; 0x800070 <Minute+0x1>
    2512:	01 96       	adiw	r24, 0x01	; 1
    2514:	90 93 70 00 	sts	0x0070, r25	; 0x800070 <Minute+0x1>
    2518:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <Minute>
			if(Minute > 59) Minute = 0;
    251c:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <Minute>
    2520:	90 91 70 00 	lds	r25, 0x0070	; 0x800070 <Minute+0x1>
    2524:	cc 97       	sbiw	r24, 0x3c	; 60
    2526:	e4 f0       	brlt	.+56     	; 0x2560 <__vector_3+0xc2>
    2528:	10 92 70 00 	sts	0x0070, r1	; 0x800070 <Minute+0x1>
    252c:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <Minute>
    2530:	17 c0       	rjmp	.+46     	; 0x2560 <__vector_3+0xc2>
		}
		else if(count == 3) {
    2532:	80 91 c5 00 	lds	r24, 0x00C5	; 0x8000c5 <count>
    2536:	83 30       	cpi	r24, 0x03	; 3
    2538:	99 f4       	brne	.+38     	; 0x2560 <__vector_3+0xc2>
			Second++;
    253a:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <Second>
    253e:	90 91 72 00 	lds	r25, 0x0072	; 0x800072 <Second+0x1>
    2542:	01 96       	adiw	r24, 0x01	; 1
    2544:	90 93 72 00 	sts	0x0072, r25	; 0x800072 <Second+0x1>
    2548:	80 93 71 00 	sts	0x0071, r24	; 0x800071 <Second>
			if(Second > 59) Second = 0;
    254c:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <Second>
    2550:	90 91 72 00 	lds	r25, 0x0072	; 0x800072 <Second+0x1>
    2554:	cc 97       	sbiw	r24, 0x3c	; 60
    2556:	24 f0       	brlt	.+8      	; 0x2560 <__vector_3+0xc2>
    2558:	10 92 72 00 	sts	0x0072, r1	; 0x800072 <Second+0x1>
    255c:	10 92 71 00 	sts	0x0071, r1	; 0x800071 <Second>
		}
		Display();
    2560:	0e 94 34 02 	call	0x468	; 0x468 <Display>
	}
	if((set == true) && (SW_time_date==1)){
    2564:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <set>
    2568:	88 23       	and	r24, r24
    256a:	09 f4       	brne	.+2      	; 0x256e <__vector_3+0xd0>
    256c:	d0 c0       	rjmp	.+416    	; 0x270e <__vector_3+0x270>
    256e:	80 91 c4 00 	lds	r24, 0x00C4	; 0x8000c4 <__data_end>
    2572:	81 30       	cpi	r24, 0x01	; 1
    2574:	09 f0       	breq	.+2      	; 0x2578 <__vector_3+0xda>
    2576:	cb c0       	rjmp	.+406    	; 0x270e <__vector_3+0x270>
// 		while(((BTN_PIN & (1 << incr)) == 0)){
// 			// while den khi tha nut nhan ra
// 		}
		if(count == 1) {
    2578:	80 91 c5 00 	lds	r24, 0x00C5	; 0x8000c5 <count>
    257c:	81 30       	cpi	r24, 0x01	; 1
    257e:	b1 f4       	brne	.+44     	; 0x25ac <__vector_3+0x10e>
			Year++;
    2580:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <Year>
    2584:	90 91 66 00 	lds	r25, 0x0066	; 0x800066 <Year+0x1>
    2588:	01 96       	adiw	r24, 0x01	; 1
    258a:	90 93 66 00 	sts	0x0066, r25	; 0x800066 <Year+0x1>
    258e:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <Year>
			if(Year > 99) Year = 0;
    2592:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <Year>
    2596:	90 91 66 00 	lds	r25, 0x0066	; 0x800066 <Year+0x1>
    259a:	84 36       	cpi	r24, 0x64	; 100
    259c:	91 05       	cpc	r25, r1
    259e:	0c f4       	brge	.+2      	; 0x25a2 <__vector_3+0x104>
    25a0:	b4 c0       	rjmp	.+360    	; 0x270a <__vector_3+0x26c>
    25a2:	10 92 66 00 	sts	0x0066, r1	; 0x800066 <Year+0x1>
    25a6:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <Year>
    25aa:	af c0       	rjmp	.+350    	; 0x270a <__vector_3+0x26c>
		}
		else if(count == 2) {
    25ac:	80 91 c5 00 	lds	r24, 0x00C5	; 0x8000c5 <count>
    25b0:	82 30       	cpi	r24, 0x02	; 2
    25b2:	b9 f4       	brne	.+46     	; 0x25e2 <__vector_3+0x144>
			Month++;
    25b4:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <Month>
    25b8:	90 91 68 00 	lds	r25, 0x0068	; 0x800068 <Month+0x1>
    25bc:	01 96       	adiw	r24, 0x01	; 1
    25be:	90 93 68 00 	sts	0x0068, r25	; 0x800068 <Month+0x1>
    25c2:	80 93 67 00 	sts	0x0067, r24	; 0x800067 <Month>
			if(Month > 12) Month = 1;
    25c6:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <Month>
    25ca:	90 91 68 00 	lds	r25, 0x0068	; 0x800068 <Month+0x1>
    25ce:	0d 97       	sbiw	r24, 0x0d	; 13
    25d0:	0c f4       	brge	.+2      	; 0x25d4 <__vector_3+0x136>
    25d2:	9b c0       	rjmp	.+310    	; 0x270a <__vector_3+0x26c>
    25d4:	81 e0       	ldi	r24, 0x01	; 1
    25d6:	90 e0       	ldi	r25, 0x00	; 0
    25d8:	90 93 68 00 	sts	0x0068, r25	; 0x800068 <Month+0x1>
    25dc:	80 93 67 00 	sts	0x0067, r24	; 0x800067 <Month>
    25e0:	94 c0       	rjmp	.+296    	; 0x270a <__vector_3+0x26c>
		}
		else if(count == 3) {
    25e2:	80 91 c5 00 	lds	r24, 0x00C5	; 0x8000c5 <count>
    25e6:	83 30       	cpi	r24, 0x03	; 3
    25e8:	09 f0       	breq	.+2      	; 0x25ec <__vector_3+0x14e>
    25ea:	8f c0       	rjmp	.+286    	; 0x270a <__vector_3+0x26c>
			Date++;
    25ec:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <Date>
    25f0:	90 91 6a 00 	lds	r25, 0x006A	; 0x80006a <Date+0x1>
    25f4:	01 96       	adiw	r24, 0x01	; 1
    25f6:	90 93 6a 00 	sts	0x006A, r25	; 0x80006a <Date+0x1>
    25fa:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <Date>
			if(Month == 4 || Month == 6  || Month == 9  || Month == 11)
    25fe:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <Month>
    2602:	90 91 68 00 	lds	r25, 0x0068	; 0x800068 <Month+0x1>
    2606:	04 97       	sbiw	r24, 0x04	; 4
    2608:	91 f0       	breq	.+36     	; 0x262e <__vector_3+0x190>
    260a:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <Month>
    260e:	90 91 68 00 	lds	r25, 0x0068	; 0x800068 <Month+0x1>
    2612:	06 97       	sbiw	r24, 0x06	; 6
    2614:	61 f0       	breq	.+24     	; 0x262e <__vector_3+0x190>
    2616:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <Month>
    261a:	90 91 68 00 	lds	r25, 0x0068	; 0x800068 <Month+0x1>
    261e:	09 97       	sbiw	r24, 0x09	; 9
    2620:	31 f0       	breq	.+12     	; 0x262e <__vector_3+0x190>
    2622:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <Month>
    2626:	90 91 68 00 	lds	r25, 0x0068	; 0x800068 <Month+0x1>
    262a:	0b 97       	sbiw	r24, 0x0b	; 11
    262c:	71 f4       	brne	.+28     	; 0x264a <__vector_3+0x1ac>
			{
				if(Date > 30)
    262e:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <Date>
    2632:	90 91 6a 00 	lds	r25, 0x006A	; 0x80006a <Date+0x1>
    2636:	4f 97       	sbiw	r24, 0x1f	; 31
    2638:	0c f4       	brge	.+2      	; 0x263c <__vector_3+0x19e>
    263a:	67 c0       	rjmp	.+206    	; 0x270a <__vector_3+0x26c>
				Date=1;
    263c:	81 e0       	ldi	r24, 0x01	; 1
    263e:	90 e0       	ldi	r25, 0x00	; 0
    2640:	90 93 6a 00 	sts	0x006A, r25	; 0x80006a <Date+0x1>
    2644:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <Date>
    2648:	60 c0       	rjmp	.+192    	; 0x270a <__vector_3+0x26c>
			}
			else if(Month == 1 || Month == 3  || Month == 5  || Month == 7 || Month == 8  || Month == 10  || Month == 12)
    264a:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <Month>
    264e:	90 91 68 00 	lds	r25, 0x0068	; 0x800068 <Month+0x1>
    2652:	01 97       	sbiw	r24, 0x01	; 1
    2654:	21 f1       	breq	.+72     	; 0x269e <__vector_3+0x200>
    2656:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <Month>
    265a:	90 91 68 00 	lds	r25, 0x0068	; 0x800068 <Month+0x1>
    265e:	03 97       	sbiw	r24, 0x03	; 3
    2660:	f1 f0       	breq	.+60     	; 0x269e <__vector_3+0x200>
    2662:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <Month>
    2666:	90 91 68 00 	lds	r25, 0x0068	; 0x800068 <Month+0x1>
    266a:	05 97       	sbiw	r24, 0x05	; 5
    266c:	c1 f0       	breq	.+48     	; 0x269e <__vector_3+0x200>
    266e:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <Month>
    2672:	90 91 68 00 	lds	r25, 0x0068	; 0x800068 <Month+0x1>
    2676:	07 97       	sbiw	r24, 0x07	; 7
    2678:	91 f0       	breq	.+36     	; 0x269e <__vector_3+0x200>
    267a:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <Month>
    267e:	90 91 68 00 	lds	r25, 0x0068	; 0x800068 <Month+0x1>
    2682:	08 97       	sbiw	r24, 0x08	; 8
    2684:	61 f0       	breq	.+24     	; 0x269e <__vector_3+0x200>
    2686:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <Month>
    268a:	90 91 68 00 	lds	r25, 0x0068	; 0x800068 <Month+0x1>
    268e:	0a 97       	sbiw	r24, 0x0a	; 10
    2690:	31 f0       	breq	.+12     	; 0x269e <__vector_3+0x200>
    2692:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <Month>
    2696:	90 91 68 00 	lds	r25, 0x0068	; 0x800068 <Month+0x1>
    269a:	0c 97       	sbiw	r24, 0x0c	; 12
    269c:	69 f4       	brne	.+26     	; 0x26b8 <__vector_3+0x21a>
			{
				if(Date >31)
    269e:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <Date>
    26a2:	90 91 6a 00 	lds	r25, 0x006A	; 0x80006a <Date+0x1>
    26a6:	80 97       	sbiw	r24, 0x20	; 32
    26a8:	84 f1       	brlt	.+96     	; 0x270a <__vector_3+0x26c>
				Date=1;
    26aa:	81 e0       	ldi	r24, 0x01	; 1
    26ac:	90 e0       	ldi	r25, 0x00	; 0
    26ae:	90 93 6a 00 	sts	0x006A, r25	; 0x80006a <Date+0x1>
    26b2:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <Date>
    26b6:	29 c0       	rjmp	.+82     	; 0x270a <__vector_3+0x26c>
			}
			
			else if(yyyy/4 == 0 && yyyy/400 == 0)
    26b8:	80 91 d1 00 	lds	r24, 0x00D1	; 0x8000d1 <yyyy>
    26bc:	90 91 d2 00 	lds	r25, 0x00D2	; 0x8000d2 <yyyy+0x1>
    26c0:	03 96       	adiw	r24, 0x03	; 3
    26c2:	07 97       	sbiw	r24, 0x07	; 7
    26c4:	b0 f4       	brcc	.+44     	; 0x26f2 <__vector_3+0x254>
    26c6:	80 91 d1 00 	lds	r24, 0x00D1	; 0x8000d1 <yyyy>
    26ca:	90 91 d2 00 	lds	r25, 0x00D2	; 0x8000d2 <yyyy+0x1>
    26ce:	81 57       	subi	r24, 0x71	; 113
    26d0:	9e 4f       	sbci	r25, 0xFE	; 254
    26d2:	8f 31       	cpi	r24, 0x1F	; 31
    26d4:	93 40       	sbci	r25, 0x03	; 3
    26d6:	68 f4       	brcc	.+26     	; 0x26f2 <__vector_3+0x254>
			{
				if(Date > 29)
    26d8:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <Date>
    26dc:	90 91 6a 00 	lds	r25, 0x006A	; 0x80006a <Date+0x1>
    26e0:	4e 97       	sbiw	r24, 0x1e	; 30
    26e2:	9c f0       	brlt	.+38     	; 0x270a <__vector_3+0x26c>
				Date=1;
    26e4:	81 e0       	ldi	r24, 0x01	; 1
    26e6:	90 e0       	ldi	r25, 0x00	; 0
    26e8:	90 93 6a 00 	sts	0x006A, r25	; 0x80006a <Date+0x1>
    26ec:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <Date>
    26f0:	0c c0       	rjmp	.+24     	; 0x270a <__vector_3+0x26c>
			}
			else
			{
				if(Date > 28)
    26f2:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <Date>
    26f6:	90 91 6a 00 	lds	r25, 0x006A	; 0x80006a <Date+0x1>
    26fa:	4d 97       	sbiw	r24, 0x1d	; 29
    26fc:	34 f0       	brlt	.+12     	; 0x270a <__vector_3+0x26c>
				Date=1;
    26fe:	81 e0       	ldi	r24, 0x01	; 1
    2700:	90 e0       	ldi	r25, 0x00	; 0
    2702:	90 93 6a 00 	sts	0x006A, r25	; 0x80006a <Date+0x1>
    2706:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <Date>
			}
		}
		Display();
    270a:	0e 94 34 02 	call	0x468	; 0x468 <Display>
	}
	if((set == true) && (SW_time_date==3)){
    270e:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <set>
    2712:	88 23       	and	r24, r24
    2714:	a1 f1       	breq	.+104    	; 0x277e <__vector_3+0x2e0>
    2716:	80 91 c4 00 	lds	r24, 0x00C4	; 0x8000c4 <__data_end>
    271a:	83 30       	cpi	r24, 0x03	; 3
    271c:	81 f5       	brne	.+96     	; 0x277e <__vector_3+0x2e0>
// 		while(((BTN_PIN & (1 << incr)) == 0)){		// while den khi tha nut nhan ra
// 		}
		if(count == 1) {
    271e:	80 91 c5 00 	lds	r24, 0x00C5	; 0x8000c5 <count>
    2722:	81 30       	cpi	r24, 0x01	; 1
    2724:	99 f4       	brne	.+38     	; 0x274c <__vector_3+0x2ae>
			A_Hour++;
    2726:	80 91 cd 00 	lds	r24, 0x00CD	; 0x8000cd <A_Hour>
    272a:	90 91 ce 00 	lds	r25, 0x00CE	; 0x8000ce <A_Hour+0x1>
    272e:	01 96       	adiw	r24, 0x01	; 1
    2730:	90 93 ce 00 	sts	0x00CE, r25	; 0x8000ce <A_Hour+0x1>
    2734:	80 93 cd 00 	sts	0x00CD, r24	; 0x8000cd <A_Hour>
			if(A_Hour > 23) A_Hour = 0;
    2738:	80 91 cd 00 	lds	r24, 0x00CD	; 0x8000cd <A_Hour>
    273c:	90 91 ce 00 	lds	r25, 0x00CE	; 0x8000ce <A_Hour+0x1>
    2740:	48 97       	sbiw	r24, 0x18	; 24
    2742:	24 f0       	brlt	.+8      	; 0x274c <__vector_3+0x2ae>
    2744:	10 92 ce 00 	sts	0x00CE, r1	; 0x8000ce <A_Hour+0x1>
    2748:	10 92 cd 00 	sts	0x00CD, r1	; 0x8000cd <A_Hour>
		}
		if(count == 2) {
    274c:	80 91 c5 00 	lds	r24, 0x00C5	; 0x8000c5 <count>
    2750:	82 30       	cpi	r24, 0x02	; 2
    2752:	99 f4       	brne	.+38     	; 0x277a <__vector_3+0x2dc>
			A_Minute++;
    2754:	80 91 cb 00 	lds	r24, 0x00CB	; 0x8000cb <A_Minute>
    2758:	90 91 cc 00 	lds	r25, 0x00CC	; 0x8000cc <A_Minute+0x1>
    275c:	01 96       	adiw	r24, 0x01	; 1
    275e:	90 93 cc 00 	sts	0x00CC, r25	; 0x8000cc <A_Minute+0x1>
    2762:	80 93 cb 00 	sts	0x00CB, r24	; 0x8000cb <A_Minute>
			if(A_Minute > 59) A_Minute = 0;
    2766:	80 91 cb 00 	lds	r24, 0x00CB	; 0x8000cb <A_Minute>
    276a:	90 91 cc 00 	lds	r25, 0x00CC	; 0x8000cc <A_Minute+0x1>
    276e:	cc 97       	sbiw	r24, 0x3c	; 60
    2770:	24 f0       	brlt	.+8      	; 0x277a <__vector_3+0x2dc>
    2772:	10 92 cc 00 	sts	0x00CC, r1	; 0x8000cc <A_Minute+0x1>
    2776:	10 92 cb 00 	sts	0x00CB, r1	; 0x8000cb <A_Minute>
		}
		Display();
    277a:	0e 94 34 02 	call	0x468	; 0x468 <Display>
	}
}
    277e:	ff 91       	pop	r31
    2780:	ef 91       	pop	r30
    2782:	bf 91       	pop	r27
    2784:	af 91       	pop	r26
    2786:	9f 91       	pop	r25
    2788:	8f 91       	pop	r24
    278a:	7f 91       	pop	r23
    278c:	6f 91       	pop	r22
    278e:	5f 91       	pop	r21
    2790:	4f 91       	pop	r20
    2792:	3f 91       	pop	r19
    2794:	2f 91       	pop	r18
    2796:	0f 90       	pop	r0
    2798:	0f be       	out	0x3f, r0	; 63
    279a:	0f 90       	pop	r0
    279c:	1f 90       	pop	r1
    279e:	18 95       	reti

000027a0 <__subsf3>:
    27a0:	50 58       	subi	r21, 0x80	; 128

000027a2 <__addsf3>:
    27a2:	bb 27       	eor	r27, r27
    27a4:	aa 27       	eor	r26, r26
    27a6:	0e 94 e8 13 	call	0x27d0	; 0x27d0 <__addsf3x>
    27aa:	0c 94 a2 15 	jmp	0x2b44	; 0x2b44 <__fp_round>
    27ae:	0e 94 94 15 	call	0x2b28	; 0x2b28 <__fp_pscA>
    27b2:	38 f0       	brcs	.+14     	; 0x27c2 <__addsf3+0x20>
    27b4:	0e 94 9b 15 	call	0x2b36	; 0x2b36 <__fp_pscB>
    27b8:	20 f0       	brcs	.+8      	; 0x27c2 <__addsf3+0x20>
    27ba:	39 f4       	brne	.+14     	; 0x27ca <__addsf3+0x28>
    27bc:	9f 3f       	cpi	r25, 0xFF	; 255
    27be:	19 f4       	brne	.+6      	; 0x27c6 <__addsf3+0x24>
    27c0:	26 f4       	brtc	.+8      	; 0x27ca <__addsf3+0x28>
    27c2:	0c 94 91 15 	jmp	0x2b22	; 0x2b22 <__fp_nan>
    27c6:	0e f4       	brtc	.+2      	; 0x27ca <__addsf3+0x28>
    27c8:	e0 95       	com	r30
    27ca:	e7 fb       	bst	r30, 7
    27cc:	0c 94 62 15 	jmp	0x2ac4	; 0x2ac4 <__fp_inf>

000027d0 <__addsf3x>:
    27d0:	e9 2f       	mov	r30, r25
    27d2:	0e 94 b3 15 	call	0x2b66	; 0x2b66 <__fp_split3>
    27d6:	58 f3       	brcs	.-42     	; 0x27ae <__addsf3+0xc>
    27d8:	ba 17       	cp	r27, r26
    27da:	62 07       	cpc	r22, r18
    27dc:	73 07       	cpc	r23, r19
    27de:	84 07       	cpc	r24, r20
    27e0:	95 07       	cpc	r25, r21
    27e2:	20 f0       	brcs	.+8      	; 0x27ec <__addsf3x+0x1c>
    27e4:	79 f4       	brne	.+30     	; 0x2804 <__addsf3x+0x34>
    27e6:	a6 f5       	brtc	.+104    	; 0x2850 <__addsf3x+0x80>
    27e8:	0c 94 ed 15 	jmp	0x2bda	; 0x2bda <__fp_zero>
    27ec:	0e f4       	brtc	.+2      	; 0x27f0 <__addsf3x+0x20>
    27ee:	e0 95       	com	r30
    27f0:	0b 2e       	mov	r0, r27
    27f2:	ba 2f       	mov	r27, r26
    27f4:	a0 2d       	mov	r26, r0
    27f6:	0b 01       	movw	r0, r22
    27f8:	b9 01       	movw	r22, r18
    27fa:	90 01       	movw	r18, r0
    27fc:	0c 01       	movw	r0, r24
    27fe:	ca 01       	movw	r24, r20
    2800:	a0 01       	movw	r20, r0
    2802:	11 24       	eor	r1, r1
    2804:	ff 27       	eor	r31, r31
    2806:	59 1b       	sub	r21, r25
    2808:	99 f0       	breq	.+38     	; 0x2830 <__addsf3x+0x60>
    280a:	59 3f       	cpi	r21, 0xF9	; 249
    280c:	50 f4       	brcc	.+20     	; 0x2822 <__addsf3x+0x52>
    280e:	50 3e       	cpi	r21, 0xE0	; 224
    2810:	68 f1       	brcs	.+90     	; 0x286c <__addsf3x+0x9c>
    2812:	1a 16       	cp	r1, r26
    2814:	f0 40       	sbci	r31, 0x00	; 0
    2816:	a2 2f       	mov	r26, r18
    2818:	23 2f       	mov	r18, r19
    281a:	34 2f       	mov	r19, r20
    281c:	44 27       	eor	r20, r20
    281e:	58 5f       	subi	r21, 0xF8	; 248
    2820:	f3 cf       	rjmp	.-26     	; 0x2808 <__addsf3x+0x38>
    2822:	46 95       	lsr	r20
    2824:	37 95       	ror	r19
    2826:	27 95       	ror	r18
    2828:	a7 95       	ror	r26
    282a:	f0 40       	sbci	r31, 0x00	; 0
    282c:	53 95       	inc	r21
    282e:	c9 f7       	brne	.-14     	; 0x2822 <__addsf3x+0x52>
    2830:	7e f4       	brtc	.+30     	; 0x2850 <__addsf3x+0x80>
    2832:	1f 16       	cp	r1, r31
    2834:	ba 0b       	sbc	r27, r26
    2836:	62 0b       	sbc	r22, r18
    2838:	73 0b       	sbc	r23, r19
    283a:	84 0b       	sbc	r24, r20
    283c:	ba f0       	brmi	.+46     	; 0x286c <__addsf3x+0x9c>
    283e:	91 50       	subi	r25, 0x01	; 1
    2840:	a1 f0       	breq	.+40     	; 0x286a <__addsf3x+0x9a>
    2842:	ff 0f       	add	r31, r31
    2844:	bb 1f       	adc	r27, r27
    2846:	66 1f       	adc	r22, r22
    2848:	77 1f       	adc	r23, r23
    284a:	88 1f       	adc	r24, r24
    284c:	c2 f7       	brpl	.-16     	; 0x283e <__addsf3x+0x6e>
    284e:	0e c0       	rjmp	.+28     	; 0x286c <__addsf3x+0x9c>
    2850:	ba 0f       	add	r27, r26
    2852:	62 1f       	adc	r22, r18
    2854:	73 1f       	adc	r23, r19
    2856:	84 1f       	adc	r24, r20
    2858:	48 f4       	brcc	.+18     	; 0x286c <__addsf3x+0x9c>
    285a:	87 95       	ror	r24
    285c:	77 95       	ror	r23
    285e:	67 95       	ror	r22
    2860:	b7 95       	ror	r27
    2862:	f7 95       	ror	r31
    2864:	9e 3f       	cpi	r25, 0xFE	; 254
    2866:	08 f0       	brcs	.+2      	; 0x286a <__addsf3x+0x9a>
    2868:	b0 cf       	rjmp	.-160    	; 0x27ca <__addsf3+0x28>
    286a:	93 95       	inc	r25
    286c:	88 0f       	add	r24, r24
    286e:	08 f0       	brcs	.+2      	; 0x2872 <__addsf3x+0xa2>
    2870:	99 27       	eor	r25, r25
    2872:	ee 0f       	add	r30, r30
    2874:	97 95       	ror	r25
    2876:	87 95       	ror	r24
    2878:	08 95       	ret

0000287a <__cmpsf2>:
    287a:	0e 94 3e 15 	call	0x2a7c	; 0x2a7c <__fp_cmp>
    287e:	08 f4       	brcc	.+2      	; 0x2882 <__cmpsf2+0x8>
    2880:	81 e0       	ldi	r24, 0x01	; 1
    2882:	08 95       	ret

00002884 <__divsf3>:
    2884:	0e 94 56 14 	call	0x28ac	; 0x28ac <__divsf3x>
    2888:	0c 94 a2 15 	jmp	0x2b44	; 0x2b44 <__fp_round>
    288c:	0e 94 9b 15 	call	0x2b36	; 0x2b36 <__fp_pscB>
    2890:	58 f0       	brcs	.+22     	; 0x28a8 <__divsf3+0x24>
    2892:	0e 94 94 15 	call	0x2b28	; 0x2b28 <__fp_pscA>
    2896:	40 f0       	brcs	.+16     	; 0x28a8 <__divsf3+0x24>
    2898:	29 f4       	brne	.+10     	; 0x28a4 <__divsf3+0x20>
    289a:	5f 3f       	cpi	r21, 0xFF	; 255
    289c:	29 f0       	breq	.+10     	; 0x28a8 <__divsf3+0x24>
    289e:	0c 94 62 15 	jmp	0x2ac4	; 0x2ac4 <__fp_inf>
    28a2:	51 11       	cpse	r21, r1
    28a4:	0c 94 ee 15 	jmp	0x2bdc	; 0x2bdc <__fp_szero>
    28a8:	0c 94 91 15 	jmp	0x2b22	; 0x2b22 <__fp_nan>

000028ac <__divsf3x>:
    28ac:	0e 94 b3 15 	call	0x2b66	; 0x2b66 <__fp_split3>
    28b0:	68 f3       	brcs	.-38     	; 0x288c <__divsf3+0x8>

000028b2 <__divsf3_pse>:
    28b2:	99 23       	and	r25, r25
    28b4:	b1 f3       	breq	.-20     	; 0x28a2 <__divsf3+0x1e>
    28b6:	55 23       	and	r21, r21
    28b8:	91 f3       	breq	.-28     	; 0x289e <__divsf3+0x1a>
    28ba:	95 1b       	sub	r25, r21
    28bc:	55 0b       	sbc	r21, r21
    28be:	bb 27       	eor	r27, r27
    28c0:	aa 27       	eor	r26, r26
    28c2:	62 17       	cp	r22, r18
    28c4:	73 07       	cpc	r23, r19
    28c6:	84 07       	cpc	r24, r20
    28c8:	38 f0       	brcs	.+14     	; 0x28d8 <__divsf3_pse+0x26>
    28ca:	9f 5f       	subi	r25, 0xFF	; 255
    28cc:	5f 4f       	sbci	r21, 0xFF	; 255
    28ce:	22 0f       	add	r18, r18
    28d0:	33 1f       	adc	r19, r19
    28d2:	44 1f       	adc	r20, r20
    28d4:	aa 1f       	adc	r26, r26
    28d6:	a9 f3       	breq	.-22     	; 0x28c2 <__divsf3_pse+0x10>
    28d8:	35 d0       	rcall	.+106    	; 0x2944 <__divsf3_pse+0x92>
    28da:	0e 2e       	mov	r0, r30
    28dc:	3a f0       	brmi	.+14     	; 0x28ec <__divsf3_pse+0x3a>
    28de:	e0 e8       	ldi	r30, 0x80	; 128
    28e0:	32 d0       	rcall	.+100    	; 0x2946 <__divsf3_pse+0x94>
    28e2:	91 50       	subi	r25, 0x01	; 1
    28e4:	50 40       	sbci	r21, 0x00	; 0
    28e6:	e6 95       	lsr	r30
    28e8:	00 1c       	adc	r0, r0
    28ea:	ca f7       	brpl	.-14     	; 0x28de <__divsf3_pse+0x2c>
    28ec:	2b d0       	rcall	.+86     	; 0x2944 <__divsf3_pse+0x92>
    28ee:	fe 2f       	mov	r31, r30
    28f0:	29 d0       	rcall	.+82     	; 0x2944 <__divsf3_pse+0x92>
    28f2:	66 0f       	add	r22, r22
    28f4:	77 1f       	adc	r23, r23
    28f6:	88 1f       	adc	r24, r24
    28f8:	bb 1f       	adc	r27, r27
    28fa:	26 17       	cp	r18, r22
    28fc:	37 07       	cpc	r19, r23
    28fe:	48 07       	cpc	r20, r24
    2900:	ab 07       	cpc	r26, r27
    2902:	b0 e8       	ldi	r27, 0x80	; 128
    2904:	09 f0       	breq	.+2      	; 0x2908 <__divsf3_pse+0x56>
    2906:	bb 0b       	sbc	r27, r27
    2908:	80 2d       	mov	r24, r0
    290a:	bf 01       	movw	r22, r30
    290c:	ff 27       	eor	r31, r31
    290e:	93 58       	subi	r25, 0x83	; 131
    2910:	5f 4f       	sbci	r21, 0xFF	; 255
    2912:	3a f0       	brmi	.+14     	; 0x2922 <__divsf3_pse+0x70>
    2914:	9e 3f       	cpi	r25, 0xFE	; 254
    2916:	51 05       	cpc	r21, r1
    2918:	78 f0       	brcs	.+30     	; 0x2938 <__divsf3_pse+0x86>
    291a:	0c 94 62 15 	jmp	0x2ac4	; 0x2ac4 <__fp_inf>
    291e:	0c 94 ee 15 	jmp	0x2bdc	; 0x2bdc <__fp_szero>
    2922:	5f 3f       	cpi	r21, 0xFF	; 255
    2924:	e4 f3       	brlt	.-8      	; 0x291e <__divsf3_pse+0x6c>
    2926:	98 3e       	cpi	r25, 0xE8	; 232
    2928:	d4 f3       	brlt	.-12     	; 0x291e <__divsf3_pse+0x6c>
    292a:	86 95       	lsr	r24
    292c:	77 95       	ror	r23
    292e:	67 95       	ror	r22
    2930:	b7 95       	ror	r27
    2932:	f7 95       	ror	r31
    2934:	9f 5f       	subi	r25, 0xFF	; 255
    2936:	c9 f7       	brne	.-14     	; 0x292a <__divsf3_pse+0x78>
    2938:	88 0f       	add	r24, r24
    293a:	91 1d       	adc	r25, r1
    293c:	96 95       	lsr	r25
    293e:	87 95       	ror	r24
    2940:	97 f9       	bld	r25, 7
    2942:	08 95       	ret
    2944:	e1 e0       	ldi	r30, 0x01	; 1
    2946:	66 0f       	add	r22, r22
    2948:	77 1f       	adc	r23, r23
    294a:	88 1f       	adc	r24, r24
    294c:	bb 1f       	adc	r27, r27
    294e:	62 17       	cp	r22, r18
    2950:	73 07       	cpc	r23, r19
    2952:	84 07       	cpc	r24, r20
    2954:	ba 07       	cpc	r27, r26
    2956:	20 f0       	brcs	.+8      	; 0x2960 <__divsf3_pse+0xae>
    2958:	62 1b       	sub	r22, r18
    295a:	73 0b       	sbc	r23, r19
    295c:	84 0b       	sbc	r24, r20
    295e:	ba 0b       	sbc	r27, r26
    2960:	ee 1f       	adc	r30, r30
    2962:	88 f7       	brcc	.-30     	; 0x2946 <__divsf3_pse+0x94>
    2964:	e0 95       	com	r30
    2966:	08 95       	ret

00002968 <__fixsfsi>:
    2968:	0e 94 bb 14 	call	0x2976	; 0x2976 <__fixunssfsi>
    296c:	68 94       	set
    296e:	b1 11       	cpse	r27, r1
    2970:	0c 94 ee 15 	jmp	0x2bdc	; 0x2bdc <__fp_szero>
    2974:	08 95       	ret

00002976 <__fixunssfsi>:
    2976:	0e 94 bb 15 	call	0x2b76	; 0x2b76 <__fp_splitA>
    297a:	88 f0       	brcs	.+34     	; 0x299e <__fixunssfsi+0x28>
    297c:	9f 57       	subi	r25, 0x7F	; 127
    297e:	98 f0       	brcs	.+38     	; 0x29a6 <__fixunssfsi+0x30>
    2980:	b9 2f       	mov	r27, r25
    2982:	99 27       	eor	r25, r25
    2984:	b7 51       	subi	r27, 0x17	; 23
    2986:	b0 f0       	brcs	.+44     	; 0x29b4 <__fixunssfsi+0x3e>
    2988:	e1 f0       	breq	.+56     	; 0x29c2 <__fixunssfsi+0x4c>
    298a:	66 0f       	add	r22, r22
    298c:	77 1f       	adc	r23, r23
    298e:	88 1f       	adc	r24, r24
    2990:	99 1f       	adc	r25, r25
    2992:	1a f0       	brmi	.+6      	; 0x299a <__fixunssfsi+0x24>
    2994:	ba 95       	dec	r27
    2996:	c9 f7       	brne	.-14     	; 0x298a <__fixunssfsi+0x14>
    2998:	14 c0       	rjmp	.+40     	; 0x29c2 <__fixunssfsi+0x4c>
    299a:	b1 30       	cpi	r27, 0x01	; 1
    299c:	91 f0       	breq	.+36     	; 0x29c2 <__fixunssfsi+0x4c>
    299e:	0e 94 ed 15 	call	0x2bda	; 0x2bda <__fp_zero>
    29a2:	b1 e0       	ldi	r27, 0x01	; 1
    29a4:	08 95       	ret
    29a6:	0c 94 ed 15 	jmp	0x2bda	; 0x2bda <__fp_zero>
    29aa:	67 2f       	mov	r22, r23
    29ac:	78 2f       	mov	r23, r24
    29ae:	88 27       	eor	r24, r24
    29b0:	b8 5f       	subi	r27, 0xF8	; 248
    29b2:	39 f0       	breq	.+14     	; 0x29c2 <__fixunssfsi+0x4c>
    29b4:	b9 3f       	cpi	r27, 0xF9	; 249
    29b6:	cc f3       	brlt	.-14     	; 0x29aa <__fixunssfsi+0x34>
    29b8:	86 95       	lsr	r24
    29ba:	77 95       	ror	r23
    29bc:	67 95       	ror	r22
    29be:	b3 95       	inc	r27
    29c0:	d9 f7       	brne	.-10     	; 0x29b8 <__fixunssfsi+0x42>
    29c2:	3e f4       	brtc	.+14     	; 0x29d2 <__fixunssfsi+0x5c>
    29c4:	90 95       	com	r25
    29c6:	80 95       	com	r24
    29c8:	70 95       	com	r23
    29ca:	61 95       	neg	r22
    29cc:	7f 4f       	sbci	r23, 0xFF	; 255
    29ce:	8f 4f       	sbci	r24, 0xFF	; 255
    29d0:	9f 4f       	sbci	r25, 0xFF	; 255
    29d2:	08 95       	ret

000029d4 <__floatunsisf>:
    29d4:	e8 94       	clt
    29d6:	09 c0       	rjmp	.+18     	; 0x29ea <__floatsisf+0x12>

000029d8 <__floatsisf>:
    29d8:	97 fb       	bst	r25, 7
    29da:	3e f4       	brtc	.+14     	; 0x29ea <__floatsisf+0x12>
    29dc:	90 95       	com	r25
    29de:	80 95       	com	r24
    29e0:	70 95       	com	r23
    29e2:	61 95       	neg	r22
    29e4:	7f 4f       	sbci	r23, 0xFF	; 255
    29e6:	8f 4f       	sbci	r24, 0xFF	; 255
    29e8:	9f 4f       	sbci	r25, 0xFF	; 255
    29ea:	99 23       	and	r25, r25
    29ec:	a9 f0       	breq	.+42     	; 0x2a18 <__floatsisf+0x40>
    29ee:	f9 2f       	mov	r31, r25
    29f0:	96 e9       	ldi	r25, 0x96	; 150
    29f2:	bb 27       	eor	r27, r27
    29f4:	93 95       	inc	r25
    29f6:	f6 95       	lsr	r31
    29f8:	87 95       	ror	r24
    29fa:	77 95       	ror	r23
    29fc:	67 95       	ror	r22
    29fe:	b7 95       	ror	r27
    2a00:	f1 11       	cpse	r31, r1
    2a02:	f8 cf       	rjmp	.-16     	; 0x29f4 <__floatsisf+0x1c>
    2a04:	fa f4       	brpl	.+62     	; 0x2a44 <__floatsisf+0x6c>
    2a06:	bb 0f       	add	r27, r27
    2a08:	11 f4       	brne	.+4      	; 0x2a0e <__floatsisf+0x36>
    2a0a:	60 ff       	sbrs	r22, 0
    2a0c:	1b c0       	rjmp	.+54     	; 0x2a44 <__floatsisf+0x6c>
    2a0e:	6f 5f       	subi	r22, 0xFF	; 255
    2a10:	7f 4f       	sbci	r23, 0xFF	; 255
    2a12:	8f 4f       	sbci	r24, 0xFF	; 255
    2a14:	9f 4f       	sbci	r25, 0xFF	; 255
    2a16:	16 c0       	rjmp	.+44     	; 0x2a44 <__floatsisf+0x6c>
    2a18:	88 23       	and	r24, r24
    2a1a:	11 f0       	breq	.+4      	; 0x2a20 <__floatsisf+0x48>
    2a1c:	96 e9       	ldi	r25, 0x96	; 150
    2a1e:	11 c0       	rjmp	.+34     	; 0x2a42 <__floatsisf+0x6a>
    2a20:	77 23       	and	r23, r23
    2a22:	21 f0       	breq	.+8      	; 0x2a2c <__floatsisf+0x54>
    2a24:	9e e8       	ldi	r25, 0x8E	; 142
    2a26:	87 2f       	mov	r24, r23
    2a28:	76 2f       	mov	r23, r22
    2a2a:	05 c0       	rjmp	.+10     	; 0x2a36 <__floatsisf+0x5e>
    2a2c:	66 23       	and	r22, r22
    2a2e:	71 f0       	breq	.+28     	; 0x2a4c <__floatsisf+0x74>
    2a30:	96 e8       	ldi	r25, 0x86	; 134
    2a32:	86 2f       	mov	r24, r22
    2a34:	70 e0       	ldi	r23, 0x00	; 0
    2a36:	60 e0       	ldi	r22, 0x00	; 0
    2a38:	2a f0       	brmi	.+10     	; 0x2a44 <__floatsisf+0x6c>
    2a3a:	9a 95       	dec	r25
    2a3c:	66 0f       	add	r22, r22
    2a3e:	77 1f       	adc	r23, r23
    2a40:	88 1f       	adc	r24, r24
    2a42:	da f7       	brpl	.-10     	; 0x2a3a <__floatsisf+0x62>
    2a44:	88 0f       	add	r24, r24
    2a46:	96 95       	lsr	r25
    2a48:	87 95       	ror	r24
    2a4a:	97 f9       	bld	r25, 7
    2a4c:	08 95       	ret

00002a4e <floor>:
    2a4e:	0e 94 d5 15 	call	0x2baa	; 0x2baa <__fp_trunc>
    2a52:	90 f0       	brcs	.+36     	; 0x2a78 <floor+0x2a>
    2a54:	9f 37       	cpi	r25, 0x7F	; 127
    2a56:	48 f4       	brcc	.+18     	; 0x2a6a <floor+0x1c>
    2a58:	91 11       	cpse	r25, r1
    2a5a:	16 f0       	brts	.+4      	; 0x2a60 <floor+0x12>
    2a5c:	0c 94 ee 15 	jmp	0x2bdc	; 0x2bdc <__fp_szero>
    2a60:	60 e0       	ldi	r22, 0x00	; 0
    2a62:	70 e0       	ldi	r23, 0x00	; 0
    2a64:	80 e8       	ldi	r24, 0x80	; 128
    2a66:	9f eb       	ldi	r25, 0xBF	; 191
    2a68:	08 95       	ret
    2a6a:	26 f4       	brtc	.+8      	; 0x2a74 <floor+0x26>
    2a6c:	1b 16       	cp	r1, r27
    2a6e:	61 1d       	adc	r22, r1
    2a70:	71 1d       	adc	r23, r1
    2a72:	81 1d       	adc	r24, r1
    2a74:	0c 94 68 15 	jmp	0x2ad0	; 0x2ad0 <__fp_mintl>
    2a78:	0c 94 83 15 	jmp	0x2b06	; 0x2b06 <__fp_mpack>

00002a7c <__fp_cmp>:
    2a7c:	99 0f       	add	r25, r25
    2a7e:	00 08       	sbc	r0, r0
    2a80:	55 0f       	add	r21, r21
    2a82:	aa 0b       	sbc	r26, r26
    2a84:	e0 e8       	ldi	r30, 0x80	; 128
    2a86:	fe ef       	ldi	r31, 0xFE	; 254
    2a88:	16 16       	cp	r1, r22
    2a8a:	17 06       	cpc	r1, r23
    2a8c:	e8 07       	cpc	r30, r24
    2a8e:	f9 07       	cpc	r31, r25
    2a90:	c0 f0       	brcs	.+48     	; 0x2ac2 <__fp_cmp+0x46>
    2a92:	12 16       	cp	r1, r18
    2a94:	13 06       	cpc	r1, r19
    2a96:	e4 07       	cpc	r30, r20
    2a98:	f5 07       	cpc	r31, r21
    2a9a:	98 f0       	brcs	.+38     	; 0x2ac2 <__fp_cmp+0x46>
    2a9c:	62 1b       	sub	r22, r18
    2a9e:	73 0b       	sbc	r23, r19
    2aa0:	84 0b       	sbc	r24, r20
    2aa2:	95 0b       	sbc	r25, r21
    2aa4:	39 f4       	brne	.+14     	; 0x2ab4 <__fp_cmp+0x38>
    2aa6:	0a 26       	eor	r0, r26
    2aa8:	61 f0       	breq	.+24     	; 0x2ac2 <__fp_cmp+0x46>
    2aaa:	23 2b       	or	r18, r19
    2aac:	24 2b       	or	r18, r20
    2aae:	25 2b       	or	r18, r21
    2ab0:	21 f4       	brne	.+8      	; 0x2aba <__fp_cmp+0x3e>
    2ab2:	08 95       	ret
    2ab4:	0a 26       	eor	r0, r26
    2ab6:	09 f4       	brne	.+2      	; 0x2aba <__fp_cmp+0x3e>
    2ab8:	a1 40       	sbci	r26, 0x01	; 1
    2aba:	a6 95       	lsr	r26
    2abc:	8f ef       	ldi	r24, 0xFF	; 255
    2abe:	81 1d       	adc	r24, r1
    2ac0:	81 1d       	adc	r24, r1
    2ac2:	08 95       	ret

00002ac4 <__fp_inf>:
    2ac4:	97 f9       	bld	r25, 7
    2ac6:	9f 67       	ori	r25, 0x7F	; 127
    2ac8:	80 e8       	ldi	r24, 0x80	; 128
    2aca:	70 e0       	ldi	r23, 0x00	; 0
    2acc:	60 e0       	ldi	r22, 0x00	; 0
    2ace:	08 95       	ret

00002ad0 <__fp_mintl>:
    2ad0:	88 23       	and	r24, r24
    2ad2:	71 f4       	brne	.+28     	; 0x2af0 <__fp_mintl+0x20>
    2ad4:	77 23       	and	r23, r23
    2ad6:	21 f0       	breq	.+8      	; 0x2ae0 <__fp_mintl+0x10>
    2ad8:	98 50       	subi	r25, 0x08	; 8
    2ada:	87 2b       	or	r24, r23
    2adc:	76 2f       	mov	r23, r22
    2ade:	07 c0       	rjmp	.+14     	; 0x2aee <__fp_mintl+0x1e>
    2ae0:	66 23       	and	r22, r22
    2ae2:	11 f4       	brne	.+4      	; 0x2ae8 <__fp_mintl+0x18>
    2ae4:	99 27       	eor	r25, r25
    2ae6:	0d c0       	rjmp	.+26     	; 0x2b02 <__fp_mintl+0x32>
    2ae8:	90 51       	subi	r25, 0x10	; 16
    2aea:	86 2b       	or	r24, r22
    2aec:	70 e0       	ldi	r23, 0x00	; 0
    2aee:	60 e0       	ldi	r22, 0x00	; 0
    2af0:	2a f0       	brmi	.+10     	; 0x2afc <__fp_mintl+0x2c>
    2af2:	9a 95       	dec	r25
    2af4:	66 0f       	add	r22, r22
    2af6:	77 1f       	adc	r23, r23
    2af8:	88 1f       	adc	r24, r24
    2afa:	da f7       	brpl	.-10     	; 0x2af2 <__fp_mintl+0x22>
    2afc:	88 0f       	add	r24, r24
    2afe:	96 95       	lsr	r25
    2b00:	87 95       	ror	r24
    2b02:	97 f9       	bld	r25, 7
    2b04:	08 95       	ret

00002b06 <__fp_mpack>:
    2b06:	9f 3f       	cpi	r25, 0xFF	; 255
    2b08:	31 f0       	breq	.+12     	; 0x2b16 <__fp_mpack_finite+0xc>

00002b0a <__fp_mpack_finite>:
    2b0a:	91 50       	subi	r25, 0x01	; 1
    2b0c:	20 f4       	brcc	.+8      	; 0x2b16 <__fp_mpack_finite+0xc>
    2b0e:	87 95       	ror	r24
    2b10:	77 95       	ror	r23
    2b12:	67 95       	ror	r22
    2b14:	b7 95       	ror	r27
    2b16:	88 0f       	add	r24, r24
    2b18:	91 1d       	adc	r25, r1
    2b1a:	96 95       	lsr	r25
    2b1c:	87 95       	ror	r24
    2b1e:	97 f9       	bld	r25, 7
    2b20:	08 95       	ret

00002b22 <__fp_nan>:
    2b22:	9f ef       	ldi	r25, 0xFF	; 255
    2b24:	80 ec       	ldi	r24, 0xC0	; 192
    2b26:	08 95       	ret

00002b28 <__fp_pscA>:
    2b28:	00 24       	eor	r0, r0
    2b2a:	0a 94       	dec	r0
    2b2c:	16 16       	cp	r1, r22
    2b2e:	17 06       	cpc	r1, r23
    2b30:	18 06       	cpc	r1, r24
    2b32:	09 06       	cpc	r0, r25
    2b34:	08 95       	ret

00002b36 <__fp_pscB>:
    2b36:	00 24       	eor	r0, r0
    2b38:	0a 94       	dec	r0
    2b3a:	12 16       	cp	r1, r18
    2b3c:	13 06       	cpc	r1, r19
    2b3e:	14 06       	cpc	r1, r20
    2b40:	05 06       	cpc	r0, r21
    2b42:	08 95       	ret

00002b44 <__fp_round>:
    2b44:	09 2e       	mov	r0, r25
    2b46:	03 94       	inc	r0
    2b48:	00 0c       	add	r0, r0
    2b4a:	11 f4       	brne	.+4      	; 0x2b50 <__fp_round+0xc>
    2b4c:	88 23       	and	r24, r24
    2b4e:	52 f0       	brmi	.+20     	; 0x2b64 <__fp_round+0x20>
    2b50:	bb 0f       	add	r27, r27
    2b52:	40 f4       	brcc	.+16     	; 0x2b64 <__fp_round+0x20>
    2b54:	bf 2b       	or	r27, r31
    2b56:	11 f4       	brne	.+4      	; 0x2b5c <__fp_round+0x18>
    2b58:	60 ff       	sbrs	r22, 0
    2b5a:	04 c0       	rjmp	.+8      	; 0x2b64 <__fp_round+0x20>
    2b5c:	6f 5f       	subi	r22, 0xFF	; 255
    2b5e:	7f 4f       	sbci	r23, 0xFF	; 255
    2b60:	8f 4f       	sbci	r24, 0xFF	; 255
    2b62:	9f 4f       	sbci	r25, 0xFF	; 255
    2b64:	08 95       	ret

00002b66 <__fp_split3>:
    2b66:	57 fd       	sbrc	r21, 7
    2b68:	90 58       	subi	r25, 0x80	; 128
    2b6a:	44 0f       	add	r20, r20
    2b6c:	55 1f       	adc	r21, r21
    2b6e:	59 f0       	breq	.+22     	; 0x2b86 <__fp_splitA+0x10>
    2b70:	5f 3f       	cpi	r21, 0xFF	; 255
    2b72:	71 f0       	breq	.+28     	; 0x2b90 <__fp_splitA+0x1a>
    2b74:	47 95       	ror	r20

00002b76 <__fp_splitA>:
    2b76:	88 0f       	add	r24, r24
    2b78:	97 fb       	bst	r25, 7
    2b7a:	99 1f       	adc	r25, r25
    2b7c:	61 f0       	breq	.+24     	; 0x2b96 <__fp_splitA+0x20>
    2b7e:	9f 3f       	cpi	r25, 0xFF	; 255
    2b80:	79 f0       	breq	.+30     	; 0x2ba0 <__fp_splitA+0x2a>
    2b82:	87 95       	ror	r24
    2b84:	08 95       	ret
    2b86:	12 16       	cp	r1, r18
    2b88:	13 06       	cpc	r1, r19
    2b8a:	14 06       	cpc	r1, r20
    2b8c:	55 1f       	adc	r21, r21
    2b8e:	f2 cf       	rjmp	.-28     	; 0x2b74 <__fp_split3+0xe>
    2b90:	46 95       	lsr	r20
    2b92:	f1 df       	rcall	.-30     	; 0x2b76 <__fp_splitA>
    2b94:	08 c0       	rjmp	.+16     	; 0x2ba6 <__fp_splitA+0x30>
    2b96:	16 16       	cp	r1, r22
    2b98:	17 06       	cpc	r1, r23
    2b9a:	18 06       	cpc	r1, r24
    2b9c:	99 1f       	adc	r25, r25
    2b9e:	f1 cf       	rjmp	.-30     	; 0x2b82 <__fp_splitA+0xc>
    2ba0:	86 95       	lsr	r24
    2ba2:	71 05       	cpc	r23, r1
    2ba4:	61 05       	cpc	r22, r1
    2ba6:	08 94       	sec
    2ba8:	08 95       	ret

00002baa <__fp_trunc>:
    2baa:	0e 94 bb 15 	call	0x2b76	; 0x2b76 <__fp_splitA>
    2bae:	a0 f0       	brcs	.+40     	; 0x2bd8 <__fp_trunc+0x2e>
    2bb0:	be e7       	ldi	r27, 0x7E	; 126
    2bb2:	b9 17       	cp	r27, r25
    2bb4:	88 f4       	brcc	.+34     	; 0x2bd8 <__fp_trunc+0x2e>
    2bb6:	bb 27       	eor	r27, r27
    2bb8:	9f 38       	cpi	r25, 0x8F	; 143
    2bba:	60 f4       	brcc	.+24     	; 0x2bd4 <__fp_trunc+0x2a>
    2bbc:	16 16       	cp	r1, r22
    2bbe:	b1 1d       	adc	r27, r1
    2bc0:	67 2f       	mov	r22, r23
    2bc2:	78 2f       	mov	r23, r24
    2bc4:	88 27       	eor	r24, r24
    2bc6:	98 5f       	subi	r25, 0xF8	; 248
    2bc8:	f7 cf       	rjmp	.-18     	; 0x2bb8 <__fp_trunc+0xe>
    2bca:	86 95       	lsr	r24
    2bcc:	77 95       	ror	r23
    2bce:	67 95       	ror	r22
    2bd0:	b1 1d       	adc	r27, r1
    2bd2:	93 95       	inc	r25
    2bd4:	96 39       	cpi	r25, 0x96	; 150
    2bd6:	c8 f3       	brcs	.-14     	; 0x2bca <__fp_trunc+0x20>
    2bd8:	08 95       	ret

00002bda <__fp_zero>:
    2bda:	e8 94       	clt

00002bdc <__fp_szero>:
    2bdc:	bb 27       	eor	r27, r27
    2bde:	66 27       	eor	r22, r22
    2be0:	77 27       	eor	r23, r23
    2be2:	cb 01       	movw	r24, r22
    2be4:	97 f9       	bld	r25, 7
    2be6:	08 95       	ret

00002be8 <__gesf2>:
    2be8:	0e 94 3e 15 	call	0x2a7c	; 0x2a7c <__fp_cmp>
    2bec:	08 f4       	brcc	.+2      	; 0x2bf0 <__gesf2+0x8>
    2bee:	8f ef       	ldi	r24, 0xFF	; 255
    2bf0:	08 95       	ret

00002bf2 <__mulsf3>:
    2bf2:	0e 94 0c 16 	call	0x2c18	; 0x2c18 <__mulsf3x>
    2bf6:	0c 94 a2 15 	jmp	0x2b44	; 0x2b44 <__fp_round>
    2bfa:	0e 94 94 15 	call	0x2b28	; 0x2b28 <__fp_pscA>
    2bfe:	38 f0       	brcs	.+14     	; 0x2c0e <__mulsf3+0x1c>
    2c00:	0e 94 9b 15 	call	0x2b36	; 0x2b36 <__fp_pscB>
    2c04:	20 f0       	brcs	.+8      	; 0x2c0e <__mulsf3+0x1c>
    2c06:	95 23       	and	r25, r21
    2c08:	11 f0       	breq	.+4      	; 0x2c0e <__mulsf3+0x1c>
    2c0a:	0c 94 62 15 	jmp	0x2ac4	; 0x2ac4 <__fp_inf>
    2c0e:	0c 94 91 15 	jmp	0x2b22	; 0x2b22 <__fp_nan>
    2c12:	11 24       	eor	r1, r1
    2c14:	0c 94 ee 15 	jmp	0x2bdc	; 0x2bdc <__fp_szero>

00002c18 <__mulsf3x>:
    2c18:	0e 94 b3 15 	call	0x2b66	; 0x2b66 <__fp_split3>
    2c1c:	70 f3       	brcs	.-36     	; 0x2bfa <__mulsf3+0x8>

00002c1e <__mulsf3_pse>:
    2c1e:	95 9f       	mul	r25, r21
    2c20:	c1 f3       	breq	.-16     	; 0x2c12 <__mulsf3+0x20>
    2c22:	95 0f       	add	r25, r21
    2c24:	50 e0       	ldi	r21, 0x00	; 0
    2c26:	55 1f       	adc	r21, r21
    2c28:	62 9f       	mul	r22, r18
    2c2a:	f0 01       	movw	r30, r0
    2c2c:	72 9f       	mul	r23, r18
    2c2e:	bb 27       	eor	r27, r27
    2c30:	f0 0d       	add	r31, r0
    2c32:	b1 1d       	adc	r27, r1
    2c34:	63 9f       	mul	r22, r19
    2c36:	aa 27       	eor	r26, r26
    2c38:	f0 0d       	add	r31, r0
    2c3a:	b1 1d       	adc	r27, r1
    2c3c:	aa 1f       	adc	r26, r26
    2c3e:	64 9f       	mul	r22, r20
    2c40:	66 27       	eor	r22, r22
    2c42:	b0 0d       	add	r27, r0
    2c44:	a1 1d       	adc	r26, r1
    2c46:	66 1f       	adc	r22, r22
    2c48:	82 9f       	mul	r24, r18
    2c4a:	22 27       	eor	r18, r18
    2c4c:	b0 0d       	add	r27, r0
    2c4e:	a1 1d       	adc	r26, r1
    2c50:	62 1f       	adc	r22, r18
    2c52:	73 9f       	mul	r23, r19
    2c54:	b0 0d       	add	r27, r0
    2c56:	a1 1d       	adc	r26, r1
    2c58:	62 1f       	adc	r22, r18
    2c5a:	83 9f       	mul	r24, r19
    2c5c:	a0 0d       	add	r26, r0
    2c5e:	61 1d       	adc	r22, r1
    2c60:	22 1f       	adc	r18, r18
    2c62:	74 9f       	mul	r23, r20
    2c64:	33 27       	eor	r19, r19
    2c66:	a0 0d       	add	r26, r0
    2c68:	61 1d       	adc	r22, r1
    2c6a:	23 1f       	adc	r18, r19
    2c6c:	84 9f       	mul	r24, r20
    2c6e:	60 0d       	add	r22, r0
    2c70:	21 1d       	adc	r18, r1
    2c72:	82 2f       	mov	r24, r18
    2c74:	76 2f       	mov	r23, r22
    2c76:	6a 2f       	mov	r22, r26
    2c78:	11 24       	eor	r1, r1
    2c7a:	9f 57       	subi	r25, 0x7F	; 127
    2c7c:	50 40       	sbci	r21, 0x00	; 0
    2c7e:	9a f0       	brmi	.+38     	; 0x2ca6 <__mulsf3_pse+0x88>
    2c80:	f1 f0       	breq	.+60     	; 0x2cbe <__mulsf3_pse+0xa0>
    2c82:	88 23       	and	r24, r24
    2c84:	4a f0       	brmi	.+18     	; 0x2c98 <__mulsf3_pse+0x7a>
    2c86:	ee 0f       	add	r30, r30
    2c88:	ff 1f       	adc	r31, r31
    2c8a:	bb 1f       	adc	r27, r27
    2c8c:	66 1f       	adc	r22, r22
    2c8e:	77 1f       	adc	r23, r23
    2c90:	88 1f       	adc	r24, r24
    2c92:	91 50       	subi	r25, 0x01	; 1
    2c94:	50 40       	sbci	r21, 0x00	; 0
    2c96:	a9 f7       	brne	.-22     	; 0x2c82 <__mulsf3_pse+0x64>
    2c98:	9e 3f       	cpi	r25, 0xFE	; 254
    2c9a:	51 05       	cpc	r21, r1
    2c9c:	80 f0       	brcs	.+32     	; 0x2cbe <__mulsf3_pse+0xa0>
    2c9e:	0c 94 62 15 	jmp	0x2ac4	; 0x2ac4 <__fp_inf>
    2ca2:	0c 94 ee 15 	jmp	0x2bdc	; 0x2bdc <__fp_szero>
    2ca6:	5f 3f       	cpi	r21, 0xFF	; 255
    2ca8:	e4 f3       	brlt	.-8      	; 0x2ca2 <__mulsf3_pse+0x84>
    2caa:	98 3e       	cpi	r25, 0xE8	; 232
    2cac:	d4 f3       	brlt	.-12     	; 0x2ca2 <__mulsf3_pse+0x84>
    2cae:	86 95       	lsr	r24
    2cb0:	77 95       	ror	r23
    2cb2:	67 95       	ror	r22
    2cb4:	b7 95       	ror	r27
    2cb6:	f7 95       	ror	r31
    2cb8:	e7 95       	ror	r30
    2cba:	9f 5f       	subi	r25, 0xFF	; 255
    2cbc:	c1 f7       	brne	.-16     	; 0x2cae <__mulsf3_pse+0x90>
    2cbe:	fe 2b       	or	r31, r30
    2cc0:	88 0f       	add	r24, r24
    2cc2:	91 1d       	adc	r25, r1
    2cc4:	96 95       	lsr	r25
    2cc6:	87 95       	ror	r24
    2cc8:	97 f9       	bld	r25, 7
    2cca:	08 95       	ret

00002ccc <sin>:
    2ccc:	9f 93       	push	r25
    2cce:	0e 94 70 16 	call	0x2ce0	; 0x2ce0 <__fp_rempio2>
    2cd2:	0f 90       	pop	r0
    2cd4:	07 fc       	sbrc	r0, 7
    2cd6:	ee 5f       	subi	r30, 0xFE	; 254
    2cd8:	0c 94 99 16 	jmp	0x2d32	; 0x2d32 <__fp_sinus>
    2cdc:	0c 94 91 15 	jmp	0x2b22	; 0x2b22 <__fp_nan>

00002ce0 <__fp_rempio2>:
    2ce0:	0e 94 bb 15 	call	0x2b76	; 0x2b76 <__fp_splitA>
    2ce4:	d8 f3       	brcs	.-10     	; 0x2cdc <sin+0x10>
    2ce6:	e8 94       	clt
    2ce8:	e0 e0       	ldi	r30, 0x00	; 0
    2cea:	bb 27       	eor	r27, r27
    2cec:	9f 57       	subi	r25, 0x7F	; 127
    2cee:	f0 f0       	brcs	.+60     	; 0x2d2c <__fp_rempio2+0x4c>
    2cf0:	2a ed       	ldi	r18, 0xDA	; 218
    2cf2:	3f e0       	ldi	r19, 0x0F	; 15
    2cf4:	49 ec       	ldi	r20, 0xC9	; 201
    2cf6:	06 c0       	rjmp	.+12     	; 0x2d04 <__fp_rempio2+0x24>
    2cf8:	ee 0f       	add	r30, r30
    2cfa:	bb 0f       	add	r27, r27
    2cfc:	66 1f       	adc	r22, r22
    2cfe:	77 1f       	adc	r23, r23
    2d00:	88 1f       	adc	r24, r24
    2d02:	28 f0       	brcs	.+10     	; 0x2d0e <__fp_rempio2+0x2e>
    2d04:	b2 3a       	cpi	r27, 0xA2	; 162
    2d06:	62 07       	cpc	r22, r18
    2d08:	73 07       	cpc	r23, r19
    2d0a:	84 07       	cpc	r24, r20
    2d0c:	28 f0       	brcs	.+10     	; 0x2d18 <__fp_rempio2+0x38>
    2d0e:	b2 5a       	subi	r27, 0xA2	; 162
    2d10:	62 0b       	sbc	r22, r18
    2d12:	73 0b       	sbc	r23, r19
    2d14:	84 0b       	sbc	r24, r20
    2d16:	e3 95       	inc	r30
    2d18:	9a 95       	dec	r25
    2d1a:	72 f7       	brpl	.-36     	; 0x2cf8 <__fp_rempio2+0x18>
    2d1c:	80 38       	cpi	r24, 0x80	; 128
    2d1e:	30 f4       	brcc	.+12     	; 0x2d2c <__fp_rempio2+0x4c>
    2d20:	9a 95       	dec	r25
    2d22:	bb 0f       	add	r27, r27
    2d24:	66 1f       	adc	r22, r22
    2d26:	77 1f       	adc	r23, r23
    2d28:	88 1f       	adc	r24, r24
    2d2a:	d2 f7       	brpl	.-12     	; 0x2d20 <__fp_rempio2+0x40>
    2d2c:	90 48       	sbci	r25, 0x80	; 128
    2d2e:	0c 94 85 15 	jmp	0x2b0a	; 0x2b0a <__fp_mpack_finite>

00002d32 <__fp_sinus>:
    2d32:	ef 93       	push	r30
    2d34:	e0 ff       	sbrs	r30, 0
    2d36:	07 c0       	rjmp	.+14     	; 0x2d46 <__fp_sinus+0x14>
    2d38:	a2 ea       	ldi	r26, 0xA2	; 162
    2d3a:	2a ed       	ldi	r18, 0xDA	; 218
    2d3c:	3f e0       	ldi	r19, 0x0F	; 15
    2d3e:	49 ec       	ldi	r20, 0xC9	; 201
    2d40:	5f eb       	ldi	r21, 0xBF	; 191
    2d42:	0e 94 e8 13 	call	0x27d0	; 0x27d0 <__addsf3x>
    2d46:	0e 94 a2 15 	call	0x2b44	; 0x2b44 <__fp_round>
    2d4a:	0f 90       	pop	r0
    2d4c:	03 94       	inc	r0
    2d4e:	01 fc       	sbrc	r0, 1
    2d50:	90 58       	subi	r25, 0x80	; 128
    2d52:	e4 e5       	ldi	r30, 0x54	; 84
    2d54:	f0 e0       	ldi	r31, 0x00	; 0
    2d56:	0c 94 ad 16 	jmp	0x2d5a	; 0x2d5a <__fp_powsodd>

00002d5a <__fp_powsodd>:
    2d5a:	9f 93       	push	r25
    2d5c:	8f 93       	push	r24
    2d5e:	7f 93       	push	r23
    2d60:	6f 93       	push	r22
    2d62:	ff 93       	push	r31
    2d64:	ef 93       	push	r30
    2d66:	9b 01       	movw	r18, r22
    2d68:	ac 01       	movw	r20, r24
    2d6a:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <__mulsf3>
    2d6e:	ef 91       	pop	r30
    2d70:	ff 91       	pop	r31
    2d72:	0e 94 c1 16 	call	0x2d82	; 0x2d82 <__fp_powser>
    2d76:	2f 91       	pop	r18
    2d78:	3f 91       	pop	r19
    2d7a:	4f 91       	pop	r20
    2d7c:	5f 91       	pop	r21
    2d7e:	0c 94 f9 15 	jmp	0x2bf2	; 0x2bf2 <__mulsf3>

00002d82 <__fp_powser>:
    2d82:	df 93       	push	r29
    2d84:	cf 93       	push	r28
    2d86:	1f 93       	push	r17
    2d88:	0f 93       	push	r16
    2d8a:	ff 92       	push	r15
    2d8c:	ef 92       	push	r14
    2d8e:	df 92       	push	r13
    2d90:	7b 01       	movw	r14, r22
    2d92:	8c 01       	movw	r16, r24
    2d94:	68 94       	set
    2d96:	06 c0       	rjmp	.+12     	; 0x2da4 <__fp_powser+0x22>
    2d98:	da 2e       	mov	r13, r26
    2d9a:	ef 01       	movw	r28, r30
    2d9c:	0e 94 0c 16 	call	0x2c18	; 0x2c18 <__mulsf3x>
    2da0:	fe 01       	movw	r30, r28
    2da2:	e8 94       	clt
    2da4:	a5 91       	lpm	r26, Z+
    2da6:	25 91       	lpm	r18, Z+
    2da8:	35 91       	lpm	r19, Z+
    2daa:	45 91       	lpm	r20, Z+
    2dac:	55 91       	lpm	r21, Z+
    2dae:	a6 f3       	brts	.-24     	; 0x2d98 <__fp_powser+0x16>
    2db0:	ef 01       	movw	r28, r30
    2db2:	0e 94 e8 13 	call	0x27d0	; 0x27d0 <__addsf3x>
    2db6:	fe 01       	movw	r30, r28
    2db8:	97 01       	movw	r18, r14
    2dba:	a8 01       	movw	r20, r16
    2dbc:	da 94       	dec	r13
    2dbe:	69 f7       	brne	.-38     	; 0x2d9a <__fp_powser+0x18>
    2dc0:	df 90       	pop	r13
    2dc2:	ef 90       	pop	r14
    2dc4:	ff 90       	pop	r15
    2dc6:	0f 91       	pop	r16
    2dc8:	1f 91       	pop	r17
    2dca:	cf 91       	pop	r28
    2dcc:	df 91       	pop	r29
    2dce:	08 95       	ret

00002dd0 <__divmodhi4>:
    2dd0:	97 fb       	bst	r25, 7
    2dd2:	07 2e       	mov	r0, r23
    2dd4:	16 f4       	brtc	.+4      	; 0x2dda <__divmodhi4+0xa>
    2dd6:	00 94       	com	r0
    2dd8:	07 d0       	rcall	.+14     	; 0x2de8 <__divmodhi4_neg1>
    2dda:	77 fd       	sbrc	r23, 7
    2ddc:	09 d0       	rcall	.+18     	; 0x2df0 <__divmodhi4_neg2>
    2dde:	0e 94 fc 16 	call	0x2df8	; 0x2df8 <__udivmodhi4>
    2de2:	07 fc       	sbrc	r0, 7
    2de4:	05 d0       	rcall	.+10     	; 0x2df0 <__divmodhi4_neg2>
    2de6:	3e f4       	brtc	.+14     	; 0x2df6 <__divmodhi4_exit>

00002de8 <__divmodhi4_neg1>:
    2de8:	90 95       	com	r25
    2dea:	81 95       	neg	r24
    2dec:	9f 4f       	sbci	r25, 0xFF	; 255
    2dee:	08 95       	ret

00002df0 <__divmodhi4_neg2>:
    2df0:	70 95       	com	r23
    2df2:	61 95       	neg	r22
    2df4:	7f 4f       	sbci	r23, 0xFF	; 255

00002df6 <__divmodhi4_exit>:
    2df6:	08 95       	ret

00002df8 <__udivmodhi4>:
    2df8:	aa 1b       	sub	r26, r26
    2dfa:	bb 1b       	sub	r27, r27
    2dfc:	51 e1       	ldi	r21, 0x11	; 17
    2dfe:	07 c0       	rjmp	.+14     	; 0x2e0e <__udivmodhi4_ep>

00002e00 <__udivmodhi4_loop>:
    2e00:	aa 1f       	adc	r26, r26
    2e02:	bb 1f       	adc	r27, r27
    2e04:	a6 17       	cp	r26, r22
    2e06:	b7 07       	cpc	r27, r23
    2e08:	10 f0       	brcs	.+4      	; 0x2e0e <__udivmodhi4_ep>
    2e0a:	a6 1b       	sub	r26, r22
    2e0c:	b7 0b       	sbc	r27, r23

00002e0e <__udivmodhi4_ep>:
    2e0e:	88 1f       	adc	r24, r24
    2e10:	99 1f       	adc	r25, r25
    2e12:	5a 95       	dec	r21
    2e14:	a9 f7       	brne	.-22     	; 0x2e00 <__udivmodhi4_loop>
    2e16:	80 95       	com	r24
    2e18:	90 95       	com	r25
    2e1a:	bc 01       	movw	r22, r24
    2e1c:	cd 01       	movw	r24, r26
    2e1e:	08 95       	ret

00002e20 <sprintf>:
    2e20:	ae e0       	ldi	r26, 0x0E	; 14
    2e22:	b0 e0       	ldi	r27, 0x00	; 0
    2e24:	e6 e1       	ldi	r30, 0x16	; 22
    2e26:	f7 e1       	ldi	r31, 0x17	; 23
    2e28:	0c 94 d1 19 	jmp	0x33a2	; 0x33a2 <__prologue_saves__+0x1c>
    2e2c:	0d 89       	ldd	r16, Y+21	; 0x15
    2e2e:	1e 89       	ldd	r17, Y+22	; 0x16
    2e30:	86 e0       	ldi	r24, 0x06	; 6
    2e32:	8c 83       	std	Y+4, r24	; 0x04
    2e34:	1a 83       	std	Y+2, r17	; 0x02
    2e36:	09 83       	std	Y+1, r16	; 0x01
    2e38:	8f ef       	ldi	r24, 0xFF	; 255
    2e3a:	9f e7       	ldi	r25, 0x7F	; 127
    2e3c:	9e 83       	std	Y+6, r25	; 0x06
    2e3e:	8d 83       	std	Y+5, r24	; 0x05
    2e40:	ae 01       	movw	r20, r28
    2e42:	47 5e       	subi	r20, 0xE7	; 231
    2e44:	5f 4f       	sbci	r21, 0xFF	; 255
    2e46:	6f 89       	ldd	r22, Y+23	; 0x17
    2e48:	78 8d       	ldd	r23, Y+24	; 0x18
    2e4a:	ce 01       	movw	r24, r28
    2e4c:	01 96       	adiw	r24, 0x01	; 1
    2e4e:	0e 94 32 17 	call	0x2e64	; 0x2e64 <vfprintf>
    2e52:	ef 81       	ldd	r30, Y+7	; 0x07
    2e54:	f8 85       	ldd	r31, Y+8	; 0x08
    2e56:	e0 0f       	add	r30, r16
    2e58:	f1 1f       	adc	r31, r17
    2e5a:	10 82       	st	Z, r1
    2e5c:	2e 96       	adiw	r28, 0x0e	; 14
    2e5e:	e4 e0       	ldi	r30, 0x04	; 4
    2e60:	0c 94 ed 19 	jmp	0x33da	; 0x33da <__epilogue_restores__+0x1c>

00002e64 <vfprintf>:
    2e64:	ab e0       	ldi	r26, 0x0B	; 11
    2e66:	b0 e0       	ldi	r27, 0x00	; 0
    2e68:	e8 e3       	ldi	r30, 0x38	; 56
    2e6a:	f7 e1       	ldi	r31, 0x17	; 23
    2e6c:	0c 94 c3 19 	jmp	0x3386	; 0x3386 <__prologue_saves__>
    2e70:	6c 01       	movw	r12, r24
    2e72:	7b 01       	movw	r14, r22
    2e74:	8a 01       	movw	r16, r20
    2e76:	fc 01       	movw	r30, r24
    2e78:	17 82       	std	Z+7, r1	; 0x07
    2e7a:	16 82       	std	Z+6, r1	; 0x06
    2e7c:	83 81       	ldd	r24, Z+3	; 0x03
    2e7e:	81 ff       	sbrs	r24, 1
    2e80:	cc c1       	rjmp	.+920    	; 0x321a <vfprintf+0x3b6>
    2e82:	ce 01       	movw	r24, r28
    2e84:	01 96       	adiw	r24, 0x01	; 1
    2e86:	3c 01       	movw	r6, r24
    2e88:	f6 01       	movw	r30, r12
    2e8a:	93 81       	ldd	r25, Z+3	; 0x03
    2e8c:	f7 01       	movw	r30, r14
    2e8e:	93 fd       	sbrc	r25, 3
    2e90:	85 91       	lpm	r24, Z+
    2e92:	93 ff       	sbrs	r25, 3
    2e94:	81 91       	ld	r24, Z+
    2e96:	7f 01       	movw	r14, r30
    2e98:	88 23       	and	r24, r24
    2e9a:	09 f4       	brne	.+2      	; 0x2e9e <vfprintf+0x3a>
    2e9c:	ba c1       	rjmp	.+884    	; 0x3212 <vfprintf+0x3ae>
    2e9e:	85 32       	cpi	r24, 0x25	; 37
    2ea0:	39 f4       	brne	.+14     	; 0x2eb0 <vfprintf+0x4c>
    2ea2:	93 fd       	sbrc	r25, 3
    2ea4:	85 91       	lpm	r24, Z+
    2ea6:	93 ff       	sbrs	r25, 3
    2ea8:	81 91       	ld	r24, Z+
    2eaa:	7f 01       	movw	r14, r30
    2eac:	85 32       	cpi	r24, 0x25	; 37
    2eae:	29 f4       	brne	.+10     	; 0x2eba <vfprintf+0x56>
    2eb0:	b6 01       	movw	r22, r12
    2eb2:	90 e0       	ldi	r25, 0x00	; 0
    2eb4:	0e 94 29 19 	call	0x3252	; 0x3252 <fputc>
    2eb8:	e7 cf       	rjmp	.-50     	; 0x2e88 <vfprintf+0x24>
    2eba:	91 2c       	mov	r9, r1
    2ebc:	21 2c       	mov	r2, r1
    2ebe:	31 2c       	mov	r3, r1
    2ec0:	ff e1       	ldi	r31, 0x1F	; 31
    2ec2:	f3 15       	cp	r31, r3
    2ec4:	d8 f0       	brcs	.+54     	; 0x2efc <vfprintf+0x98>
    2ec6:	8b 32       	cpi	r24, 0x2B	; 43
    2ec8:	79 f0       	breq	.+30     	; 0x2ee8 <vfprintf+0x84>
    2eca:	38 f4       	brcc	.+14     	; 0x2eda <vfprintf+0x76>
    2ecc:	80 32       	cpi	r24, 0x20	; 32
    2ece:	79 f0       	breq	.+30     	; 0x2eee <vfprintf+0x8a>
    2ed0:	83 32       	cpi	r24, 0x23	; 35
    2ed2:	a1 f4       	brne	.+40     	; 0x2efc <vfprintf+0x98>
    2ed4:	23 2d       	mov	r18, r3
    2ed6:	20 61       	ori	r18, 0x10	; 16
    2ed8:	1d c0       	rjmp	.+58     	; 0x2f14 <vfprintf+0xb0>
    2eda:	8d 32       	cpi	r24, 0x2D	; 45
    2edc:	61 f0       	breq	.+24     	; 0x2ef6 <vfprintf+0x92>
    2ede:	80 33       	cpi	r24, 0x30	; 48
    2ee0:	69 f4       	brne	.+26     	; 0x2efc <vfprintf+0x98>
    2ee2:	23 2d       	mov	r18, r3
    2ee4:	21 60       	ori	r18, 0x01	; 1
    2ee6:	16 c0       	rjmp	.+44     	; 0x2f14 <vfprintf+0xb0>
    2ee8:	83 2d       	mov	r24, r3
    2eea:	82 60       	ori	r24, 0x02	; 2
    2eec:	38 2e       	mov	r3, r24
    2eee:	e3 2d       	mov	r30, r3
    2ef0:	e4 60       	ori	r30, 0x04	; 4
    2ef2:	3e 2e       	mov	r3, r30
    2ef4:	2a c0       	rjmp	.+84     	; 0x2f4a <vfprintf+0xe6>
    2ef6:	f3 2d       	mov	r31, r3
    2ef8:	f8 60       	ori	r31, 0x08	; 8
    2efa:	1d c0       	rjmp	.+58     	; 0x2f36 <vfprintf+0xd2>
    2efc:	37 fc       	sbrc	r3, 7
    2efe:	2d c0       	rjmp	.+90     	; 0x2f5a <vfprintf+0xf6>
    2f00:	20 ed       	ldi	r18, 0xD0	; 208
    2f02:	28 0f       	add	r18, r24
    2f04:	2a 30       	cpi	r18, 0x0A	; 10
    2f06:	40 f0       	brcs	.+16     	; 0x2f18 <vfprintf+0xb4>
    2f08:	8e 32       	cpi	r24, 0x2E	; 46
    2f0a:	b9 f4       	brne	.+46     	; 0x2f3a <vfprintf+0xd6>
    2f0c:	36 fc       	sbrc	r3, 6
    2f0e:	81 c1       	rjmp	.+770    	; 0x3212 <vfprintf+0x3ae>
    2f10:	23 2d       	mov	r18, r3
    2f12:	20 64       	ori	r18, 0x40	; 64
    2f14:	32 2e       	mov	r3, r18
    2f16:	19 c0       	rjmp	.+50     	; 0x2f4a <vfprintf+0xe6>
    2f18:	36 fe       	sbrs	r3, 6
    2f1a:	06 c0       	rjmp	.+12     	; 0x2f28 <vfprintf+0xc4>
    2f1c:	8a e0       	ldi	r24, 0x0A	; 10
    2f1e:	98 9e       	mul	r9, r24
    2f20:	20 0d       	add	r18, r0
    2f22:	11 24       	eor	r1, r1
    2f24:	92 2e       	mov	r9, r18
    2f26:	11 c0       	rjmp	.+34     	; 0x2f4a <vfprintf+0xe6>
    2f28:	ea e0       	ldi	r30, 0x0A	; 10
    2f2a:	2e 9e       	mul	r2, r30
    2f2c:	20 0d       	add	r18, r0
    2f2e:	11 24       	eor	r1, r1
    2f30:	22 2e       	mov	r2, r18
    2f32:	f3 2d       	mov	r31, r3
    2f34:	f0 62       	ori	r31, 0x20	; 32
    2f36:	3f 2e       	mov	r3, r31
    2f38:	08 c0       	rjmp	.+16     	; 0x2f4a <vfprintf+0xe6>
    2f3a:	8c 36       	cpi	r24, 0x6C	; 108
    2f3c:	21 f4       	brne	.+8      	; 0x2f46 <vfprintf+0xe2>
    2f3e:	83 2d       	mov	r24, r3
    2f40:	80 68       	ori	r24, 0x80	; 128
    2f42:	38 2e       	mov	r3, r24
    2f44:	02 c0       	rjmp	.+4      	; 0x2f4a <vfprintf+0xe6>
    2f46:	88 36       	cpi	r24, 0x68	; 104
    2f48:	41 f4       	brne	.+16     	; 0x2f5a <vfprintf+0xf6>
    2f4a:	f7 01       	movw	r30, r14
    2f4c:	93 fd       	sbrc	r25, 3
    2f4e:	85 91       	lpm	r24, Z+
    2f50:	93 ff       	sbrs	r25, 3
    2f52:	81 91       	ld	r24, Z+
    2f54:	7f 01       	movw	r14, r30
    2f56:	81 11       	cpse	r24, r1
    2f58:	b3 cf       	rjmp	.-154    	; 0x2ec0 <vfprintf+0x5c>
    2f5a:	98 2f       	mov	r25, r24
    2f5c:	9f 7d       	andi	r25, 0xDF	; 223
    2f5e:	95 54       	subi	r25, 0x45	; 69
    2f60:	93 30       	cpi	r25, 0x03	; 3
    2f62:	28 f4       	brcc	.+10     	; 0x2f6e <vfprintf+0x10a>
    2f64:	0c 5f       	subi	r16, 0xFC	; 252
    2f66:	1f 4f       	sbci	r17, 0xFF	; 255
    2f68:	9f e3       	ldi	r25, 0x3F	; 63
    2f6a:	99 83       	std	Y+1, r25	; 0x01
    2f6c:	0d c0       	rjmp	.+26     	; 0x2f88 <vfprintf+0x124>
    2f6e:	83 36       	cpi	r24, 0x63	; 99
    2f70:	31 f0       	breq	.+12     	; 0x2f7e <vfprintf+0x11a>
    2f72:	83 37       	cpi	r24, 0x73	; 115
    2f74:	71 f0       	breq	.+28     	; 0x2f92 <vfprintf+0x12e>
    2f76:	83 35       	cpi	r24, 0x53	; 83
    2f78:	09 f0       	breq	.+2      	; 0x2f7c <vfprintf+0x118>
    2f7a:	59 c0       	rjmp	.+178    	; 0x302e <vfprintf+0x1ca>
    2f7c:	21 c0       	rjmp	.+66     	; 0x2fc0 <vfprintf+0x15c>
    2f7e:	f8 01       	movw	r30, r16
    2f80:	80 81       	ld	r24, Z
    2f82:	89 83       	std	Y+1, r24	; 0x01
    2f84:	0e 5f       	subi	r16, 0xFE	; 254
    2f86:	1f 4f       	sbci	r17, 0xFF	; 255
    2f88:	88 24       	eor	r8, r8
    2f8a:	83 94       	inc	r8
    2f8c:	91 2c       	mov	r9, r1
    2f8e:	53 01       	movw	r10, r6
    2f90:	13 c0       	rjmp	.+38     	; 0x2fb8 <vfprintf+0x154>
    2f92:	28 01       	movw	r4, r16
    2f94:	f2 e0       	ldi	r31, 0x02	; 2
    2f96:	4f 0e       	add	r4, r31
    2f98:	51 1c       	adc	r5, r1
    2f9a:	f8 01       	movw	r30, r16
    2f9c:	a0 80       	ld	r10, Z
    2f9e:	b1 80       	ldd	r11, Z+1	; 0x01
    2fa0:	36 fe       	sbrs	r3, 6
    2fa2:	03 c0       	rjmp	.+6      	; 0x2faa <vfprintf+0x146>
    2fa4:	69 2d       	mov	r22, r9
    2fa6:	70 e0       	ldi	r23, 0x00	; 0
    2fa8:	02 c0       	rjmp	.+4      	; 0x2fae <vfprintf+0x14a>
    2faa:	6f ef       	ldi	r22, 0xFF	; 255
    2fac:	7f ef       	ldi	r23, 0xFF	; 255
    2fae:	c5 01       	movw	r24, r10
    2fb0:	0e 94 1e 19 	call	0x323c	; 0x323c <strnlen>
    2fb4:	4c 01       	movw	r8, r24
    2fb6:	82 01       	movw	r16, r4
    2fb8:	f3 2d       	mov	r31, r3
    2fba:	ff 77       	andi	r31, 0x7F	; 127
    2fbc:	3f 2e       	mov	r3, r31
    2fbe:	16 c0       	rjmp	.+44     	; 0x2fec <vfprintf+0x188>
    2fc0:	28 01       	movw	r4, r16
    2fc2:	22 e0       	ldi	r18, 0x02	; 2
    2fc4:	42 0e       	add	r4, r18
    2fc6:	51 1c       	adc	r5, r1
    2fc8:	f8 01       	movw	r30, r16
    2fca:	a0 80       	ld	r10, Z
    2fcc:	b1 80       	ldd	r11, Z+1	; 0x01
    2fce:	36 fe       	sbrs	r3, 6
    2fd0:	03 c0       	rjmp	.+6      	; 0x2fd8 <vfprintf+0x174>
    2fd2:	69 2d       	mov	r22, r9
    2fd4:	70 e0       	ldi	r23, 0x00	; 0
    2fd6:	02 c0       	rjmp	.+4      	; 0x2fdc <vfprintf+0x178>
    2fd8:	6f ef       	ldi	r22, 0xFF	; 255
    2fda:	7f ef       	ldi	r23, 0xFF	; 255
    2fdc:	c5 01       	movw	r24, r10
    2fde:	0e 94 13 19 	call	0x3226	; 0x3226 <strnlen_P>
    2fe2:	4c 01       	movw	r8, r24
    2fe4:	f3 2d       	mov	r31, r3
    2fe6:	f0 68       	ori	r31, 0x80	; 128
    2fe8:	3f 2e       	mov	r3, r31
    2fea:	82 01       	movw	r16, r4
    2fec:	33 fc       	sbrc	r3, 3
    2fee:	1b c0       	rjmp	.+54     	; 0x3026 <vfprintf+0x1c2>
    2ff0:	82 2d       	mov	r24, r2
    2ff2:	90 e0       	ldi	r25, 0x00	; 0
    2ff4:	88 16       	cp	r8, r24
    2ff6:	99 06       	cpc	r9, r25
    2ff8:	b0 f4       	brcc	.+44     	; 0x3026 <vfprintf+0x1c2>
    2ffa:	b6 01       	movw	r22, r12
    2ffc:	80 e2       	ldi	r24, 0x20	; 32
    2ffe:	90 e0       	ldi	r25, 0x00	; 0
    3000:	0e 94 29 19 	call	0x3252	; 0x3252 <fputc>
    3004:	2a 94       	dec	r2
    3006:	f4 cf       	rjmp	.-24     	; 0x2ff0 <vfprintf+0x18c>
    3008:	f5 01       	movw	r30, r10
    300a:	37 fc       	sbrc	r3, 7
    300c:	85 91       	lpm	r24, Z+
    300e:	37 fe       	sbrs	r3, 7
    3010:	81 91       	ld	r24, Z+
    3012:	5f 01       	movw	r10, r30
    3014:	b6 01       	movw	r22, r12
    3016:	90 e0       	ldi	r25, 0x00	; 0
    3018:	0e 94 29 19 	call	0x3252	; 0x3252 <fputc>
    301c:	21 10       	cpse	r2, r1
    301e:	2a 94       	dec	r2
    3020:	21 e0       	ldi	r18, 0x01	; 1
    3022:	82 1a       	sub	r8, r18
    3024:	91 08       	sbc	r9, r1
    3026:	81 14       	cp	r8, r1
    3028:	91 04       	cpc	r9, r1
    302a:	71 f7       	brne	.-36     	; 0x3008 <vfprintf+0x1a4>
    302c:	e8 c0       	rjmp	.+464    	; 0x31fe <vfprintf+0x39a>
    302e:	84 36       	cpi	r24, 0x64	; 100
    3030:	11 f0       	breq	.+4      	; 0x3036 <vfprintf+0x1d2>
    3032:	89 36       	cpi	r24, 0x69	; 105
    3034:	41 f5       	brne	.+80     	; 0x3086 <vfprintf+0x222>
    3036:	f8 01       	movw	r30, r16
    3038:	37 fe       	sbrs	r3, 7
    303a:	07 c0       	rjmp	.+14     	; 0x304a <vfprintf+0x1e6>
    303c:	60 81       	ld	r22, Z
    303e:	71 81       	ldd	r23, Z+1	; 0x01
    3040:	82 81       	ldd	r24, Z+2	; 0x02
    3042:	93 81       	ldd	r25, Z+3	; 0x03
    3044:	0c 5f       	subi	r16, 0xFC	; 252
    3046:	1f 4f       	sbci	r17, 0xFF	; 255
    3048:	08 c0       	rjmp	.+16     	; 0x305a <vfprintf+0x1f6>
    304a:	60 81       	ld	r22, Z
    304c:	71 81       	ldd	r23, Z+1	; 0x01
    304e:	07 2e       	mov	r0, r23
    3050:	00 0c       	add	r0, r0
    3052:	88 0b       	sbc	r24, r24
    3054:	99 0b       	sbc	r25, r25
    3056:	0e 5f       	subi	r16, 0xFE	; 254
    3058:	1f 4f       	sbci	r17, 0xFF	; 255
    305a:	f3 2d       	mov	r31, r3
    305c:	ff 76       	andi	r31, 0x6F	; 111
    305e:	3f 2e       	mov	r3, r31
    3060:	97 ff       	sbrs	r25, 7
    3062:	09 c0       	rjmp	.+18     	; 0x3076 <vfprintf+0x212>
    3064:	90 95       	com	r25
    3066:	80 95       	com	r24
    3068:	70 95       	com	r23
    306a:	61 95       	neg	r22
    306c:	7f 4f       	sbci	r23, 0xFF	; 255
    306e:	8f 4f       	sbci	r24, 0xFF	; 255
    3070:	9f 4f       	sbci	r25, 0xFF	; 255
    3072:	f0 68       	ori	r31, 0x80	; 128
    3074:	3f 2e       	mov	r3, r31
    3076:	2a e0       	ldi	r18, 0x0A	; 10
    3078:	30 e0       	ldi	r19, 0x00	; 0
    307a:	a3 01       	movw	r20, r6
    307c:	0e 94 65 19 	call	0x32ca	; 0x32ca <__ultoa_invert>
    3080:	88 2e       	mov	r8, r24
    3082:	86 18       	sub	r8, r6
    3084:	45 c0       	rjmp	.+138    	; 0x3110 <vfprintf+0x2ac>
    3086:	85 37       	cpi	r24, 0x75	; 117
    3088:	31 f4       	brne	.+12     	; 0x3096 <vfprintf+0x232>
    308a:	23 2d       	mov	r18, r3
    308c:	2f 7e       	andi	r18, 0xEF	; 239
    308e:	b2 2e       	mov	r11, r18
    3090:	2a e0       	ldi	r18, 0x0A	; 10
    3092:	30 e0       	ldi	r19, 0x00	; 0
    3094:	25 c0       	rjmp	.+74     	; 0x30e0 <vfprintf+0x27c>
    3096:	93 2d       	mov	r25, r3
    3098:	99 7f       	andi	r25, 0xF9	; 249
    309a:	b9 2e       	mov	r11, r25
    309c:	8f 36       	cpi	r24, 0x6F	; 111
    309e:	c1 f0       	breq	.+48     	; 0x30d0 <vfprintf+0x26c>
    30a0:	18 f4       	brcc	.+6      	; 0x30a8 <vfprintf+0x244>
    30a2:	88 35       	cpi	r24, 0x58	; 88
    30a4:	79 f0       	breq	.+30     	; 0x30c4 <vfprintf+0x260>
    30a6:	b5 c0       	rjmp	.+362    	; 0x3212 <vfprintf+0x3ae>
    30a8:	80 37       	cpi	r24, 0x70	; 112
    30aa:	19 f0       	breq	.+6      	; 0x30b2 <vfprintf+0x24e>
    30ac:	88 37       	cpi	r24, 0x78	; 120
    30ae:	21 f0       	breq	.+8      	; 0x30b8 <vfprintf+0x254>
    30b0:	b0 c0       	rjmp	.+352    	; 0x3212 <vfprintf+0x3ae>
    30b2:	e9 2f       	mov	r30, r25
    30b4:	e0 61       	ori	r30, 0x10	; 16
    30b6:	be 2e       	mov	r11, r30
    30b8:	b4 fe       	sbrs	r11, 4
    30ba:	0d c0       	rjmp	.+26     	; 0x30d6 <vfprintf+0x272>
    30bc:	fb 2d       	mov	r31, r11
    30be:	f4 60       	ori	r31, 0x04	; 4
    30c0:	bf 2e       	mov	r11, r31
    30c2:	09 c0       	rjmp	.+18     	; 0x30d6 <vfprintf+0x272>
    30c4:	34 fe       	sbrs	r3, 4
    30c6:	0a c0       	rjmp	.+20     	; 0x30dc <vfprintf+0x278>
    30c8:	29 2f       	mov	r18, r25
    30ca:	26 60       	ori	r18, 0x06	; 6
    30cc:	b2 2e       	mov	r11, r18
    30ce:	06 c0       	rjmp	.+12     	; 0x30dc <vfprintf+0x278>
    30d0:	28 e0       	ldi	r18, 0x08	; 8
    30d2:	30 e0       	ldi	r19, 0x00	; 0
    30d4:	05 c0       	rjmp	.+10     	; 0x30e0 <vfprintf+0x27c>
    30d6:	20 e1       	ldi	r18, 0x10	; 16
    30d8:	30 e0       	ldi	r19, 0x00	; 0
    30da:	02 c0       	rjmp	.+4      	; 0x30e0 <vfprintf+0x27c>
    30dc:	20 e1       	ldi	r18, 0x10	; 16
    30de:	32 e0       	ldi	r19, 0x02	; 2
    30e0:	f8 01       	movw	r30, r16
    30e2:	b7 fe       	sbrs	r11, 7
    30e4:	07 c0       	rjmp	.+14     	; 0x30f4 <vfprintf+0x290>
    30e6:	60 81       	ld	r22, Z
    30e8:	71 81       	ldd	r23, Z+1	; 0x01
    30ea:	82 81       	ldd	r24, Z+2	; 0x02
    30ec:	93 81       	ldd	r25, Z+3	; 0x03
    30ee:	0c 5f       	subi	r16, 0xFC	; 252
    30f0:	1f 4f       	sbci	r17, 0xFF	; 255
    30f2:	06 c0       	rjmp	.+12     	; 0x3100 <vfprintf+0x29c>
    30f4:	60 81       	ld	r22, Z
    30f6:	71 81       	ldd	r23, Z+1	; 0x01
    30f8:	80 e0       	ldi	r24, 0x00	; 0
    30fa:	90 e0       	ldi	r25, 0x00	; 0
    30fc:	0e 5f       	subi	r16, 0xFE	; 254
    30fe:	1f 4f       	sbci	r17, 0xFF	; 255
    3100:	a3 01       	movw	r20, r6
    3102:	0e 94 65 19 	call	0x32ca	; 0x32ca <__ultoa_invert>
    3106:	88 2e       	mov	r8, r24
    3108:	86 18       	sub	r8, r6
    310a:	fb 2d       	mov	r31, r11
    310c:	ff 77       	andi	r31, 0x7F	; 127
    310e:	3f 2e       	mov	r3, r31
    3110:	36 fe       	sbrs	r3, 6
    3112:	0d c0       	rjmp	.+26     	; 0x312e <vfprintf+0x2ca>
    3114:	23 2d       	mov	r18, r3
    3116:	2e 7f       	andi	r18, 0xFE	; 254
    3118:	a2 2e       	mov	r10, r18
    311a:	89 14       	cp	r8, r9
    311c:	58 f4       	brcc	.+22     	; 0x3134 <vfprintf+0x2d0>
    311e:	34 fe       	sbrs	r3, 4
    3120:	0b c0       	rjmp	.+22     	; 0x3138 <vfprintf+0x2d4>
    3122:	32 fc       	sbrc	r3, 2
    3124:	09 c0       	rjmp	.+18     	; 0x3138 <vfprintf+0x2d4>
    3126:	83 2d       	mov	r24, r3
    3128:	8e 7e       	andi	r24, 0xEE	; 238
    312a:	a8 2e       	mov	r10, r24
    312c:	05 c0       	rjmp	.+10     	; 0x3138 <vfprintf+0x2d4>
    312e:	b8 2c       	mov	r11, r8
    3130:	a3 2c       	mov	r10, r3
    3132:	03 c0       	rjmp	.+6      	; 0x313a <vfprintf+0x2d6>
    3134:	b8 2c       	mov	r11, r8
    3136:	01 c0       	rjmp	.+2      	; 0x313a <vfprintf+0x2d6>
    3138:	b9 2c       	mov	r11, r9
    313a:	a4 fe       	sbrs	r10, 4
    313c:	0f c0       	rjmp	.+30     	; 0x315c <vfprintf+0x2f8>
    313e:	fe 01       	movw	r30, r28
    3140:	e8 0d       	add	r30, r8
    3142:	f1 1d       	adc	r31, r1
    3144:	80 81       	ld	r24, Z
    3146:	80 33       	cpi	r24, 0x30	; 48
    3148:	21 f4       	brne	.+8      	; 0x3152 <vfprintf+0x2ee>
    314a:	9a 2d       	mov	r25, r10
    314c:	99 7e       	andi	r25, 0xE9	; 233
    314e:	a9 2e       	mov	r10, r25
    3150:	09 c0       	rjmp	.+18     	; 0x3164 <vfprintf+0x300>
    3152:	a2 fe       	sbrs	r10, 2
    3154:	06 c0       	rjmp	.+12     	; 0x3162 <vfprintf+0x2fe>
    3156:	b3 94       	inc	r11
    3158:	b3 94       	inc	r11
    315a:	04 c0       	rjmp	.+8      	; 0x3164 <vfprintf+0x300>
    315c:	8a 2d       	mov	r24, r10
    315e:	86 78       	andi	r24, 0x86	; 134
    3160:	09 f0       	breq	.+2      	; 0x3164 <vfprintf+0x300>
    3162:	b3 94       	inc	r11
    3164:	a3 fc       	sbrc	r10, 3
    3166:	11 c0       	rjmp	.+34     	; 0x318a <vfprintf+0x326>
    3168:	a0 fe       	sbrs	r10, 0
    316a:	06 c0       	rjmp	.+12     	; 0x3178 <vfprintf+0x314>
    316c:	b2 14       	cp	r11, r2
    316e:	88 f4       	brcc	.+34     	; 0x3192 <vfprintf+0x32e>
    3170:	28 0c       	add	r2, r8
    3172:	92 2c       	mov	r9, r2
    3174:	9b 18       	sub	r9, r11
    3176:	0e c0       	rjmp	.+28     	; 0x3194 <vfprintf+0x330>
    3178:	b2 14       	cp	r11, r2
    317a:	60 f4       	brcc	.+24     	; 0x3194 <vfprintf+0x330>
    317c:	b6 01       	movw	r22, r12
    317e:	80 e2       	ldi	r24, 0x20	; 32
    3180:	90 e0       	ldi	r25, 0x00	; 0
    3182:	0e 94 29 19 	call	0x3252	; 0x3252 <fputc>
    3186:	b3 94       	inc	r11
    3188:	f7 cf       	rjmp	.-18     	; 0x3178 <vfprintf+0x314>
    318a:	b2 14       	cp	r11, r2
    318c:	18 f4       	brcc	.+6      	; 0x3194 <vfprintf+0x330>
    318e:	2b 18       	sub	r2, r11
    3190:	02 c0       	rjmp	.+4      	; 0x3196 <vfprintf+0x332>
    3192:	98 2c       	mov	r9, r8
    3194:	21 2c       	mov	r2, r1
    3196:	a4 fe       	sbrs	r10, 4
    3198:	10 c0       	rjmp	.+32     	; 0x31ba <vfprintf+0x356>
    319a:	b6 01       	movw	r22, r12
    319c:	80 e3       	ldi	r24, 0x30	; 48
    319e:	90 e0       	ldi	r25, 0x00	; 0
    31a0:	0e 94 29 19 	call	0x3252	; 0x3252 <fputc>
    31a4:	a2 fe       	sbrs	r10, 2
    31a6:	17 c0       	rjmp	.+46     	; 0x31d6 <vfprintf+0x372>
    31a8:	a1 fc       	sbrc	r10, 1
    31aa:	03 c0       	rjmp	.+6      	; 0x31b2 <vfprintf+0x34e>
    31ac:	88 e7       	ldi	r24, 0x78	; 120
    31ae:	90 e0       	ldi	r25, 0x00	; 0
    31b0:	02 c0       	rjmp	.+4      	; 0x31b6 <vfprintf+0x352>
    31b2:	88 e5       	ldi	r24, 0x58	; 88
    31b4:	90 e0       	ldi	r25, 0x00	; 0
    31b6:	b6 01       	movw	r22, r12
    31b8:	0c c0       	rjmp	.+24     	; 0x31d2 <vfprintf+0x36e>
    31ba:	8a 2d       	mov	r24, r10
    31bc:	86 78       	andi	r24, 0x86	; 134
    31be:	59 f0       	breq	.+22     	; 0x31d6 <vfprintf+0x372>
    31c0:	a1 fe       	sbrs	r10, 1
    31c2:	02 c0       	rjmp	.+4      	; 0x31c8 <vfprintf+0x364>
    31c4:	8b e2       	ldi	r24, 0x2B	; 43
    31c6:	01 c0       	rjmp	.+2      	; 0x31ca <vfprintf+0x366>
    31c8:	80 e2       	ldi	r24, 0x20	; 32
    31ca:	a7 fc       	sbrc	r10, 7
    31cc:	8d e2       	ldi	r24, 0x2D	; 45
    31ce:	b6 01       	movw	r22, r12
    31d0:	90 e0       	ldi	r25, 0x00	; 0
    31d2:	0e 94 29 19 	call	0x3252	; 0x3252 <fputc>
    31d6:	89 14       	cp	r8, r9
    31d8:	38 f4       	brcc	.+14     	; 0x31e8 <vfprintf+0x384>
    31da:	b6 01       	movw	r22, r12
    31dc:	80 e3       	ldi	r24, 0x30	; 48
    31de:	90 e0       	ldi	r25, 0x00	; 0
    31e0:	0e 94 29 19 	call	0x3252	; 0x3252 <fputc>
    31e4:	9a 94       	dec	r9
    31e6:	f7 cf       	rjmp	.-18     	; 0x31d6 <vfprintf+0x372>
    31e8:	8a 94       	dec	r8
    31ea:	f3 01       	movw	r30, r6
    31ec:	e8 0d       	add	r30, r8
    31ee:	f1 1d       	adc	r31, r1
    31f0:	80 81       	ld	r24, Z
    31f2:	b6 01       	movw	r22, r12
    31f4:	90 e0       	ldi	r25, 0x00	; 0
    31f6:	0e 94 29 19 	call	0x3252	; 0x3252 <fputc>
    31fa:	81 10       	cpse	r8, r1
    31fc:	f5 cf       	rjmp	.-22     	; 0x31e8 <vfprintf+0x384>
    31fe:	22 20       	and	r2, r2
    3200:	09 f4       	brne	.+2      	; 0x3204 <vfprintf+0x3a0>
    3202:	42 ce       	rjmp	.-892    	; 0x2e88 <vfprintf+0x24>
    3204:	b6 01       	movw	r22, r12
    3206:	80 e2       	ldi	r24, 0x20	; 32
    3208:	90 e0       	ldi	r25, 0x00	; 0
    320a:	0e 94 29 19 	call	0x3252	; 0x3252 <fputc>
    320e:	2a 94       	dec	r2
    3210:	f6 cf       	rjmp	.-20     	; 0x31fe <vfprintf+0x39a>
    3212:	f6 01       	movw	r30, r12
    3214:	86 81       	ldd	r24, Z+6	; 0x06
    3216:	97 81       	ldd	r25, Z+7	; 0x07
    3218:	02 c0       	rjmp	.+4      	; 0x321e <vfprintf+0x3ba>
    321a:	8f ef       	ldi	r24, 0xFF	; 255
    321c:	9f ef       	ldi	r25, 0xFF	; 255
    321e:	2b 96       	adiw	r28, 0x0b	; 11
    3220:	e2 e1       	ldi	r30, 0x12	; 18
    3222:	0c 94 df 19 	jmp	0x33be	; 0x33be <__epilogue_restores__>

00003226 <strnlen_P>:
    3226:	fc 01       	movw	r30, r24
    3228:	05 90       	lpm	r0, Z+
    322a:	61 50       	subi	r22, 0x01	; 1
    322c:	70 40       	sbci	r23, 0x00	; 0
    322e:	01 10       	cpse	r0, r1
    3230:	d8 f7       	brcc	.-10     	; 0x3228 <strnlen_P+0x2>
    3232:	80 95       	com	r24
    3234:	90 95       	com	r25
    3236:	8e 0f       	add	r24, r30
    3238:	9f 1f       	adc	r25, r31
    323a:	08 95       	ret

0000323c <strnlen>:
    323c:	fc 01       	movw	r30, r24
    323e:	61 50       	subi	r22, 0x01	; 1
    3240:	70 40       	sbci	r23, 0x00	; 0
    3242:	01 90       	ld	r0, Z+
    3244:	01 10       	cpse	r0, r1
    3246:	d8 f7       	brcc	.-10     	; 0x323e <strnlen+0x2>
    3248:	80 95       	com	r24
    324a:	90 95       	com	r25
    324c:	8e 0f       	add	r24, r30
    324e:	9f 1f       	adc	r25, r31
    3250:	08 95       	ret

00003252 <fputc>:
    3252:	0f 93       	push	r16
    3254:	1f 93       	push	r17
    3256:	cf 93       	push	r28
    3258:	df 93       	push	r29
    325a:	fb 01       	movw	r30, r22
    325c:	23 81       	ldd	r18, Z+3	; 0x03
    325e:	21 fd       	sbrc	r18, 1
    3260:	03 c0       	rjmp	.+6      	; 0x3268 <fputc+0x16>
    3262:	8f ef       	ldi	r24, 0xFF	; 255
    3264:	9f ef       	ldi	r25, 0xFF	; 255
    3266:	2c c0       	rjmp	.+88     	; 0x32c0 <fputc+0x6e>
    3268:	22 ff       	sbrs	r18, 2
    326a:	16 c0       	rjmp	.+44     	; 0x3298 <fputc+0x46>
    326c:	46 81       	ldd	r20, Z+6	; 0x06
    326e:	57 81       	ldd	r21, Z+7	; 0x07
    3270:	24 81       	ldd	r18, Z+4	; 0x04
    3272:	35 81       	ldd	r19, Z+5	; 0x05
    3274:	42 17       	cp	r20, r18
    3276:	53 07       	cpc	r21, r19
    3278:	44 f4       	brge	.+16     	; 0x328a <fputc+0x38>
    327a:	a0 81       	ld	r26, Z
    327c:	b1 81       	ldd	r27, Z+1	; 0x01
    327e:	9d 01       	movw	r18, r26
    3280:	2f 5f       	subi	r18, 0xFF	; 255
    3282:	3f 4f       	sbci	r19, 0xFF	; 255
    3284:	31 83       	std	Z+1, r19	; 0x01
    3286:	20 83       	st	Z, r18
    3288:	8c 93       	st	X, r24
    328a:	26 81       	ldd	r18, Z+6	; 0x06
    328c:	37 81       	ldd	r19, Z+7	; 0x07
    328e:	2f 5f       	subi	r18, 0xFF	; 255
    3290:	3f 4f       	sbci	r19, 0xFF	; 255
    3292:	37 83       	std	Z+7, r19	; 0x07
    3294:	26 83       	std	Z+6, r18	; 0x06
    3296:	14 c0       	rjmp	.+40     	; 0x32c0 <fputc+0x6e>
    3298:	8b 01       	movw	r16, r22
    329a:	ec 01       	movw	r28, r24
    329c:	fb 01       	movw	r30, r22
    329e:	00 84       	ldd	r0, Z+8	; 0x08
    32a0:	f1 85       	ldd	r31, Z+9	; 0x09
    32a2:	e0 2d       	mov	r30, r0
    32a4:	09 95       	icall
    32a6:	89 2b       	or	r24, r25
    32a8:	e1 f6       	brne	.-72     	; 0x3262 <fputc+0x10>
    32aa:	d8 01       	movw	r26, r16
    32ac:	16 96       	adiw	r26, 0x06	; 6
    32ae:	8d 91       	ld	r24, X+
    32b0:	9c 91       	ld	r25, X
    32b2:	17 97       	sbiw	r26, 0x07	; 7
    32b4:	01 96       	adiw	r24, 0x01	; 1
    32b6:	17 96       	adiw	r26, 0x07	; 7
    32b8:	9c 93       	st	X, r25
    32ba:	8e 93       	st	-X, r24
    32bc:	16 97       	sbiw	r26, 0x06	; 6
    32be:	ce 01       	movw	r24, r28
    32c0:	df 91       	pop	r29
    32c2:	cf 91       	pop	r28
    32c4:	1f 91       	pop	r17
    32c6:	0f 91       	pop	r16
    32c8:	08 95       	ret

000032ca <__ultoa_invert>:
    32ca:	fa 01       	movw	r30, r20
    32cc:	aa 27       	eor	r26, r26
    32ce:	28 30       	cpi	r18, 0x08	; 8
    32d0:	51 f1       	breq	.+84     	; 0x3326 <__ultoa_invert+0x5c>
    32d2:	20 31       	cpi	r18, 0x10	; 16
    32d4:	81 f1       	breq	.+96     	; 0x3336 <__ultoa_invert+0x6c>
    32d6:	e8 94       	clt
    32d8:	6f 93       	push	r22
    32da:	6e 7f       	andi	r22, 0xFE	; 254
    32dc:	6e 5f       	subi	r22, 0xFE	; 254
    32de:	7f 4f       	sbci	r23, 0xFF	; 255
    32e0:	8f 4f       	sbci	r24, 0xFF	; 255
    32e2:	9f 4f       	sbci	r25, 0xFF	; 255
    32e4:	af 4f       	sbci	r26, 0xFF	; 255
    32e6:	b1 e0       	ldi	r27, 0x01	; 1
    32e8:	3e d0       	rcall	.+124    	; 0x3366 <__ultoa_invert+0x9c>
    32ea:	b4 e0       	ldi	r27, 0x04	; 4
    32ec:	3c d0       	rcall	.+120    	; 0x3366 <__ultoa_invert+0x9c>
    32ee:	67 0f       	add	r22, r23
    32f0:	78 1f       	adc	r23, r24
    32f2:	89 1f       	adc	r24, r25
    32f4:	9a 1f       	adc	r25, r26
    32f6:	a1 1d       	adc	r26, r1
    32f8:	68 0f       	add	r22, r24
    32fa:	79 1f       	adc	r23, r25
    32fc:	8a 1f       	adc	r24, r26
    32fe:	91 1d       	adc	r25, r1
    3300:	a1 1d       	adc	r26, r1
    3302:	6a 0f       	add	r22, r26
    3304:	71 1d       	adc	r23, r1
    3306:	81 1d       	adc	r24, r1
    3308:	91 1d       	adc	r25, r1
    330a:	a1 1d       	adc	r26, r1
    330c:	20 d0       	rcall	.+64     	; 0x334e <__ultoa_invert+0x84>
    330e:	09 f4       	brne	.+2      	; 0x3312 <__ultoa_invert+0x48>
    3310:	68 94       	set
    3312:	3f 91       	pop	r19
    3314:	2a e0       	ldi	r18, 0x0A	; 10
    3316:	26 9f       	mul	r18, r22
    3318:	11 24       	eor	r1, r1
    331a:	30 19       	sub	r19, r0
    331c:	30 5d       	subi	r19, 0xD0	; 208
    331e:	31 93       	st	Z+, r19
    3320:	de f6       	brtc	.-74     	; 0x32d8 <__ultoa_invert+0xe>
    3322:	cf 01       	movw	r24, r30
    3324:	08 95       	ret
    3326:	46 2f       	mov	r20, r22
    3328:	47 70       	andi	r20, 0x07	; 7
    332a:	40 5d       	subi	r20, 0xD0	; 208
    332c:	41 93       	st	Z+, r20
    332e:	b3 e0       	ldi	r27, 0x03	; 3
    3330:	0f d0       	rcall	.+30     	; 0x3350 <__ultoa_invert+0x86>
    3332:	c9 f7       	brne	.-14     	; 0x3326 <__ultoa_invert+0x5c>
    3334:	f6 cf       	rjmp	.-20     	; 0x3322 <__ultoa_invert+0x58>
    3336:	46 2f       	mov	r20, r22
    3338:	4f 70       	andi	r20, 0x0F	; 15
    333a:	40 5d       	subi	r20, 0xD0	; 208
    333c:	4a 33       	cpi	r20, 0x3A	; 58
    333e:	18 f0       	brcs	.+6      	; 0x3346 <__ultoa_invert+0x7c>
    3340:	49 5d       	subi	r20, 0xD9	; 217
    3342:	31 fd       	sbrc	r19, 1
    3344:	40 52       	subi	r20, 0x20	; 32
    3346:	41 93       	st	Z+, r20
    3348:	02 d0       	rcall	.+4      	; 0x334e <__ultoa_invert+0x84>
    334a:	a9 f7       	brne	.-22     	; 0x3336 <__ultoa_invert+0x6c>
    334c:	ea cf       	rjmp	.-44     	; 0x3322 <__ultoa_invert+0x58>
    334e:	b4 e0       	ldi	r27, 0x04	; 4
    3350:	a6 95       	lsr	r26
    3352:	97 95       	ror	r25
    3354:	87 95       	ror	r24
    3356:	77 95       	ror	r23
    3358:	67 95       	ror	r22
    335a:	ba 95       	dec	r27
    335c:	c9 f7       	brne	.-14     	; 0x3350 <__ultoa_invert+0x86>
    335e:	00 97       	sbiw	r24, 0x00	; 0
    3360:	61 05       	cpc	r22, r1
    3362:	71 05       	cpc	r23, r1
    3364:	08 95       	ret
    3366:	9b 01       	movw	r18, r22
    3368:	ac 01       	movw	r20, r24
    336a:	0a 2e       	mov	r0, r26
    336c:	06 94       	lsr	r0
    336e:	57 95       	ror	r21
    3370:	47 95       	ror	r20
    3372:	37 95       	ror	r19
    3374:	27 95       	ror	r18
    3376:	ba 95       	dec	r27
    3378:	c9 f7       	brne	.-14     	; 0x336c <__ultoa_invert+0xa2>
    337a:	62 0f       	add	r22, r18
    337c:	73 1f       	adc	r23, r19
    337e:	84 1f       	adc	r24, r20
    3380:	95 1f       	adc	r25, r21
    3382:	a0 1d       	adc	r26, r0
    3384:	08 95       	ret

00003386 <__prologue_saves__>:
    3386:	2f 92       	push	r2
    3388:	3f 92       	push	r3
    338a:	4f 92       	push	r4
    338c:	5f 92       	push	r5
    338e:	6f 92       	push	r6
    3390:	7f 92       	push	r7
    3392:	8f 92       	push	r8
    3394:	9f 92       	push	r9
    3396:	af 92       	push	r10
    3398:	bf 92       	push	r11
    339a:	cf 92       	push	r12
    339c:	df 92       	push	r13
    339e:	ef 92       	push	r14
    33a0:	ff 92       	push	r15
    33a2:	0f 93       	push	r16
    33a4:	1f 93       	push	r17
    33a6:	cf 93       	push	r28
    33a8:	df 93       	push	r29
    33aa:	cd b7       	in	r28, 0x3d	; 61
    33ac:	de b7       	in	r29, 0x3e	; 62
    33ae:	ca 1b       	sub	r28, r26
    33b0:	db 0b       	sbc	r29, r27
    33b2:	0f b6       	in	r0, 0x3f	; 63
    33b4:	f8 94       	cli
    33b6:	de bf       	out	0x3e, r29	; 62
    33b8:	0f be       	out	0x3f, r0	; 63
    33ba:	cd bf       	out	0x3d, r28	; 61
    33bc:	09 94       	ijmp

000033be <__epilogue_restores__>:
    33be:	2a 88       	ldd	r2, Y+18	; 0x12
    33c0:	39 88       	ldd	r3, Y+17	; 0x11
    33c2:	48 88       	ldd	r4, Y+16	; 0x10
    33c4:	5f 84       	ldd	r5, Y+15	; 0x0f
    33c6:	6e 84       	ldd	r6, Y+14	; 0x0e
    33c8:	7d 84       	ldd	r7, Y+13	; 0x0d
    33ca:	8c 84       	ldd	r8, Y+12	; 0x0c
    33cc:	9b 84       	ldd	r9, Y+11	; 0x0b
    33ce:	aa 84       	ldd	r10, Y+10	; 0x0a
    33d0:	b9 84       	ldd	r11, Y+9	; 0x09
    33d2:	c8 84       	ldd	r12, Y+8	; 0x08
    33d4:	df 80       	ldd	r13, Y+7	; 0x07
    33d6:	ee 80       	ldd	r14, Y+6	; 0x06
    33d8:	fd 80       	ldd	r15, Y+5	; 0x05
    33da:	0c 81       	ldd	r16, Y+4	; 0x04
    33dc:	1b 81       	ldd	r17, Y+3	; 0x03
    33de:	aa 81       	ldd	r26, Y+2	; 0x02
    33e0:	b9 81       	ldd	r27, Y+1	; 0x01
    33e2:	ce 0f       	add	r28, r30
    33e4:	d1 1d       	adc	r29, r1
    33e6:	0f b6       	in	r0, 0x3f	; 63
    33e8:	f8 94       	cli
    33ea:	de bf       	out	0x3e, r29	; 62
    33ec:	0f be       	out	0x3f, r0	; 63
    33ee:	cd bf       	out	0x3d, r28	; 61
    33f0:	ed 01       	movw	r28, r26
    33f2:	08 95       	ret

000033f4 <_exit>:
    33f4:	f8 94       	cli

000033f6 <__stop_program>:
    33f6:	ff cf       	rjmp	.-2      	; 0x33f6 <__stop_program>
